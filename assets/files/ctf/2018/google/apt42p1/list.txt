LOAD:0000000000400000 ;
LOAD:0000000000400000 ; +-------------------------------------------------------------------------+
LOAD:0000000000400000 ; |   This file has been generated by The Interactive Disassembler (IDA)    |
LOAD:0000000000400000 ; |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
LOAD:0000000000400000 ; |                      License info: 48-3FBD-7F04-2C                      |
LOAD:0000000000400000 ; |                      Jiang Ying, Personal license                       |
LOAD:0000000000400000 ; +-------------------------------------------------------------------------+
LOAD:0000000000400000 ;
LOAD:0000000000400000 ; Input SHA256 : 287688AB3931D9FD66407FFAE73C329B1EF4ACC1E0F9D99AADA5AAD3CB0E6844
LOAD:0000000000400000 ; Input MD5    : 815E277B37BF0CEA2F53CB678790CC68
LOAD:0000000000400000 ; Input CRC32  : 7052FA7E
LOAD:0000000000400000
LOAD:0000000000400000 ; File Name   : b:\vm\sh\ctf\google\ntpdate-9754f5add12f4a19bf772f248f96c142ccc1ec011a59e76e192e8c0e2afb5291\2\ntpdate2
LOAD:0000000000400000 ; Format      : ELF64 for x86-64 (Executable)
LOAD:0000000000400000 ; Imagebase   : 400000
LOAD:0000000000400000 ; Interpreter '/lib64/ld-linux-x86-64.so.2'
LOAD:0000000000400000 ; Needed Library 'libstdc++.so.6'
LOAD:0000000000400000 ; Needed Library 'libm.so.6'
LOAD:0000000000400000 ; Needed Library 'libgcc_s.so.1'
LOAD:0000000000400000 ; Needed Library 'libc.so.6'
LOAD:0000000000400000 ;
LOAD:0000000000400000 ; Source File : 'crtstuff.c'
LOAD:0000000000400000 ; Source File : 'main.cc'
LOAD:0000000000400000 ; Source File : 'times.cc'
LOAD:0000000000400000 ; Source File : 'crtstuff.c'
LOAD:0000000000400000
LOAD:0000000000400000                 .686p
LOAD:0000000000400000                 .mmx
LOAD:0000000000400000                 .model flat
LOAD:0000000000400000 .intel_syntax noprefix
LOAD:0000000000400000
LOAD:0000000000400000 ; ===========================================================================
LOAD:0000000000400000
LOAD:0000000000400000 ; Segment type: Pure code
LOAD:0000000000400000 ; Segment permissions: Read/Execute
LOAD:0000000000400000 LOAD            segment byte public 'CODE' use64
LOAD:0000000000400000                 assume cs:LOAD
LOAD:0000000000400000                 ;org 400000h
LOAD:0000000000400000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:0000000000400000 dword_400000    dd 464C457Fh            ; DATA XREF: LOAD:00000000004000C0↓o
LOAD:0000000000400000                                         ; File format: \x7FELF
LOAD:0000000000400004                 db 2                    ; File class: 64-bit
LOAD:0000000000400005                 db 1                    ; Data encoding: little-endian
LOAD:0000000000400006                 db 1                    ; File version
LOAD:0000000000400007                 db 0                    ; OS/ABI: UNIX System V ABI
LOAD:0000000000400008                 db 0                    ; ABI Version
LOAD:0000000000400009                 db 7 dup(0)             ; Padding
LOAD:0000000000400010                 dw 2                    ; File type: Executable
LOAD:0000000000400012                 dw 3Eh                  ; Machine: x86-64
LOAD:0000000000400014                 dd 1                    ; File version
LOAD:0000000000400018                 dq offset _start        ; Entry point
LOAD:0000000000400020                 dq 40h                  ; PHT file offset
LOAD:0000000000400028                 dq 0D0B0h               ; SHT file offset
LOAD:0000000000400030                 dd 0                    ; Processor-specific flags
LOAD:0000000000400034                 dw 40h                  ; ELF header size
LOAD:0000000000400036                 dw 38h                  ; PHT entry size
LOAD:0000000000400038                 dw 9                    ; Number of entries in PHT
LOAD:000000000040003A                 dw 40h                  ; SHT entry size
LOAD:000000000040003C                 dw 1Dh                  ; Number of entries in SHT
LOAD:000000000040003E                 dw 1Ch                  ; SHT entry index for string table
LOAD:0000000000400040 ; ELF64 Program Header
LOAD:0000000000400040 ; PHT Entry 0
LOAD:0000000000400040 dword_400040    dd 6                    ; DATA XREF: LOAD:0000000000400050↓o
LOAD:0000000000400040                                         ; Type: PHDR
LOAD:0000000000400044                 dd 4                    ; Flags
LOAD:0000000000400048                 dq 40h                  ; File offset
LOAD:0000000000400050                 dq offset dword_400040  ; Virtual address
LOAD:0000000000400058                 dq 400040h              ; Physical address
LOAD:0000000000400060                 dq 1F8h                 ; Size in file image
LOAD:0000000000400068                 dq 1F8h                 ; Size in memory image
LOAD:0000000000400070                 dq 8                    ; Alignment
LOAD:0000000000400078 ; PHT Entry 1
LOAD:0000000000400078                 dd 3                    ; Type: INTERP
LOAD:000000000040007C                 dd 4                    ; Flags
LOAD:0000000000400080                 dq 238h                 ; File offset
LOAD:0000000000400088                 dq offset aLib64LdLinuxX8 ; Virtual address
LOAD:0000000000400090                 dq 400238h              ; Physical address
LOAD:0000000000400098                 dq 1Ch                  ; Size in file image
LOAD:00000000004000A0                 dq 1Ch                  ; Size in memory image
LOAD:00000000004000A8                 dq 1                    ; Alignment
LOAD:00000000004000B0 ; PHT Entry 2
LOAD:00000000004000B0                 dd 1                    ; Type: LOAD
LOAD:00000000004000B4                 dd 5                    ; Flags
LOAD:00000000004000B8                 dq 0                    ; File offset
LOAD:00000000004000C0                 dq offset dword_400000  ; Virtual address
LOAD:00000000004000C8                 dq 400000h              ; Physical address
LOAD:00000000004000D0                 dq 0BBC8h               ; Size in file image
LOAD:00000000004000D8                 dq 0BBC8h               ; Size in memory image
LOAD:00000000004000E0                 dq 200000h              ; Alignment
LOAD:00000000004000E8 ; PHT Entry 3
LOAD:00000000004000E8                 dd 1                    ; Type: LOAD
LOAD:00000000004000EC                 dd 6                    ; Flags
LOAD:00000000004000F0                 dq 0BDC8h               ; File offset
LOAD:00000000004000F8                 dq offset __frame_dummy_init_array_entry ; Virtual address
LOAD:0000000000400100                 dq 60BDC8h              ; Physical address
LOAD:0000000000400108                 dq 4A8h                 ; Size in file image
LOAD:0000000000400110                 dq 628h                 ; Size in memory image
LOAD:0000000000400118                 dq 200000h              ; Alignment
LOAD:0000000000400120 ; PHT Entry 4
LOAD:0000000000400120                 dd 2                    ; Type: DYNAMIC
LOAD:0000000000400124                 dd 6                    ; Flags
LOAD:0000000000400128                 dq 0BDE0h               ; File offset
LOAD:0000000000400130                 dq offset _DYNAMIC      ; Virtual address
LOAD:0000000000400138                 dq 60BDE0h              ; Physical address
LOAD:0000000000400140                 dq 200h                 ; Size in file image
LOAD:0000000000400148                 dq 200h                 ; Size in memory image
LOAD:0000000000400150                 dq 8                    ; Alignment
LOAD:0000000000400158 ; PHT Entry 5
LOAD:0000000000400158                 dd 4                    ; Type: NOTE
LOAD:000000000040015C                 dd 4                    ; Flags
LOAD:0000000000400160                 dq 254h                 ; File offset
LOAD:0000000000400168                 dq offset dword_400254  ; Virtual address
LOAD:0000000000400170                 dq 400254h              ; Physical address
LOAD:0000000000400178                 dq 44h                  ; Size in file image
LOAD:0000000000400180                 dq 44h                  ; Size in memory image
LOAD:0000000000400188                 dq 4                    ; Alignment
LOAD:0000000000400190 ; PHT Entry 6
LOAD:0000000000400190                 dd 6474E550h            ; Type: EH_FRAME
LOAD:0000000000400194                 dd 4                    ; Flags
LOAD:0000000000400198                 dq 0B444h               ; File offset
LOAD:00000000004001A0                 dq offset __GNU_EH_FRAME_HDR ; Virtual address
LOAD:00000000004001A8                 dq 40B444h              ; Physical address
LOAD:00000000004001B0                 dq 16Ch                 ; Size in file image
LOAD:00000000004001B8                 dq 16Ch                 ; Size in memory image
LOAD:00000000004001C0                 dq 4                    ; Alignment
LOAD:00000000004001C8 ; PHT Entry 7
LOAD:00000000004001C8                 dd 6474E551h            ; Type: STACK
LOAD:00000000004001CC                 dd 6                    ; Flags
LOAD:00000000004001D0                 dq 0                    ; File offset
LOAD:00000000004001D8                 dq 0                    ; Virtual address
LOAD:00000000004001E0                 dq 0                    ; Physical address
LOAD:00000000004001E8                 dq 0                    ; Size in file image
LOAD:00000000004001F0                 dq 0                    ; Size in memory image
LOAD:00000000004001F8                 dq 10h                  ; Alignment
LOAD:0000000000400200 ; PHT Entry 8
LOAD:0000000000400200                 dd 6474E552h            ; Type: RO-AFTER
LOAD:0000000000400204                 dd 4                    ; Flags
LOAD:0000000000400208                 dq 0BDC8h               ; File offset
LOAD:0000000000400210                 dq offset __frame_dummy_init_array_entry ; Virtual address
LOAD:0000000000400218                 dq 60BDC8h              ; Physical address
LOAD:0000000000400220                 dq 238h                 ; Size in file image
LOAD:0000000000400228                 dq 238h                 ; Size in memory image
LOAD:0000000000400230                 dq 1                    ; Alignment
LOAD:0000000000400238 aLib64LdLinuxX8 db '/lib64/ld-linux-x86-64.so.2',0
LOAD:0000000000400238                                         ; DATA XREF: LOAD:0000000000400088↑o
LOAD:0000000000400254 dword_400254    dd 4                    ; DATA XREF: LOAD:0000000000400168↑o
LOAD:0000000000400258                 dq 100000010h, 554E47h, 600000002h, 400000020h, 300000014h
LOAD:0000000000400258                 dq 4EE7D1DB00554E47h, 0F225841144A722FBh, 166D8BC848E85121h
LOAD:0000000000400298 ; ELF GNU Hash Table
LOAD:0000000000400298 elf_gnu_hash_nbuckets dd 2
LOAD:000000000040029C elf_gnu_hash_symbias dd 18h
LOAD:00000000004002A0 elf_gnu_hash_bitmask_nwords dd 1
LOAD:00000000004002A4 elf_gnu_hash_shift dd 6
LOAD:00000000004002A8 elf_gnu_hash_indexes dq 100100000h
LOAD:00000000004002B0 elf_gnu_hash_bucket dd 18h, 0
LOAD:00000000004002B8 elf_gnu_hash_chain dd 430C9815h, 0
LOAD:00000000004002C0 ; ELF Symbol Table
LOAD:00000000004002C0                 Elf64_Sym <0>
LOAD:00000000004002D8                 Elf64_Sym <offset aZnsolsel - offset byte_400518, 12h, 0, 0, 0, 0> ; "_ZNSolsEl"
LOAD:00000000004002F0                 Elf64_Sym <offset aClose - offset byte_400518, 12h, 0, 0, 0, 0> ; "close"
LOAD:0000000000400308                 Elf64_Sym <offset aAsctime - offset byte_400518, 12h, 0, 0, 0, 0> ; "asctime"
LOAD:0000000000400320                 Elf64_Sym <offset aIsatty - offset byte_400518, 12h, 0, 0, 0, 0> ; "isatty"
LOAD:0000000000400338                 Elf64_Sym <offset aGethostbyname - offset byte_400518, 12h, 0, 0, 0, \ ; "gethostbyname"
LOAD:0000000000400338                            0>
LOAD:0000000000400350                 Elf64_Sym <offset aGmonStart - offset byte_400518, 20h, 0, 0, 0, 0> ; "__gmon_start__"
LOAD:0000000000400368                 Elf64_Sym <offset aHtons - offset byte_400518, 12h, 0, 0, 0, 0> ; "htons"
LOAD:0000000000400380                 Elf64_Sym <offset aZnst8iosBase4i_0 - offset byte_400518, 12h, 0, 0, \ ; "_ZNSt8ios_base4InitC1Ev"
LOAD:0000000000400380                            0, 0>
LOAD:0000000000400398                 Elf64_Sym <offset aLibcStartMain - offset byte_400518, 12h, 0, 0, 0, \ ; "__libc_start_main"
LOAD:0000000000400398                            0>
LOAD:00000000004003B0                 Elf64_Sym <offset aRecv - offset byte_400518, 12h, 0, 0, 0, 0> ; "recv"
LOAD:00000000004003C8                 Elf64_Sym <offset aCxaAtexit - offset byte_400518, 12h, 0, 0, 0, 0> ; "__cxa_atexit"
LOAD:00000000004003E0                 Elf64_Sym <offset aZnst8iosBase4i - offset byte_400518, 12h, 0, 0, 0, \ ; "_ZNSt8ios_base4InitD1Ev"
LOAD:00000000004003E0                            0>
LOAD:00000000004003F8                 Elf64_Sym <offset aZstlsist11char - offset byte_400518, 12h, 0, 0, 0, \ ; "_ZStlsISt11char_traitsIcEERSt13basic_os"...
LOAD:00000000004003F8                            0>
LOAD:0000000000400410                 Elf64_Sym <offset aNtohl - offset byte_400518, 12h, 0, 0, 0, 0> ; "ntohl"
LOAD:0000000000400428                 Elf64_Sym <offset aSleep - offset byte_400518, 12h, 0, 0, 0, 0> ; "sleep"
LOAD:0000000000400440                 Elf64_Sym <offset aConnect - offset byte_400518, 12h, 0, 0, 0, 0> ; "connect"
LOAD:0000000000400458                 Elf64_Sym <offset aStime - offset byte_400518, 12h, 0, 0, 0, 0> ; "stime"
LOAD:0000000000400470                 Elf64_Sym <offset aSocket - offset byte_400518, 12h, 0, 0, 0, 0> ; "socket"
LOAD:0000000000400488                 Elf64_Sym <offset aSend - offset byte_400518, 12h, 0, 0, 0, 0> ; "send"
LOAD:00000000004004A0                 Elf64_Sym <offset aZnsolsepfrsosE - offset byte_400518, 12h, 0, 0, 0, \ ; "_ZNSolsEPFRSoS_E"
LOAD:00000000004004A0                            0>
LOAD:00000000004004B8                 Elf64_Sym <offset aZst4endlicst11 - offset byte_400518, 12h, 0, 0, 0, \ ; "_ZSt4endlIcSt11char_traitsIcEERSt13basi"...
LOAD:00000000004004B8                            0>
LOAD:00000000004004D0                 Elf64_Sym <offset aLocaltime - offset byte_400518, 12h, 0, 0, 0, 0> ; "localtime"
LOAD:00000000004004E8                 Elf64_Sym <offset aAsctime+3 - offset byte_400518, 12h, 0, 0, 0, 0> ; "time"
LOAD:0000000000400500                 Elf64_Sym <offset aZst4cout - offset byte_400518, 11h, 0, 18h, \ ; "_ZSt4cout"
LOAD:0000000000400500                            offset _ZSt4cout@@GLIBCXX_3_4, 110h>
LOAD:0000000000400518 ; ELF String Table
LOAD:0000000000400518 byte_400518     db 0                    ; DATA XREF: LOAD:00000000004002D8↑o
LOAD:0000000000400518                                         ; LOAD:00000000004002F0↑o ...
LOAD:0000000000400519 aLibstdcSo6     db 'libstdc++.so.6',0
LOAD:0000000000400528 aGmonStart      db '__gmon_start__',0   ; DATA XREF: LOAD:0000000000400350↑o
LOAD:0000000000400537 aZnst8iosBase4i db '_ZNSt8ios_base4InitD1Ev',0
LOAD:0000000000400537                                         ; DATA XREF: LOAD:00000000004003E0↑o
LOAD:000000000040054F aZnsolsepfrsosE db '_ZNSolsEPFRSoS_E',0 ; DATA XREF: LOAD:00000000004004A0↑o
LOAD:0000000000400560 aZst4endlicst11 db '_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_',0
LOAD:0000000000400560                                         ; DATA XREF: LOAD:00000000004004B8↑o
LOAD:000000000040059B aZnst8iosBase4i_0 db '_ZNSt8ios_base4InitC1Ev',0
LOAD:000000000040059B                                         ; DATA XREF: LOAD:0000000000400380↑o
LOAD:00000000004005B3 aZstlsist11char db '_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc',0
LOAD:00000000004005B3                                         ; DATA XREF: LOAD:00000000004003F8↑o
LOAD:00000000004005EB aZst4cout       db '_ZSt4cout',0        ; DATA XREF: LOAD:0000000000400500↑o
LOAD:00000000004005F5 aZnsolsel       db '_ZNSolsEl',0        ; DATA XREF: LOAD:00000000004002D8↑o
LOAD:00000000004005FF aLibmSo6        db 'libm.so.6',0
LOAD:0000000000400609 aLibgccSSo1     db 'libgcc_s.so.1',0
LOAD:0000000000400617 aLibcSo6        db 'libc.so.6',0
LOAD:0000000000400621 aSocket         db 'socket',0           ; DATA XREF: LOAD:0000000000400470↑o
LOAD:0000000000400628 aHtons          db 'htons',0            ; DATA XREF: LOAD:0000000000400368↑o
LOAD:000000000040062E aConnect        db 'connect',0          ; DATA XREF: LOAD:0000000000400440↑o
LOAD:0000000000400636 aIsatty         db 'isatty',0           ; DATA XREF: LOAD:0000000000400320↑o
LOAD:000000000040063D aCxaAtexit      db '__cxa_atexit',0     ; DATA XREF: LOAD:00000000004003C8↑o
LOAD:000000000040064A aSend           db 'send',0             ; DATA XREF: LOAD:0000000000400488↑o
LOAD:000000000040064F aAsctime        db 'asctime',0          ; DATA XREF: LOAD:0000000000400308↑o
LOAD:000000000040064F                                         ; LOAD:00000000004004E8↑o
LOAD:0000000000400657 aRecv           db 'recv',0             ; DATA XREF: LOAD:00000000004003B0↑o
LOAD:000000000040065C aGethostbyname  db 'gethostbyname',0    ; DATA XREF: LOAD:0000000000400338↑o
LOAD:000000000040066A aStime          db 'stime',0            ; DATA XREF: LOAD:0000000000400458↑o
LOAD:0000000000400670 aClose          db 'close',0            ; DATA XREF: LOAD:00000000004002F0↑o
LOAD:0000000000400676 aLocaltime      db 'localtime',0        ; DATA XREF: LOAD:00000000004004D0↑o
LOAD:0000000000400680 aSleep          db 'sleep',0            ; DATA XREF: LOAD:0000000000400428↑o
LOAD:0000000000400686 aLibcStartMain  db '__libc_start_main',0
LOAD:0000000000400686                                         ; DATA XREF: LOAD:0000000000400398↑o
LOAD:0000000000400698 aNtohl          db 'ntohl',0            ; DATA XREF: LOAD:0000000000400410↑o
LOAD:000000000040069E aGlibc225       db 'GLIBC_2.2.5',0
LOAD:00000000004006AA aGlibcxx34      db 'GLIBCXX_3.4',0
LOAD:00000000004006B6                 align 8
LOAD:00000000004006B8                 dq 3000300030002h, 2000300000003h, 2000300030003h, 3000300030002h
LOAD:00000000004006B8                 dq 2000300030003h, 2000300030002h, 0FF00010001h, 2000000010h
LOAD:00000000004006B8                 dq 3000009691A75h, 186h, 100010001h, 10h, 2000008922974h
LOAD:00000000004006B8                 dq 192h
LOAD:0000000000400728 ; ELF RELA Relocation Table
LOAD:0000000000400728                 Elf64_Rela <60BFE0h, 600000006h, 0> ; R_X86_64_GLOB_DAT __gmon_start__
LOAD:0000000000400740                 Elf64_Rela <60BFE8h, 900000006h, 0> ; R_X86_64_GLOB_DAT __libc_start_main
LOAD:0000000000400758                 Elf64_Rela <60BFF0h, 0C00000006h, 0> ; R_X86_64_GLOB_DAT _ZNSt8ios_base4InitD1Ev
LOAD:0000000000400770                 Elf64_Rela <60BFF8h, 1500000006h, 0> ; R_X86_64_GLOB_DAT _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
LOAD:0000000000400788                 Elf64_Rela <60C280h, 1800000005h, 0> ; R_X86_64_COPY _ZSt4cout
LOAD:00000000004007A0 ; ELF JMPREL Relocation Table
LOAD:00000000004007A0                 Elf64_Rela <60C018h, 100000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSolsEl
LOAD:00000000004007B8                 Elf64_Rela <60C020h, 200000007h, 0> ; R_X86_64_JUMP_SLOT close
LOAD:00000000004007D0                 Elf64_Rela <60C028h, 300000007h, 0> ; R_X86_64_JUMP_SLOT asctime
LOAD:00000000004007E8                 Elf64_Rela <60C030h, 400000007h, 0> ; R_X86_64_JUMP_SLOT isatty
LOAD:0000000000400800                 Elf64_Rela <60C038h, 500000007h, 0> ; R_X86_64_JUMP_SLOT gethostbyname
LOAD:0000000000400818                 Elf64_Rela <60C040h, 700000007h, 0> ; R_X86_64_JUMP_SLOT htons
LOAD:0000000000400830                 Elf64_Rela <60C048h, 800000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSt8ios_base4InitC1Ev
LOAD:0000000000400848                 Elf64_Rela <60C050h, 0A00000007h, 0> ; R_X86_64_JUMP_SLOT recv
LOAD:0000000000400860                 Elf64_Rela <60C058h, 0B00000007h, 0> ; R_X86_64_JUMP_SLOT __cxa_atexit
LOAD:0000000000400878                 Elf64_Rela <60C060h, 0D00000007h, 0> ; R_X86_64_JUMP_SLOT _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
LOAD:0000000000400890                 Elf64_Rela <60C068h, 0E00000007h, 0> ; R_X86_64_JUMP_SLOT ntohl
LOAD:00000000004008A8                 Elf64_Rela <60C070h, 0F00000007h, 0> ; R_X86_64_JUMP_SLOT sleep
LOAD:00000000004008C0                 Elf64_Rela <60C078h, 1000000007h, 0> ; R_X86_64_JUMP_SLOT connect
LOAD:00000000004008D8                 Elf64_Rela <60C080h, 1100000007h, 0> ; R_X86_64_JUMP_SLOT stime
LOAD:00000000004008F0                 Elf64_Rela <60C088h, 1200000007h, 0> ; R_X86_64_JUMP_SLOT socket
LOAD:0000000000400908                 Elf64_Rela <60C090h, 1300000007h, 0> ; R_X86_64_JUMP_SLOT send
LOAD:0000000000400920                 Elf64_Rela <60C098h, 1400000007h, 0> ; R_X86_64_JUMP_SLOT _ZNSolsEPFRSoS_E
LOAD:0000000000400938                 Elf64_Rela <60C0A0h, 1600000007h, 0> ; R_X86_64_JUMP_SLOT localtime
LOAD:0000000000400950                 Elf64_Rela <60C0A8h, 1700000007h, 0> ; R_X86_64_JUMP_SLOT time
LOAD:0000000000400950 LOAD            ends
LOAD:0000000000400950
.init:0000000000400968 ; ===========================================================================
.init:0000000000400968
.init:0000000000400968 ; Segment type: Pure code
.init:0000000000400968 ; Segment permissions: Read/Execute
.init:0000000000400968 _init           segment dword public 'CODE' use64
.init:0000000000400968                 assume cs:_init
.init:0000000000400968                 ;org 400968h
.init:0000000000400968                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.init:0000000000400968
.init:0000000000400968 ; =============== S U B R O U T I N E =======================================
.init:0000000000400968
.init:0000000000400968
.init:0000000000400968                 public _init_proc
.init:0000000000400968 _init_proc      proc near               ; CODE XREF: __libc_csu_init+2C↓p
.init:0000000000400968                 sub     rsp, 8          ; _init
.init:000000000040096C                 mov     rax, cs:__gmon_start___ptr
.init:0000000000400973                 test    rax, rax
.init:0000000000400976                 jz      short loc_40097A
.init:0000000000400978                 call    rax ; __gmon_start__
.init:000000000040097A
.init:000000000040097A loc_40097A:                             ; CODE XREF: _init_proc+E↑j
.init:000000000040097A                 add     rsp, 8
.init:000000000040097E                 retn
.init:000000000040097E _init_proc      endp
.init:000000000040097E
.init:000000000040097E _init           ends
.init:000000000040097E
LOAD:000000000040097F ; ===========================================================================
LOAD:000000000040097F
LOAD:000000000040097F ; Segment type: Pure code
LOAD:000000000040097F ; Segment permissions: Read/Execute
LOAD:000000000040097F LOAD            segment byte public 'CODE' use64
LOAD:000000000040097F                 assume cs:LOAD
LOAD:000000000040097F                 ;org 40097Fh
LOAD:000000000040097F                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:000000000040097F                 align 20h
LOAD:000000000040097F LOAD            ends
LOAD:000000000040097F
.plt:0000000000400980 ; ===========================================================================
.plt:0000000000400980
.plt:0000000000400980 ; Segment type: Pure code
.plt:0000000000400980 ; Segment permissions: Read/Execute
.plt:0000000000400980 _plt            segment para public 'CODE' use64
.plt:0000000000400980                 assume cs:_plt
.plt:0000000000400980                 ;org 400980h
.plt:0000000000400980                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.plt:0000000000400980
.plt:0000000000400980 ; =============== S U B R O U T I N E =======================================
.plt:0000000000400980
.plt:0000000000400980
.plt:0000000000400980 sub_400980      proc near               ; CODE XREF: .plt:000000000040099B↓j
.plt:0000000000400980                                         ; .plt:00000000004009AB↓j ...
.plt:0000000000400980 ; __unwind {
.plt:0000000000400980                 push    cs:qword_60C008
.plt:0000000000400986                 jmp     cs:qword_60C010
.plt:0000000000400986 sub_400980      endp
.plt:0000000000400986
.plt:0000000000400986 ; ---------------------------------------------------------------------------
.plt:000000000040098C                 align 10h
.plt:0000000000400990 ; [00000006 BYTES: COLLAPSED FUNCTION std::ostream::operator<<(long). PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400996 ; ---------------------------------------------------------------------------
.plt:0000000000400996                 push    0
.plt:000000000040099B                 jmp     sub_400980
.plt:00000000004009A0 ; [00000006 BYTES: COLLAPSED FUNCTION _close. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000000004009A6 ; ---------------------------------------------------------------------------
.plt:00000000004009A6                 push    1
.plt:00000000004009AB                 jmp     sub_400980
.plt:00000000004009B0 ; [00000006 BYTES: COLLAPSED FUNCTION _asctime. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000000004009B6 ; ---------------------------------------------------------------------------
.plt:00000000004009B6                 push    2
.plt:00000000004009BB                 jmp     sub_400980
.plt:00000000004009C0 ; [00000006 BYTES: COLLAPSED FUNCTION _isatty. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000000004009C6 ; ---------------------------------------------------------------------------
.plt:00000000004009C6                 push    3
.plt:00000000004009CB                 jmp     sub_400980
.plt:00000000004009D0 ; [00000006 BYTES: COLLAPSED FUNCTION _gethostbyname. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000000004009D6 ; ---------------------------------------------------------------------------
.plt:00000000004009D6                 push    4
.plt:00000000004009DB                 jmp     sub_400980
.plt:00000000004009E0 ; [00000006 BYTES: COLLAPSED FUNCTION _htons. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000000004009E6 ; ---------------------------------------------------------------------------
.plt:00000000004009E6                 push    5
.plt:00000000004009EB                 jmp     sub_400980
.plt:00000000004009F0 ; [00000006 BYTES: COLLAPSED FUNCTION std::ios_base::Init::Init(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:00000000004009F6 ; ---------------------------------------------------------------------------
.plt:00000000004009F6                 push    6
.plt:00000000004009FB                 jmp     sub_400980
.plt:0000000000400A00 ; [00000006 BYTES: COLLAPSED FUNCTION _recv. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A06 ; ---------------------------------------------------------------------------
.plt:0000000000400A06                 push    7
.plt:0000000000400A0B                 jmp     sub_400980
.plt:0000000000400A10 ; [00000006 BYTES: COLLAPSED FUNCTION ___cxa_atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A16 ; ---------------------------------------------------------------------------
.plt:0000000000400A16                 push    8
.plt:0000000000400A1B                 jmp     sub_400980
.plt:0000000000400A20 ; [00000006 BYTES: COLLAPSED FUNCTION std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*). PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A26 ; ---------------------------------------------------------------------------
.plt:0000000000400A26                 push    9
.plt:0000000000400A2B                 jmp     sub_400980
.plt:0000000000400A30 ; [00000006 BYTES: COLLAPSED FUNCTION _ntohl. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A36 ; ---------------------------------------------------------------------------
.plt:0000000000400A36                 push    0Ah
.plt:0000000000400A3B                 jmp     sub_400980
.plt:0000000000400A40
.plt:0000000000400A40 ; =============== S U B R O U T I N E =======================================
.plt:0000000000400A40
.plt:0000000000400A40 ; Attributes: thunk
.plt:0000000000400A40
.plt:0000000000400A40 sub_400A40      proc near               ; CODE XREF: main+33E↓p
.plt:0000000000400A40                 jmp     cs:off_60C070
.plt:0000000000400A40 sub_400A40      endp
.plt:0000000000400A40
.plt:0000000000400A46 ; ---------------------------------------------------------------------------
.plt:0000000000400A46                 push    0Bh
.plt:0000000000400A4B                 jmp     sub_400980
.plt:0000000000400A50 ; [00000006 BYTES: COLLAPSED FUNCTION _connect. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A56 ; ---------------------------------------------------------------------------
.plt:0000000000400A56                 push    0Ch
.plt:0000000000400A5B                 jmp     sub_400980
.plt:0000000000400A60 ; [00000006 BYTES: COLLAPSED FUNCTION _stime. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A66 ; ---------------------------------------------------------------------------
.plt:0000000000400A66                 push    0Dh
.plt:0000000000400A6B                 jmp     sub_400980
.plt:0000000000400A70 ; [00000006 BYTES: COLLAPSED FUNCTION _socket. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A76 ; ---------------------------------------------------------------------------
.plt:0000000000400A76                 push    0Eh
.plt:0000000000400A7B                 jmp     sub_400980
.plt:0000000000400A80 ; [00000006 BYTES: COLLAPSED FUNCTION _send. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A86 ; ---------------------------------------------------------------------------
.plt:0000000000400A86                 push    0Fh
.plt:0000000000400A8B                 jmp     sub_400980
.plt:0000000000400A90 ; [00000006 BYTES: COLLAPSED FUNCTION std::ostream::operator<<(std::ostream & (*)(std::ostream &)). PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400A96 ; ---------------------------------------------------------------------------
.plt:0000000000400A96                 push    10h
.plt:0000000000400A9B                 jmp     sub_400980
.plt:0000000000400AA0 ; [00000006 BYTES: COLLAPSED FUNCTION _localtime. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400AA6 ; ---------------------------------------------------------------------------
.plt:0000000000400AA6                 push    11h
.plt:0000000000400AAB                 jmp     sub_400980
.plt:0000000000400AB0 ; [00000006 BYTES: COLLAPSED FUNCTION _time. PRESS CTRL-NUMPAD+ TO EXPAND]
.plt:0000000000400AB6 ; ---------------------------------------------------------------------------
.plt:0000000000400AB6                 push    12h
.plt:0000000000400ABB                 jmp     sub_400980
.plt:0000000000400ABB ; } // starts at 400980
.plt:0000000000400ABB _plt            ends
.plt:0000000000400ABB
.text:0000000000400AC0 ; ===========================================================================
.text:0000000000400AC0
.text:0000000000400AC0 ; Segment type: Pure code
.text:0000000000400AC0 ; Segment permissions: Read/Execute
.text:0000000000400AC0 _text           segment para public 'CODE' use64
.text:0000000000400AC0                 assume cs:_text
.text:0000000000400AC0                 ;org 400AC0h
.text:0000000000400AC0                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:0000000000400AC0
.text:0000000000400AC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000400AC0
.text:0000000000400AC0 ; Attributes: noreturn
.text:0000000000400AC0
.text:0000000000400AC0                 public _start
.text:0000000000400AC0 _start          proc near               ; DATA XREF: LOAD:0000000000400018↑o
.text:0000000000400AC0 ; __unwind {
.text:0000000000400AC0                 xor     ebp, ebp
.text:0000000000400AC2                 mov     r9, rdx         ; rtld_fini
.text:0000000000400AC5                 pop     rsi             ; argc
.text:0000000000400AC6                 mov     rdx, rsp        ; ubp_av
.text:0000000000400AC9                 and     rsp, 0FFFFFFFFFFFFFFF0h
.text:0000000000400ACD                 push    rax
.text:0000000000400ACE                 push    rsp             ; stack_end
.text:0000000000400ACF                 mov     r8, offset __libc_csu_fini ; fini
.text:0000000000400AD6                 mov     rcx, offset __libc_csu_init ; init
.text:0000000000400ADD                 mov     rdi, offset main ; main
.text:0000000000400AE4                 call    cs:__libc_start_main_ptr
.text:0000000000400AEA                 hlt
.text:0000000000400AEA ; } // starts at 400AC0
.text:0000000000400AEA _start          endp
.text:0000000000400AEA
.text:0000000000400AEA ; ---------------------------------------------------------------------------
.text:0000000000400AEB                 align 10h
.text:0000000000400AF0
.text:0000000000400AF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000400AF0
.text:0000000000400AF0 ; Attributes: bp-based frame
.text:0000000000400AF0
.text:0000000000400AF0 deregister_tm_clones proc near          ; CODE XREF: __do_global_dtors_aux+D↓p
.text:0000000000400AF0                 push    rbp
.text:0000000000400AF1                 mov     eax, offset _edata
.text:0000000000400AF6                 cmp     rax, offset _edata
.text:0000000000400AFC                 mov     rbp, rsp
.text:0000000000400AFF                 jz      short loc_400B18
.text:0000000000400B01                 mov     eax, 0
.text:0000000000400B06                 test    rax, rax
.text:0000000000400B09                 jz      short loc_400B18
.text:0000000000400B0B                 pop     rbp
.text:0000000000400B0C                 mov     edi, offset _edata
.text:0000000000400B11                 jmp     rax
.text:0000000000400B11 ; ---------------------------------------------------------------------------
.text:0000000000400B13                 align 8
.text:0000000000400B18
.text:0000000000400B18 loc_400B18:                             ; CODE XREF: deregister_tm_clones+F↑j
.text:0000000000400B18                                         ; deregister_tm_clones+19↑j
.text:0000000000400B18                 pop     rbp
.text:0000000000400B19                 retn
.text:0000000000400B19 deregister_tm_clones endp
.text:0000000000400B19
.text:0000000000400B19 ; ---------------------------------------------------------------------------
.text:0000000000400B1A                 align 20h
.text:0000000000400B20
.text:0000000000400B20 ; =============== S U B R O U T I N E =======================================
.text:0000000000400B20
.text:0000000000400B20 ; Attributes: bp-based frame
.text:0000000000400B20
.text:0000000000400B20 register_tm_clones proc near            ; CODE XREF: frame_dummy+5↓j
.text:0000000000400B20                 mov     esi, offset _edata
.text:0000000000400B25                 push    rbp
.text:0000000000400B26                 sub     rsi, offset _edata
.text:0000000000400B2D                 mov     rbp, rsp
.text:0000000000400B30                 sar     rsi, 3
.text:0000000000400B34                 mov     rax, rsi
.text:0000000000400B37                 shr     rax, 3Fh
.text:0000000000400B3B                 add     rsi, rax
.text:0000000000400B3E                 sar     rsi, 1
.text:0000000000400B41                 jz      short loc_400B58
.text:0000000000400B43                 mov     eax, 0
.text:0000000000400B48                 test    rax, rax
.text:0000000000400B4B                 jz      short loc_400B58
.text:0000000000400B4D                 pop     rbp
.text:0000000000400B4E                 mov     edi, offset _edata
.text:0000000000400B53                 jmp     rax
.text:0000000000400B53 ; ---------------------------------------------------------------------------
.text:0000000000400B55                 align 8
.text:0000000000400B58
.text:0000000000400B58 loc_400B58:                             ; CODE XREF: register_tm_clones+21↑j
.text:0000000000400B58                                         ; register_tm_clones+2B↑j
.text:0000000000400B58                 pop     rbp
.text:0000000000400B59                 retn
.text:0000000000400B59 register_tm_clones endp
.text:0000000000400B59
.text:0000000000400B59 ; ---------------------------------------------------------------------------
.text:0000000000400B5A                 align 20h
.text:0000000000400B60
.text:0000000000400B60 ; =============== S U B R O U T I N E =======================================
.text:0000000000400B60
.text:0000000000400B60
.text:0000000000400B60 __do_global_dtors_aux proc near         ; DATA XREF: .fini_array:__do_global_dtors_aux_fini_array_entry↓o
.text:0000000000400B60                 cmp     cs:byte_60C390, 0
.text:0000000000400B67                 jnz     short locret_400B80
.text:0000000000400B69                 push    rbp
.text:0000000000400B6A                 mov     rbp, rsp
.text:0000000000400B6D                 call    deregister_tm_clones
.text:0000000000400B72                 mov     cs:byte_60C390, 1
.text:0000000000400B79                 pop     rbp
.text:0000000000400B7A                 retn
.text:0000000000400B7A ; ---------------------------------------------------------------------------
.text:0000000000400B7B                 align 20h
.text:0000000000400B80
.text:0000000000400B80 locret_400B80:                          ; CODE XREF: __do_global_dtors_aux+7↑j
.text:0000000000400B80                 rep retn
.text:0000000000400B80 __do_global_dtors_aux endp
.text:0000000000400B80
.text:0000000000400B80 ; ---------------------------------------------------------------------------
.text:0000000000400B82                 align 10h
.text:0000000000400B90
.text:0000000000400B90 ; =============== S U B R O U T I N E =======================================
.text:0000000000400B90
.text:0000000000400B90 ; Attributes: bp-based frame
.text:0000000000400B90
.text:0000000000400B90 frame_dummy     proc near               ; DATA XREF: .init_array:__frame_dummy_init_array_entry↓o
.text:0000000000400B90                 push    rbp
.text:0000000000400B91                 mov     rbp, rsp
.text:0000000000400B94                 pop     rbp
.text:0000000000400B95                 jmp     short register_tm_clones
.text:0000000000400B95 frame_dummy     endp
.text:0000000000400B95
.text:0000000000400B97
.text:0000000000400B97 ; =============== S U B R O U T I N E =======================================
.text:0000000000400B97
.text:0000000000400B97 ; Attributes: bp-based frame
.text:0000000000400B97
.text:0000000000400B97 sub_400B97      proc near               ; CODE XREF: sub_408E38+48↓p
.text:0000000000400B97
.text:0000000000400B97 var_20          = qword ptr -20h
.text:0000000000400B97 var_14          = dword ptr -14h
.text:0000000000400B97 var_10          = qword ptr -10h
.text:0000000000400B97 var_8           = qword ptr -8
.text:0000000000400B97
.text:0000000000400B97 ; __unwind {
.text:0000000000400B97                 push    rbp
.text:0000000000400B98                 mov     rbp, rsp
.text:0000000000400B9B                 sub     rsp, 20h
.text:0000000000400B9F                 nop
.text:0000000000400BA0                 nop
.text:0000000000400BA1                 nop
.text:0000000000400BA2                 nop
.text:0000000000400BA3                 nop
.text:0000000000400BA4                 nop
.text:0000000000400BA5                 nop
.text:0000000000400BA6                 nop
.text:0000000000400BA7                 nop
.text:0000000000400BA8                 nop
.text:0000000000400BA9                 nop
.text:0000000000400BAA                 nop
.text:0000000000400BAB                 nop
.text:0000000000400BAC                 nop
.text:0000000000400BAD                 nop
.text:0000000000400BAE                 nop
.text:0000000000400BAF                 nop
.text:0000000000400BB0                 nop
.text:0000000000400BB1                 nop
.text:0000000000400BB2                 nop
.text:0000000000400BB3                 nop
.text:0000000000400BB4
.text:0000000000400BB4 loc_400BB4:                             ; CODE XREF: sub_400B97+140↓j
.text:0000000000400BB4                 lea     rax, loc_40AF22
.text:0000000000400BBB                 mov     [rbp+var_8], rax
.text:0000000000400BBF                 mov     rax, 419B18C38F45C3CBh
.text:0000000000400BC9                 mov     [rbp+var_10], rax
.text:0000000000400BCD                 mov     [rbp+var_14], 8
.text:0000000000400BD4                 call    getMem
.text:0000000000400BD9                 mov     [rbp+var_20], rax
.text:0000000000400BDD                 mov     rax, [rbp+var_20]
.text:0000000000400BE1                 movzx   eax, byte ptr [rax]
.text:0000000000400BE4                 movzx   eax, al
.text:0000000000400BE7                 lea     ecx, [rax+3]
.text:0000000000400BEA                 mov     edx, 66666667h
.text:0000000000400BEF                 mov     eax, ecx
.text:0000000000400BF1                 imul    edx
.text:0000000000400BF3                 sar     edx, 2
.text:0000000000400BF6                 mov     eax, ecx
.text:0000000000400BF8                 sar     eax, 1Fh
.text:0000000000400BFB                 sub     edx, eax
.text:0000000000400BFD                 mov     eax, edx
.text:0000000000400BFF                 shl     eax, 2
.text:0000000000400C02                 add     eax, edx
.text:0000000000400C04                 add     eax, eax
.text:0000000000400C06                 sub     ecx, eax
.text:0000000000400C08                 mov     edx, ecx
.text:0000000000400C0A                 mov     rax, [rbp+var_20]
.text:0000000000400C0E                 mov     [rax], dl
.text:0000000000400C10                 sub     [rbp+var_14], 1
.text:0000000000400C14
.text:0000000000400C14 loc_400C14:                             ; CODE XREF: sub_400B97+F3↓j
.text:0000000000400C14                 cmp     [rbp+var_14], 0
.text:0000000000400C18                 js      short loc_400C8C
.text:0000000000400C1A                 mov     rdx, [rbp+var_10]
.text:0000000000400C1E                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000400C28                 imul    rax, rdx
.text:0000000000400C2C                 add     rax, 1
.text:0000000000400C30                 mov     [rbp+var_10], rax
.text:0000000000400C34                 mov     eax, [rbp+var_14]
.text:0000000000400C37                 sar     eax, 2
.text:0000000000400C3A                 cdqe
.text:0000000000400C3C                 lea     rdx, ds:0[rax*4]
.text:0000000000400C44                 mov     rax, [rbp+var_8]
.text:0000000000400C48                 add     rax, rdx
.text:0000000000400C4B                 mov     edx, [rax]
.text:0000000000400C4D                 mov     rax, [rbp+var_10]
.text:0000000000400C51                 shr     rax, 20h
.text:0000000000400C55                 mov     esi, eax
.text:0000000000400C57                 mov     rax, [rbp+var_20]
.text:0000000000400C5B                 movzx   eax, byte ptr [rax]
.text:0000000000400C5E                 movzx   eax, al
.text:0000000000400C61                 mov     ecx, [rbp+var_14]
.text:0000000000400C64                 mov     edi, ecx
.text:0000000000400C66                 sar     edi, 2
.text:0000000000400C69                 xor     esi, edx
.text:0000000000400C6B                 mov     rcx, [rbp+var_20]
.text:0000000000400C6F                 movsxd  rdi, edi
.text:0000000000400C72                 movsxd  rdx, eax
.text:0000000000400C75                 mov     rax, rdx
.text:0000000000400C78                 shl     rax, 3
.text:0000000000400C7C                 add     rax, rdx
.text:0000000000400C7F                 add     rax, rdi
.text:0000000000400C82                 mov     [rcx+rax*4+4], esi
.text:0000000000400C86                 sub     [rbp+var_14], 4
.text:0000000000400C8A                 jmp     short loc_400C14
.text:0000000000400C8C ; ---------------------------------------------------------------------------
.text:0000000000400C8C
.text:0000000000400C8C loc_400C8C:                             ; CODE XREF: sub_400B97+81↑j
.text:0000000000400C8C                 mov     rax, [rbp+var_20]
.text:0000000000400C90                 movzx   eax, byte ptr [rax]
.text:0000000000400C93                 movzx   eax, al
.text:0000000000400C96                 movsxd  rdx, eax
.text:0000000000400C99                 mov     rax, rdx
.text:0000000000400C9C                 shl     rax, 3
.text:0000000000400CA0                 add     rax, rdx
.text:0000000000400CA3                 shl     rax, 2
.text:0000000000400CA7                 mov     rdx, [rbp+var_20]
.text:0000000000400CAB                 add     rax, rdx
.text:0000000000400CAE                 add     rax, 4
.text:0000000000400CB2                 mov     ecx, 1
.text:0000000000400CB7                 mov     edx, 0
.text:0000000000400CBC                 mov     esi, 0FFFFFFFFh
.text:0000000000400CC1                 mov     rdi, rax
.text:0000000000400CC4                 mov     eax, 0
.text:0000000000400CC9                 call    sub_40A07C
.text:0000000000400CCE                 test    eax, eax
.text:0000000000400CD0                 setnle  al
.text:0000000000400CD3                 test    al, al
.text:0000000000400CD5                 jz      short loc_400CDC
.text:0000000000400CD7                 jmp     loc_400BB4
.text:0000000000400CDC ; ---------------------------------------------------------------------------
.text:0000000000400CDC
.text:0000000000400CDC loc_400CDC:                             ; CODE XREF: sub_400B97+13E↑j
.text:0000000000400CDC                 mov     rax, cs:ntp_time
.text:0000000000400CE3                 mov     cs:qword_60C3A0, rax
.text:0000000000400CEA                 nop
.text:0000000000400CEB                 leave
.text:0000000000400CEC                 retn
.text:0000000000400CEC ; } // starts at 400B97
.text:0000000000400CEC sub_400B97      endp
.text:0000000000400CEC
.text:0000000000400CED
.text:0000000000400CED ; =============== S U B R O U T I N E =======================================
.text:0000000000400CED
.text:0000000000400CED ; Attributes: bp-based frame
.text:0000000000400CED
.text:0000000000400CED sub_400CED      proc near               ; CODE XREF: sub_4019A0+42↓p
.text:0000000000400CED
.text:0000000000400CED var_1100        = byte ptr -1100h
.text:0000000000400CED var_101         = byte ptr -101h
.text:0000000000400CED var_100         = qword ptr -100h
.text:0000000000400CED var_F4          = dword ptr -0F4h
.text:0000000000400CED var_F0          = qword ptr -0F0h
.text:0000000000400CED var_E8          = qword ptr -0E8h
.text:0000000000400CED var_E0          = qword ptr -0E0h
.text:0000000000400CED var_D4          = dword ptr -0D4h
.text:0000000000400CED var_D0          = qword ptr -0D0h
.text:0000000000400CED var_C8          = qword ptr -0C8h
.text:0000000000400CED var_C0          = qword ptr -0C0h
.text:0000000000400CED var_B4          = dword ptr -0B4h
.text:0000000000400CED var_B0          = qword ptr -0B0h
.text:0000000000400CED var_A8          = qword ptr -0A8h
.text:0000000000400CED var_A0          = qword ptr -0A0h
.text:0000000000400CED var_94          = dword ptr -94h
.text:0000000000400CED var_90          = qword ptr -90h
.text:0000000000400CED var_88          = qword ptr -88h
.text:0000000000400CED var_80          = qword ptr -80h
.text:0000000000400CED var_74          = dword ptr -74h
.text:0000000000400CED var_70          = qword ptr -70h
.text:0000000000400CED var_68          = qword ptr -68h
.text:0000000000400CED var_60          = qword ptr -60h
.text:0000000000400CED var_54          = dword ptr -54h
.text:0000000000400CED var_50          = qword ptr -50h
.text:0000000000400CED var_48          = qword ptr -48h
.text:0000000000400CED var_40          = qword ptr -40h
.text:0000000000400CED var_34          = dword ptr -34h
.text:0000000000400CED var_30          = qword ptr -30h
.text:0000000000400CED var_28          = qword ptr -28h
.text:0000000000400CED var_1C          = dword ptr -1Ch
.text:0000000000400CED var_18          = qword ptr -18h
.text:0000000000400CED
.text:0000000000400CED ; __unwind {
.text:0000000000400CED                 push    rbp
.text:0000000000400CEE                 mov     rbp, rsp
.text:0000000000400CF1                 push    r12
.text:0000000000400CF3                 push    rbx
.text:0000000000400CF4                 sub     rsp, 10F0h
.text:0000000000400CFB                 nop
.text:0000000000400CFC                 nop
.text:0000000000400CFD                 nop
.text:0000000000400CFE                 nop
.text:0000000000400CFF                 nop
.text:0000000000400D00                 nop
.text:0000000000400D01                 nop
.text:0000000000400D02                 nop
.text:0000000000400D03                 nop
.text:0000000000400D04                 nop
.text:0000000000400D05                 nop
.text:0000000000400D06                 nop
.text:0000000000400D07                 nop
.text:0000000000400D08                 nop
.text:0000000000400D09                 nop
.text:0000000000400D0A                 nop
.text:0000000000400D0B                 nop
.text:0000000000400D0C                 nop
.text:0000000000400D0D                 nop
.text:0000000000400D0E                 nop
.text:0000000000400D0F                 nop
.text:0000000000400D10                 mov     ebx, 1
.text:0000000000400D15                 mov     rax, fs:28h
.text:0000000000400D1E                 mov     r12, rax
.text:0000000000400D21                 mov     rax, r12
.text:0000000000400D24                 mov     [rbp+var_18], rax
.text:0000000000400D28                 lea     rax, loc_40AF2B
.text:0000000000400D2F                 mov     [rbp+var_28], rax
.text:0000000000400D33                 mov     rax, 0CBC13117171FBB1Eh
.text:0000000000400D3D                 mov     [rbp+var_30], rax
.text:0000000000400D41                 mov     [rbp+var_34], 0Fh
.text:0000000000400D48                 call    getMem
.text:0000000000400D4D                 mov     [rbp+var_40], rax
.text:0000000000400D51                 mov     rax, [rbp+var_40]
.text:0000000000400D55                 movzx   eax, byte ptr [rax]
.text:0000000000400D58                 movzx   eax, al
.text:0000000000400D5B                 lea     ecx, [rax+3]
.text:0000000000400D5E                 mov     edx, 66666667h
.text:0000000000400D63                 mov     eax, ecx
.text:0000000000400D65                 imul    edx
.text:0000000000400D67                 sar     edx, 2
.text:0000000000400D6A                 mov     eax, ecx
.text:0000000000400D6C                 sar     eax, 1Fh
.text:0000000000400D6F                 sub     edx, eax
.text:0000000000400D71                 mov     eax, edx
.text:0000000000400D73                 shl     eax, 2
.text:0000000000400D76                 add     eax, edx
.text:0000000000400D78                 add     eax, eax
.text:0000000000400D7A                 sub     ecx, eax
.text:0000000000400D7C                 mov     edx, ecx
.text:0000000000400D7E                 mov     rax, [rbp+var_40]
.text:0000000000400D82                 mov     [rax], dl
.text:0000000000400D84                 sub     [rbp+var_34], 1
.text:0000000000400D88
.text:0000000000400D88 loc_400D88:                             ; CODE XREF: sub_400CED+111↓j
.text:0000000000400D88                 cmp     [rbp+var_34], 0
.text:0000000000400D8C                 js      short loc_400E00
.text:0000000000400D8E                 mov     rdx, [rbp+var_30]
.text:0000000000400D92                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000400D9C                 imul    rax, rdx
.text:0000000000400DA0                 add     rax, 1
.text:0000000000400DA4                 mov     [rbp+var_30], rax
.text:0000000000400DA8                 mov     eax, [rbp+var_34]
.text:0000000000400DAB                 sar     eax, 2
.text:0000000000400DAE                 cdqe
.text:0000000000400DB0                 lea     rdx, ds:0[rax*4]
.text:0000000000400DB8                 mov     rax, [rbp+var_28]
.text:0000000000400DBC                 add     rax, rdx
.text:0000000000400DBF                 mov     edx, [rax]
.text:0000000000400DC1                 mov     rax, [rbp+var_30]
.text:0000000000400DC5                 shr     rax, 20h
.text:0000000000400DC9                 mov     esi, eax
.text:0000000000400DCB                 mov     rax, [rbp+var_40]
.text:0000000000400DCF                 movzx   eax, byte ptr [rax]
.text:0000000000400DD2                 movzx   eax, al
.text:0000000000400DD5                 mov     ecx, [rbp+var_34]
.text:0000000000400DD8                 mov     edi, ecx
.text:0000000000400DDA                 sar     edi, 2
.text:0000000000400DDD                 xor     esi, edx
.text:0000000000400DDF                 mov     rcx, [rbp+var_40]
.text:0000000000400DE3                 movsxd  rdi, edi
.text:0000000000400DE6                 movsxd  rdx, eax
.text:0000000000400DE9                 mov     rax, rdx
.text:0000000000400DEC                 shl     rax, 3
.text:0000000000400DF0                 add     rax, rdx
.text:0000000000400DF3                 add     rax, rdi
.text:0000000000400DF6                 mov     [rcx+rax*4+4], esi
.text:0000000000400DFA                 sub     [rbp+var_34], 4
.text:0000000000400DFE                 jmp     short loc_400D88
.text:0000000000400E00 ; ---------------------------------------------------------------------------
.text:0000000000400E00
.text:0000000000400E00 loc_400E00:                             ; CODE XREF: sub_400CED+9F↑j
.text:0000000000400E00                 mov     rax, [rbp+var_40]
.text:0000000000400E04                 movzx   eax, byte ptr [rax]
.text:0000000000400E07                 movzx   eax, al
.text:0000000000400E0A                 movsxd  rdx, eax
.text:0000000000400E0D                 mov     rax, rdx
.text:0000000000400E10                 shl     rax, 3
.text:0000000000400E14                 add     rax, rdx
.text:0000000000400E17                 shl     rax, 2
.text:0000000000400E1B                 mov     rdx, [rbp+var_40]
.text:0000000000400E1F                 add     rax, rdx
.text:0000000000400E22                 lea     r12, [rax+4]
.text:0000000000400E26                 lea     rax, unk_40AF3C
.text:0000000000400E2D                 mov     [rbp+var_48], rax
.text:0000000000400E31                 mov     rax, 0C727300E163F37EDh
.text:0000000000400E3B                 mov     [rbp+var_50], rax
.text:0000000000400E3F                 mov     [rbp+var_54], 5
.text:0000000000400E46                 call    getMem
.text:0000000000400E4B                 mov     [rbp+var_60], rax
.text:0000000000400E4F                 mov     rax, [rbp+var_60]
.text:0000000000400E53                 movzx   eax, byte ptr [rax]
.text:0000000000400E56                 movzx   eax, al
.text:0000000000400E59                 lea     ecx, [rax+3]
.text:0000000000400E5C                 mov     edx, 66666667h
.text:0000000000400E61                 mov     eax, ecx
.text:0000000000400E63                 imul    edx
.text:0000000000400E65                 sar     edx, 2
.text:0000000000400E68                 mov     eax, ecx
.text:0000000000400E6A                 sar     eax, 1Fh
.text:0000000000400E6D                 sub     edx, eax
.text:0000000000400E6F                 mov     eax, edx
.text:0000000000400E71                 shl     eax, 2
.text:0000000000400E74                 add     eax, edx
.text:0000000000400E76                 add     eax, eax
.text:0000000000400E78                 sub     ecx, eax
.text:0000000000400E7A                 mov     edx, ecx
.text:0000000000400E7C                 mov     rax, [rbp+var_60]
.text:0000000000400E80                 mov     [rax], dl
.text:0000000000400E82                 sub     [rbp+var_54], 1
.text:0000000000400E86
.text:0000000000400E86 loc_400E86:                             ; CODE XREF: sub_400CED+20F↓j
.text:0000000000400E86                 cmp     [rbp+var_54], 0
.text:0000000000400E8A                 js      short loc_400EFE
.text:0000000000400E8C                 mov     rdx, [rbp+var_50]
.text:0000000000400E90                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000400E9A                 imul    rax, rdx
.text:0000000000400E9E                 add     rax, 1
.text:0000000000400EA2                 mov     [rbp+var_50], rax
.text:0000000000400EA6                 mov     eax, [rbp+var_54]
.text:0000000000400EA9                 sar     eax, 2
.text:0000000000400EAC                 cdqe
.text:0000000000400EAE                 lea     rdx, ds:0[rax*4]
.text:0000000000400EB6                 mov     rax, [rbp+var_48]
.text:0000000000400EBA                 add     rax, rdx
.text:0000000000400EBD                 mov     edx, [rax]
.text:0000000000400EBF                 mov     rax, [rbp+var_50]
.text:0000000000400EC3                 shr     rax, 20h
.text:0000000000400EC7                 mov     esi, eax
.text:0000000000400EC9                 mov     rax, [rbp+var_60]
.text:0000000000400ECD                 movzx   eax, byte ptr [rax]
.text:0000000000400ED0                 movzx   eax, al
.text:0000000000400ED3                 mov     ecx, [rbp+var_54]
.text:0000000000400ED6                 mov     edi, ecx
.text:0000000000400ED8                 sar     edi, 2
.text:0000000000400EDB                 xor     esi, edx
.text:0000000000400EDD                 mov     rcx, [rbp+var_60]
.text:0000000000400EE1                 movsxd  rdi, edi
.text:0000000000400EE4                 movsxd  rdx, eax
.text:0000000000400EE7                 mov     rax, rdx
.text:0000000000400EEA                 shl     rax, 3
.text:0000000000400EEE                 add     rax, rdx
.text:0000000000400EF1                 add     rax, rdi
.text:0000000000400EF4                 mov     [rcx+rax*4+4], esi
.text:0000000000400EF8                 sub     [rbp+var_54], 4
.text:0000000000400EFC                 jmp     short loc_400E86
.text:0000000000400EFE ; ---------------------------------------------------------------------------
.text:0000000000400EFE
.text:0000000000400EFE loc_400EFE:                             ; CODE XREF: sub_400CED+19D↑j
.text:0000000000400EFE                 mov     rax, [rbp+var_60]
.text:0000000000400F02                 movzx   eax, byte ptr [rax]
.text:0000000000400F05                 movzx   eax, al
.text:0000000000400F08                 movsxd  rdx, eax
.text:0000000000400F0B                 mov     rax, rdx
.text:0000000000400F0E                 shl     rax, 3
.text:0000000000400F12                 add     rax, rdx
.text:0000000000400F15                 shl     rax, 2
.text:0000000000400F19                 mov     rdx, [rbp+var_60]
.text:0000000000400F1D                 add     rax, rdx
.text:0000000000400F20                 add     rax, 4
.text:0000000000400F24                 mov     edx, 0
.text:0000000000400F29                 mov     rsi, r12
.text:0000000000400F2C                 mov     rdi, rax
.text:0000000000400F2F                 mov     eax, 0
.text:0000000000400F34                 call    sub_40A07C
.text:0000000000400F39                 mov     [rbp+var_1C], eax
.text:0000000000400F3C                 cmp     [rbp+var_1C], 0FFFFFFFFh
.text:0000000000400F40                 setz    al
.text:0000000000400F43                 test    al, al
.text:0000000000400F45                 jz      short loc_400F51
.text:0000000000400F47                 mov     ebx, 0
.text:0000000000400F4C                 jmp     loc_401469
.text:0000000000400F51 ; ---------------------------------------------------------------------------
.text:0000000000400F51
.text:0000000000400F51 loc_400F51:                             ; CODE XREF: sub_400CED+258↑j
.text:0000000000400F51                 lea     rax, unk_40AF45
.text:0000000000400F58                 mov     [rbp+var_68], rax
.text:0000000000400F5C                 mov     rax, 0A065706292F5BA94h
.text:0000000000400F66                 mov     [rbp+var_70], rax
.text:0000000000400F6A                 mov     [rbp+var_74], 5
.text:0000000000400F71                 call    getMem
.text:0000000000400F76                 mov     [rbp+var_80], rax
.text:0000000000400F7A                 mov     rax, [rbp+var_80]
.text:0000000000400F7E                 movzx   eax, byte ptr [rax]
.text:0000000000400F81                 movzx   eax, al
.text:0000000000400F84                 lea     ecx, [rax+3]
.text:0000000000400F87                 mov     edx, 66666667h
.text:0000000000400F8C                 mov     eax, ecx
.text:0000000000400F8E                 imul    edx
.text:0000000000400F90                 sar     edx, 2
.text:0000000000400F93                 mov     eax, ecx
.text:0000000000400F95                 sar     eax, 1Fh
.text:0000000000400F98                 sub     edx, eax
.text:0000000000400F9A                 mov     eax, edx
.text:0000000000400F9C                 shl     eax, 2
.text:0000000000400F9F                 add     eax, edx
.text:0000000000400FA1                 add     eax, eax
.text:0000000000400FA3                 sub     ecx, eax
.text:0000000000400FA5                 mov     edx, ecx
.text:0000000000400FA7                 mov     rax, [rbp+var_80]
.text:0000000000400FAB                 mov     [rax], dl
.text:0000000000400FAD                 sub     [rbp+var_74], 1
.text:0000000000400FB1
.text:0000000000400FB1 loc_400FB1:                             ; CODE XREF: sub_400CED+33A↓j
.text:0000000000400FB1                 cmp     [rbp+var_74], 0
.text:0000000000400FB5                 js      short loc_401029
.text:0000000000400FB7                 mov     rdx, [rbp+var_70]
.text:0000000000400FBB                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000400FC5                 imul    rax, rdx
.text:0000000000400FC9                 add     rax, 1
.text:0000000000400FCD                 mov     [rbp+var_70], rax
.text:0000000000400FD1                 mov     eax, [rbp+var_74]
.text:0000000000400FD4                 sar     eax, 2
.text:0000000000400FD7                 cdqe
.text:0000000000400FD9                 lea     rdx, ds:0[rax*4]
.text:0000000000400FE1                 mov     rax, [rbp+var_68]
.text:0000000000400FE5                 add     rax, rdx
.text:0000000000400FE8                 mov     edx, [rax]
.text:0000000000400FEA                 mov     rax, [rbp+var_70]
.text:0000000000400FEE                 shr     rax, 20h
.text:0000000000400FF2                 mov     esi, eax
.text:0000000000400FF4                 mov     rax, [rbp+var_80]
.text:0000000000400FF8                 movzx   eax, byte ptr [rax]
.text:0000000000400FFB                 movzx   eax, al
.text:0000000000400FFE                 mov     ecx, [rbp+var_74]
.text:0000000000401001                 mov     edi, ecx
.text:0000000000401003                 sar     edi, 2
.text:0000000000401006                 xor     esi, edx
.text:0000000000401008                 mov     rcx, [rbp+var_80]
.text:000000000040100C                 movsxd  rdi, edi
.text:000000000040100F                 movsxd  rdx, eax
.text:0000000000401012                 mov     rax, rdx
.text:0000000000401015                 shl     rax, 3
.text:0000000000401019                 add     rax, rdx
.text:000000000040101C                 add     rax, rdi
.text:000000000040101F                 mov     [rcx+rax*4+4], esi
.text:0000000000401023                 sub     [rbp+var_74], 4
.text:0000000000401027                 jmp     short loc_400FB1
.text:0000000000401029 ; ---------------------------------------------------------------------------
.text:0000000000401029
.text:0000000000401029 loc_401029:                             ; CODE XREF: sub_400CED+2C8↑j
.text:0000000000401029                 mov     rax, [rbp+var_80]
.text:000000000040102D                 movzx   eax, byte ptr [rax]
.text:0000000000401030                 movzx   eax, al
.text:0000000000401033                 movsxd  rdx, eax
.text:0000000000401036                 mov     rax, rdx
.text:0000000000401039                 shl     rax, 3
.text:000000000040103D                 add     rax, rdx
.text:0000000000401040                 shl     rax, 2
.text:0000000000401044                 mov     rdx, [rbp+var_80]
.text:0000000000401048                 add     rax, rdx
.text:000000000040104B                 lea     rdi, [rax+4]
.text:000000000040104F                 lea     rdx, [rbp+var_1100]
.text:0000000000401056                 mov     eax, [rbp+var_1C]
.text:0000000000401059                 mov     ecx, 0FFFh
.text:000000000040105E                 mov     esi, eax
.text:0000000000401060                 mov     eax, 0
.text:0000000000401065                 call    sub_40A07C
.text:000000000040106A                 mov     [rbp+var_101], 0
.text:0000000000401071                 lea     rax, unk_40AF4E
.text:0000000000401078                 mov     [rbp+var_88], rax
.text:000000000040107F                 mov     rax, 70296E95371FF89Eh
.text:0000000000401089                 mov     [rbp+var_90], rax
.text:0000000000401090                 mov     [rbp+var_94], 6
.text:000000000040109A                 call    getMem
.text:000000000040109F                 mov     [rbp+var_A0], rax
.text:00000000004010A6                 mov     rax, [rbp+var_A0]
.text:00000000004010AD                 movzx   eax, byte ptr [rax]
.text:00000000004010B0                 movzx   eax, al
.text:00000000004010B3                 lea     ecx, [rax+3]
.text:00000000004010B6                 mov     edx, 66666667h
.text:00000000004010BB                 mov     eax, ecx
.text:00000000004010BD                 imul    edx
.text:00000000004010BF                 sar     edx, 2
.text:00000000004010C2                 mov     eax, ecx
.text:00000000004010C4                 sar     eax, 1Fh
.text:00000000004010C7                 sub     edx, eax
.text:00000000004010C9                 mov     eax, edx
.text:00000000004010CB                 shl     eax, 2
.text:00000000004010CE                 add     eax, edx
.text:00000000004010D0                 add     eax, eax
.text:00000000004010D2                 sub     ecx, eax
.text:00000000004010D4                 mov     edx, ecx
.text:00000000004010D6                 mov     rax, [rbp+var_A0]
.text:00000000004010DD                 mov     [rax], dl
.text:00000000004010DF                 sub     [rbp+var_94], 1
.text:00000000004010E6
.text:00000000004010E6 loc_4010E6:                             ; CODE XREF: sub_400CED+491↓j
.text:00000000004010E6                 cmp     [rbp+var_94], 0
.text:00000000004010ED                 js      loc_401183
.text:00000000004010F3                 mov     rdx, [rbp+var_90]
.text:00000000004010FA                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000401104                 imul    rax, rdx
.text:0000000000401108                 add     rax, 1
.text:000000000040110C                 mov     [rbp+var_90], rax
.text:0000000000401113                 mov     eax, [rbp+var_94]
.text:0000000000401119                 sar     eax, 2
.text:000000000040111C                 cdqe
.text:000000000040111E                 lea     rdx, ds:0[rax*4]
.text:0000000000401126                 mov     rax, [rbp+var_88]
.text:000000000040112D                 add     rax, rdx
.text:0000000000401130                 mov     edx, [rax]
.text:0000000000401132                 mov     rax, [rbp+var_90]
.text:0000000000401139                 shr     rax, 20h
.text:000000000040113D                 mov     esi, eax
.text:000000000040113F                 mov     rax, [rbp+var_A0]
.text:0000000000401146                 movzx   eax, byte ptr [rax]
.text:0000000000401149                 movzx   eax, al
.text:000000000040114C                 mov     ecx, [rbp+var_94]
.text:0000000000401152                 mov     edi, ecx
.text:0000000000401154                 sar     edi, 2
.text:0000000000401157                 xor     esi, edx
.text:0000000000401159                 mov     rcx, [rbp+var_A0]
.text:0000000000401160                 movsxd  rdi, edi
.text:0000000000401163                 movsxd  rdx, eax
.text:0000000000401166                 mov     rax, rdx
.text:0000000000401169                 shl     rax, 3
.text:000000000040116D                 add     rax, rdx
.text:0000000000401170                 add     rax, rdi
.text:0000000000401173                 mov     [rcx+rax*4+4], esi
.text:0000000000401177                 sub     [rbp+var_94], 4
.text:000000000040117E                 jmp     loc_4010E6
.text:0000000000401183 ; ---------------------------------------------------------------------------
.text:0000000000401183
.text:0000000000401183 loc_401183:                             ; CODE XREF: sub_400CED+400↑j
.text:0000000000401183                 mov     rax, [rbp+var_A0]
.text:000000000040118A                 movzx   eax, byte ptr [rax]
.text:000000000040118D                 movzx   eax, al
.text:0000000000401190                 movsxd  rdx, eax
.text:0000000000401193                 mov     rax, rdx
.text:0000000000401196                 shl     rax, 3
.text:000000000040119A                 add     rax, rdx
.text:000000000040119D                 shl     rax, 2
.text:00000000004011A1                 mov     rdx, [rbp+var_A0]
.text:00000000004011A8                 add     rax, rdx
.text:00000000004011AB                 lea     rdx, [rax+4]
.text:00000000004011AF                 mov     eax, [rbp+var_1C]
.text:00000000004011B2                 mov     esi, eax
.text:00000000004011B4                 mov     rdi, rdx
.text:00000000004011B7                 mov     eax, 0
.text:00000000004011BC                 call    sub_40A07C
.text:00000000004011C1                 lea     rax, unk_40AF57
.text:00000000004011C8                 mov     [rbp+var_A8], rax
.text:00000000004011CF                 mov     rax, 49678DE008C69B36h
.text:00000000004011D9                 mov     [rbp+var_B0], rax
.text:00000000004011E0                 mov     [rbp+var_B4], 12h
.text:00000000004011EA                 call    getMem
.text:00000000004011EF                 mov     [rbp+var_C0], rax
.text:00000000004011F6                 mov     rax, [rbp+var_C0]
.text:00000000004011FD                 movzx   eax, byte ptr [rax]
.text:0000000000401200                 movzx   eax, al
.text:0000000000401203                 lea     ecx, [rax+3]
.text:0000000000401206                 mov     edx, 66666667h
.text:000000000040120B                 mov     eax, ecx
.text:000000000040120D                 imul    edx
.text:000000000040120F                 sar     edx, 2
.text:0000000000401212                 mov     eax, ecx
.text:0000000000401214                 sar     eax, 1Fh
.text:0000000000401217                 sub     edx, eax
.text:0000000000401219                 mov     eax, edx
.text:000000000040121B                 shl     eax, 2
.text:000000000040121E                 add     eax, edx
.text:0000000000401220                 add     eax, eax
.text:0000000000401222                 sub     ecx, eax
.text:0000000000401224                 mov     edx, ecx
.text:0000000000401226                 mov     rax, [rbp+var_C0]
.text:000000000040122D                 mov     [rax], dl
.text:000000000040122F                 sub     [rbp+var_B4], 1
.text:0000000000401236
.text:0000000000401236 loc_401236:                             ; CODE XREF: sub_400CED+5E1↓j
.text:0000000000401236                 cmp     [rbp+var_B4], 0
.text:000000000040123D                 js      loc_4012D3
.text:0000000000401243                 mov     rdx, [rbp+var_B0]
.text:000000000040124A                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000401254                 imul    rax, rdx
.text:0000000000401258                 add     rax, 1
.text:000000000040125C                 mov     [rbp+var_B0], rax
.text:0000000000401263                 mov     eax, [rbp+var_B4]
.text:0000000000401269                 sar     eax, 2
.text:000000000040126C                 cdqe
.text:000000000040126E                 lea     rdx, ds:0[rax*4]
.text:0000000000401276                 mov     rax, [rbp+var_A8]
.text:000000000040127D                 add     rax, rdx
.text:0000000000401280                 mov     edx, [rax]
.text:0000000000401282                 mov     rax, [rbp+var_B0]
.text:0000000000401289                 shr     rax, 20h
.text:000000000040128D                 mov     esi, eax
.text:000000000040128F                 mov     rax, [rbp+var_C0]
.text:0000000000401296                 movzx   eax, byte ptr [rax]
.text:0000000000401299                 movzx   eax, al
.text:000000000040129C                 mov     ecx, [rbp+var_B4]
.text:00000000004012A2                 mov     edi, ecx
.text:00000000004012A4                 sar     edi, 2
.text:00000000004012A7                 xor     esi, edx
.text:00000000004012A9                 mov     rcx, [rbp+var_C0]
.text:00000000004012B0                 movsxd  rdi, edi
.text:00000000004012B3                 movsxd  rdx, eax
.text:00000000004012B6                 mov     rax, rdx
.text:00000000004012B9                 shl     rax, 3
.text:00000000004012BD                 add     rax, rdx
.text:00000000004012C0                 add     rax, rdi
.text:00000000004012C3                 mov     [rcx+rax*4+4], esi
.text:00000000004012C7                 sub     [rbp+var_B4], 4
.text:00000000004012CE                 jmp     loc_401236
.text:00000000004012D3 ; ---------------------------------------------------------------------------
.text:00000000004012D3
.text:00000000004012D3 loc_4012D3:                             ; CODE XREF: sub_400CED+550↑j
.text:00000000004012D3                 mov     rax, [rbp+var_C0]
.text:00000000004012DA                 movzx   eax, byte ptr [rax]
.text:00000000004012DD                 movzx   eax, al
.text:00000000004012E0                 movsxd  rdx, eax
.text:00000000004012E3                 mov     rax, rdx
.text:00000000004012E6                 shl     rax, 3
.text:00000000004012EA                 add     rax, rdx
.text:00000000004012ED                 shl     rax, 2
.text:00000000004012F1                 mov     rdx, [rbp+var_C0]
.text:00000000004012F8                 add     rax, rdx
.text:00000000004012FB                 lea     r12, [rax+4]
.text:00000000004012FF                 lea     rax, unk_40AF6C
.text:0000000000401306                 mov     [rbp+var_C8], rax
.text:000000000040130D                 mov     rax, 817DDD7BA05A2D0Bh
.text:0000000000401317                 mov     [rbp+var_D0], rax
.text:000000000040131E                 mov     [rbp+var_D4], 0Bh
.text:0000000000401328                 call    getMem
.text:000000000040132D                 mov     [rbp+var_E0], rax
.text:0000000000401334                 mov     rax, [rbp+var_E0]
.text:000000000040133B                 movzx   eax, byte ptr [rax]
.text:000000000040133E                 movzx   eax, al
.text:0000000000401341                 lea     ecx, [rax+3]
.text:0000000000401344                 mov     edx, 66666667h
.text:0000000000401349                 mov     eax, ecx
.text:000000000040134B                 imul    edx
.text:000000000040134D                 sar     edx, 2
.text:0000000000401350                 mov     eax, ecx
.text:0000000000401352                 sar     eax, 1Fh
.text:0000000000401355                 sub     edx, eax
.text:0000000000401357                 mov     eax, edx
.text:0000000000401359                 shl     eax, 2
.text:000000000040135C                 add     eax, edx
.text:000000000040135E                 add     eax, eax
.text:0000000000401360                 sub     ecx, eax
.text:0000000000401362                 mov     edx, ecx
.text:0000000000401364                 mov     rax, [rbp+var_E0]
.text:000000000040136B                 mov     [rax], dl
.text:000000000040136D                 sub     [rbp+var_D4], 1
.text:0000000000401374
.text:0000000000401374 loc_401374:                             ; CODE XREF: sub_400CED+71F↓j
.text:0000000000401374                 cmp     [rbp+var_D4], 0
.text:000000000040137B                 js      loc_401411
.text:0000000000401381                 mov     rdx, [rbp+var_D0]
.text:0000000000401388                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000401392                 imul    rax, rdx
.text:0000000000401396                 add     rax, 1
.text:000000000040139A                 mov     [rbp+var_D0], rax
.text:00000000004013A1                 mov     eax, [rbp+var_D4]
.text:00000000004013A7                 sar     eax, 2
.text:00000000004013AA                 cdqe
.text:00000000004013AC                 lea     rdx, ds:0[rax*4]
.text:00000000004013B4                 mov     rax, [rbp+var_C8]
.text:00000000004013BB                 add     rax, rdx
.text:00000000004013BE                 mov     edx, [rax]
.text:00000000004013C0                 mov     rax, [rbp+var_D0]
.text:00000000004013C7                 shr     rax, 20h
.text:00000000004013CB                 mov     esi, eax
.text:00000000004013CD                 mov     rax, [rbp+var_E0]
.text:00000000004013D4                 movzx   eax, byte ptr [rax]
.text:00000000004013D7                 movzx   eax, al
.text:00000000004013DA                 mov     ecx, [rbp+var_D4]
.text:00000000004013E0                 mov     edi, ecx
.text:00000000004013E2                 sar     edi, 2
.text:00000000004013E5                 xor     esi, edx
.text:00000000004013E7                 mov     rcx, [rbp+var_E0]
.text:00000000004013EE                 movsxd  rdi, edi
.text:00000000004013F1                 movsxd  rdx, eax
.text:00000000004013F4                 mov     rax, rdx
.text:00000000004013F7                 shl     rax, 3
.text:00000000004013FB                 add     rax, rdx
.text:00000000004013FE                 add     rax, rdi
.text:0000000000401401                 mov     [rcx+rax*4+4], esi
.text:0000000000401405                 sub     [rbp+var_D4], 4
.text:000000000040140C                 jmp     loc_401374
.text:0000000000401411 ; ---------------------------------------------------------------------------
.text:0000000000401411
.text:0000000000401411 loc_401411:                             ; CODE XREF: sub_400CED+68E↑j
.text:0000000000401411                 mov     rax, [rbp+var_E0]
.text:0000000000401418                 movzx   eax, byte ptr [rax]
.text:000000000040141B                 movzx   eax, al
.text:000000000040141E                 movsxd  rdx, eax
.text:0000000000401421                 mov     rax, rdx
.text:0000000000401424                 shl     rax, 3
.text:0000000000401428                 add     rax, rdx
.text:000000000040142B                 shl     rax, 2
.text:000000000040142F                 mov     rdx, [rbp+var_E0]
.text:0000000000401436                 add     rax, rdx
.text:0000000000401439                 lea     rcx, [rax+4]
.text:000000000040143D                 lea     rax, [rbp+var_1100]
.text:0000000000401444                 mov     rdx, r12
.text:0000000000401447                 mov     rsi, rax
.text:000000000040144A                 mov     rdi, rcx
.text:000000000040144D                 mov     eax, 0
.text:0000000000401452                 call    sub_40A07C
.text:0000000000401457                 test    rax, rax
.text:000000000040145A                 setz    al
.text:000000000040145D                 test    al, al
.text:000000000040145F                 jz      short loc_401468
.text:0000000000401461                 mov     ebx, 0
.text:0000000000401466                 jmp     short loc_401469
.text:0000000000401468 ; ---------------------------------------------------------------------------
.text:0000000000401468
.text:0000000000401468 loc_401468:                             ; CODE XREF: sub_400CED+772↑j
.text:0000000000401468                 nop
.text:0000000000401469
.text:0000000000401469 loc_401469:                             ; CODE XREF: sub_400CED+25F↑j
.text:0000000000401469                                         ; sub_400CED+779↑j
.text:0000000000401469                 mov     rax, fs:28h
.text:0000000000401472                 mov     r12, rax
.text:0000000000401475                 mov     rax, r12
.text:0000000000401478                 cmp     [rbp+var_18], rax
.text:000000000040147C                 setnz   al
.text:000000000040147F                 test    al, al
.text:0000000000401481                 jz      loc_4015D2
.text:0000000000401487                 lea     rax, unk_40AF79
.text:000000000040148E                 mov     [rbp+var_E8], rax
.text:0000000000401495                 mov     rax, 39407BACCC44798Ah
.text:000000000040149F                 mov     [rbp+var_F0], rax
.text:00000000004014A6                 mov     [rbp+var_F4], 11h
.text:00000000004014B0                 call    getMem
.text:00000000004014B5                 mov     [rbp+var_100], rax
.text:00000000004014BC                 mov     rax, [rbp+var_100]
.text:00000000004014C3                 movzx   eax, byte ptr [rax]
.text:00000000004014C6                 movzx   eax, al
.text:00000000004014C9                 lea     ecx, [rax+3]
.text:00000000004014CC                 mov     edx, 66666667h
.text:00000000004014D1                 mov     eax, ecx
.text:00000000004014D3                 imul    edx
.text:00000000004014D5                 sar     edx, 2
.text:00000000004014D8                 mov     eax, ecx
.text:00000000004014DA                 sar     eax, 1Fh
.text:00000000004014DD                 sub     edx, eax
.text:00000000004014DF                 mov     eax, edx
.text:00000000004014E1                 shl     eax, 2
.text:00000000004014E4                 add     eax, edx
.text:00000000004014E6                 add     eax, eax
.text:00000000004014E8                 sub     ecx, eax
.text:00000000004014EA                 mov     edx, ecx
.text:00000000004014EC                 mov     rax, [rbp+var_100]
.text:00000000004014F3                 mov     [rax], dl
.text:00000000004014F5                 sub     [rbp+var_F4], 1
.text:00000000004014FC
.text:00000000004014FC loc_4014FC:                             ; CODE XREF: sub_400CED+8A7↓j
.text:00000000004014FC                 cmp     [rbp+var_F4], 0
.text:0000000000401503                 js      loc_401599
.text:0000000000401509                 mov     rdx, [rbp+var_F0]
.text:0000000000401510                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040151A                 imul    rax, rdx
.text:000000000040151E                 add     rax, 1
.text:0000000000401522                 mov     [rbp+var_F0], rax
.text:0000000000401529                 mov     eax, [rbp+var_F4]
.text:000000000040152F                 sar     eax, 2
.text:0000000000401532                 cdqe
.text:0000000000401534                 lea     rdx, ds:0[rax*4]
.text:000000000040153C                 mov     rax, [rbp+var_E8]
.text:0000000000401543                 add     rax, rdx
.text:0000000000401546                 mov     edx, [rax]
.text:0000000000401548                 mov     rax, [rbp+var_F0]
.text:000000000040154F                 shr     rax, 20h
.text:0000000000401553                 mov     esi, eax
.text:0000000000401555                 mov     rax, [rbp+var_100]
.text:000000000040155C                 movzx   eax, byte ptr [rax]
.text:000000000040155F                 movzx   eax, al
.text:0000000000401562                 mov     ecx, [rbp+var_F4]
.text:0000000000401568                 mov     edi, ecx
.text:000000000040156A                 sar     edi, 2
.text:000000000040156D                 xor     esi, edx
.text:000000000040156F                 mov     rcx, [rbp+var_100]
.text:0000000000401576                 movsxd  rdi, edi
.text:0000000000401579                 movsxd  rdx, eax
.text:000000000040157C                 mov     rax, rdx
.text:000000000040157F                 shl     rax, 3
.text:0000000000401583                 add     rax, rdx
.text:0000000000401586                 add     rax, rdi
.text:0000000000401589                 mov     [rcx+rax*4+4], esi
.text:000000000040158D                 sub     [rbp+var_F4], 4
.text:0000000000401594                 jmp     loc_4014FC
.text:0000000000401599 ; ---------------------------------------------------------------------------
.text:0000000000401599
.text:0000000000401599 loc_401599:                             ; CODE XREF: sub_400CED+816↑j
.text:0000000000401599                 mov     rax, [rbp+var_100]
.text:00000000004015A0                 movzx   eax, byte ptr [rax]
.text:00000000004015A3                 movzx   eax, al
.text:00000000004015A6                 movsxd  rdx, eax
.text:00000000004015A9                 mov     rax, rdx
.text:00000000004015AC                 shl     rax, 3
.text:00000000004015B0                 add     rax, rdx
.text:00000000004015B3                 shl     rax, 2
.text:00000000004015B7                 mov     rdx, [rbp+var_100]
.text:00000000004015BE                 add     rax, rdx
.text:00000000004015C1                 add     rax, 4
.text:00000000004015C5                 mov     rdi, rax
.text:00000000004015C8                 mov     eax, 0
.text:00000000004015CD                 call    sub_40A07C
.text:00000000004015D2
.text:00000000004015D2 loc_4015D2:                             ; CODE XREF: sub_400CED+794↑j
.text:00000000004015D2                 mov     eax, ebx
.text:00000000004015D4                 add     rsp, 10F0h
.text:00000000004015DB                 pop     rbx
.text:00000000004015DC                 pop     r12
.text:00000000004015DE                 pop     rbp
.text:00000000004015DF                 retn
.text:00000000004015DF ; } // starts at 400CED
.text:00000000004015DF sub_400CED      endp
.text:00000000004015DF
.text:00000000004015E0
.text:00000000004015E0 ; =============== S U B R O U T I N E =======================================
.text:00000000004015E0
.text:00000000004015E0 ; Attributes: bp-based frame
.text:00000000004015E0
.text:00000000004015E0 sub_4015E0      proc near               ; CODE XREF: sub_4019A0:loc_401A03↓p
.text:00000000004015E0
.text:00000000004015E0 var_A0          = qword ptr -0A0h
.text:00000000004015E0 var_98          = qword ptr -98h
.text:00000000004015E0 var_90          = qword ptr -90h
.text:00000000004015E0 var_88          = qword ptr -88h
.text:00000000004015E0 var_80          = qword ptr -80h
.text:00000000004015E0 var_78          = qword ptr -78h
.text:00000000004015E0 var_70          = qword ptr -70h
.text:00000000004015E0 var_64          = dword ptr -64h
.text:00000000004015E0 var_60          = qword ptr -60h
.text:00000000004015E0 var_58          = qword ptr -58h
.text:00000000004015E0 var_50          = qword ptr -50h
.text:00000000004015E0 var_44          = dword ptr -44h
.text:00000000004015E0 var_40          = qword ptr -40h
.text:00000000004015E0 var_38          = qword ptr -38h
.text:00000000004015E0 var_30          = qword ptr -30h
.text:00000000004015E0 var_24          = dword ptr -24h
.text:00000000004015E0 var_20          = qword ptr -20h
.text:00000000004015E0 var_18          = qword ptr -18h
.text:00000000004015E0
.text:00000000004015E0 ; __unwind {
.text:00000000004015E0                 push    rbp
.text:00000000004015E1                 mov     rbp, rsp
.text:00000000004015E4                 push    r12
.text:00000000004015E6                 push    rbx
.text:00000000004015E7                 sub     rsp, 90h
.text:00000000004015EE                 nop
.text:00000000004015EF                 nop
.text:00000000004015F0                 nop
.text:00000000004015F1                 nop
.text:00000000004015F2                 nop
.text:00000000004015F3                 nop
.text:00000000004015F4                 nop
.text:00000000004015F5                 nop
.text:00000000004015F6                 nop
.text:00000000004015F7                 nop
.text:00000000004015F8                 nop
.text:00000000004015F9                 nop
.text:00000000004015FA                 nop
.text:00000000004015FB                 nop
.text:00000000004015FC                 nop
.text:00000000004015FD                 nop
.text:00000000004015FE                 nop
.text:00000000004015FF                 nop
.text:0000000000401600                 nop
.text:0000000000401601                 nop
.text:0000000000401602                 nop
.text:0000000000401603                 mov     [rbp+var_A0], 0
.text:000000000040160E                 mov     [rbp+var_98], 0
.text:0000000000401619                 mov     [rbp+var_90], 0
.text:0000000000401624                 mov     [rbp+var_88], 0
.text:000000000040162F                 mov     [rbp+var_80], 0
.text:0000000000401637                 mov     [rbp+var_78], 0
.text:000000000040163F                 mov     dword ptr [rbp+var_A0+4], 2
.text:0000000000401649                 mov     dword ptr [rbp+var_98], 1
.text:0000000000401653                 mov     dword ptr [rbp+var_98+4], 6
.text:000000000040165D                 lea     rax, dword_40AF8E
.text:0000000000401664                 mov     [rbp+var_18], rax
.text:0000000000401668                 mov     rax, 93C60B474FD8E384h
.text:0000000000401672                 mov     [rbp+var_20], rax
.text:0000000000401676                 mov     [rbp+var_24], 5
.text:000000000040167D                 call    getMem
.text:0000000000401682                 mov     [rbp+var_30], rax
.text:0000000000401686                 mov     rax, [rbp+var_30]
.text:000000000040168A                 movzx   eax, byte ptr [rax]
.text:000000000040168D                 movzx   eax, al
.text:0000000000401690                 lea     ecx, [rax+3]
.text:0000000000401693                 mov     edx, 66666667h
.text:0000000000401698                 mov     eax, ecx
.text:000000000040169A                 imul    edx
.text:000000000040169C                 sar     edx, 2
.text:000000000040169F                 mov     eax, ecx
.text:00000000004016A1                 sar     eax, 1Fh
.text:00000000004016A4                 sub     edx, eax
.text:00000000004016A6                 mov     eax, edx
.text:00000000004016A8                 shl     eax, 2
.text:00000000004016AB                 add     eax, edx
.text:00000000004016AD                 add     eax, eax
.text:00000000004016AF                 sub     ecx, eax
.text:00000000004016B1                 mov     edx, ecx
.text:00000000004016B3                 mov     rax, [rbp+var_30]
.text:00000000004016B7                 mov     [rax], dl
.text:00000000004016B9                 sub     [rbp+var_24], 1
.text:00000000004016BD
.text:00000000004016BD loc_4016BD:                             ; CODE XREF: sub_4015E0+153↓j
.text:00000000004016BD                 cmp     [rbp+var_24], 0
.text:00000000004016C1                 js      short loc_401735
.text:00000000004016C3                 mov     rdx, [rbp+var_20]
.text:00000000004016C7                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004016D1                 imul    rax, rdx
.text:00000000004016D5                 add     rax, 1
.text:00000000004016D9                 mov     [rbp+var_20], rax
.text:00000000004016DD                 mov     eax, [rbp+var_24]
.text:00000000004016E0                 sar     eax, 2
.text:00000000004016E3                 cdqe
.text:00000000004016E5                 lea     rdx, ds:0[rax*4]
.text:00000000004016ED                 mov     rax, [rbp+var_18]
.text:00000000004016F1                 add     rax, rdx
.text:00000000004016F4                 mov     edx, [rax]
.text:00000000004016F6                 mov     rax, [rbp+var_20]
.text:00000000004016FA                 shr     rax, 20h
.text:00000000004016FE                 mov     esi, eax
.text:0000000000401700                 mov     rax, [rbp+var_30]
.text:0000000000401704                 movzx   eax, byte ptr [rax]
.text:0000000000401707                 movzx   eax, al
.text:000000000040170A                 mov     ecx, [rbp+var_24]
.text:000000000040170D                 mov     edi, ecx
.text:000000000040170F                 sar     edi, 2
.text:0000000000401712                 xor     esi, edx
.text:0000000000401714                 mov     rcx, [rbp+var_30]
.text:0000000000401718                 movsxd  rdi, edi
.text:000000000040171B                 movsxd  rdx, eax
.text:000000000040171E                 mov     rax, rdx
.text:0000000000401721                 shl     rax, 3
.text:0000000000401725                 add     rax, rdx
.text:0000000000401728                 add     rax, rdi
.text:000000000040172B                 mov     [rcx+rax*4+4], esi
.text:000000000040172F                 sub     [rbp+var_24], 4
.text:0000000000401733                 jmp     short loc_4016BD
.text:0000000000401735 ; ---------------------------------------------------------------------------
.text:0000000000401735
.text:0000000000401735 loc_401735:                             ; CODE XREF: sub_4015E0+E1↑j
.text:0000000000401735                 mov     rax, [rbp+var_30]
.text:0000000000401739                 movzx   eax, byte ptr [rax]
.text:000000000040173C                 movzx   eax, al
.text:000000000040173F                 movsxd  rdx, eax
.text:0000000000401742                 mov     rax, rdx
.text:0000000000401745                 shl     rax, 3
.text:0000000000401749                 add     rax, rdx
.text:000000000040174C                 shl     rax, 2
.text:0000000000401750                 mov     rdx, [rbp+var_30]
.text:0000000000401754                 add     rax, rdx
.text:0000000000401757                 lea     r12, [rax+4]
.text:000000000040175B                 lea     rax, dword_40AF00
.text:0000000000401762                 mov     [rbp+var_38], rax
.text:0000000000401766                 mov     rax, 21517FE8819ECDA5h
.text:0000000000401770                 mov     [rbp+var_40], rax
.text:0000000000401774                 mov     [rbp+var_44], 1Eh
.text:000000000040177B                 call    getMem
.text:0000000000401780                 mov     [rbp+var_50], rax
.text:0000000000401784                 mov     rax, [rbp+var_50]
.text:0000000000401788                 movzx   eax, byte ptr [rax]
.text:000000000040178B                 movzx   eax, al
.text:000000000040178E                 lea     ecx, [rax+3]
.text:0000000000401791                 mov     edx, 66666667h
.text:0000000000401796                 mov     eax, ecx
.text:0000000000401798                 imul    edx
.text:000000000040179A                 sar     edx, 2
.text:000000000040179D                 mov     eax, ecx
.text:000000000040179F                 sar     eax, 1Fh
.text:00000000004017A2                 sub     edx, eax
.text:00000000004017A4                 mov     eax, edx
.text:00000000004017A6                 shl     eax, 2
.text:00000000004017A9                 add     eax, edx
.text:00000000004017AB                 add     eax, eax
.text:00000000004017AD                 sub     ecx, eax
.text:00000000004017AF                 mov     edx, ecx
.text:00000000004017B1                 mov     rax, [rbp+var_50]
.text:00000000004017B5                 mov     [rax], dl
.text:00000000004017B7                 sub     [rbp+var_44], 1
.text:00000000004017BB
.text:00000000004017BB loc_4017BB:                             ; CODE XREF: sub_4015E0+251↓j
.text:00000000004017BB                 cmp     [rbp+var_44], 0
.text:00000000004017BF                 js      short loc_401833
.text:00000000004017C1                 mov     rdx, [rbp+var_40]
.text:00000000004017C5                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004017CF                 imul    rax, rdx
.text:00000000004017D3                 add     rax, 1
.text:00000000004017D7                 mov     [rbp+var_40], rax
.text:00000000004017DB                 mov     eax, [rbp+var_44]
.text:00000000004017DE                 sar     eax, 2
.text:00000000004017E1                 cdqe
.text:00000000004017E3                 lea     rdx, ds:0[rax*4]
.text:00000000004017EB                 mov     rax, [rbp+var_38]
.text:00000000004017EF                 add     rax, rdx
.text:00000000004017F2                 mov     edx, [rax]
.text:00000000004017F4                 mov     rax, [rbp+var_40]
.text:00000000004017F8                 shr     rax, 20h
.text:00000000004017FC                 mov     esi, eax
.text:00000000004017FE                 mov     rax, [rbp+var_50]
.text:0000000000401802                 movzx   eax, byte ptr [rax]
.text:0000000000401805                 movzx   eax, al
.text:0000000000401808                 mov     ecx, [rbp+var_44]
.text:000000000040180B                 mov     edi, ecx
.text:000000000040180D                 sar     edi, 2
.text:0000000000401810                 xor     esi, edx
.text:0000000000401812                 mov     rcx, [rbp+var_50]
.text:0000000000401816                 movsxd  rdi, edi
.text:0000000000401819                 movsxd  rdx, eax
.text:000000000040181C                 mov     rax, rdx
.text:000000000040181F                 shl     rax, 3
.text:0000000000401823                 add     rax, rdx
.text:0000000000401826                 add     rax, rdi
.text:0000000000401829                 mov     [rcx+rax*4+4], esi
.text:000000000040182D                 sub     [rbp+var_44], 4
.text:0000000000401831                 jmp     short loc_4017BB
.text:0000000000401833 ; ---------------------------------------------------------------------------
.text:0000000000401833
.text:0000000000401833 loc_401833:                             ; CODE XREF: sub_4015E0+1DF↑j
.text:0000000000401833                 mov     rax, [rbp+var_50]
.text:0000000000401837                 movzx   eax, byte ptr [rax]
.text:000000000040183A                 movzx   eax, al
.text:000000000040183D                 movsxd  rdx, eax
.text:0000000000401840                 mov     rax, rdx
.text:0000000000401843                 shl     rax, 3
.text:0000000000401847                 add     rax, rdx
.text:000000000040184A                 shl     rax, 2
.text:000000000040184E                 mov     rdx, [rbp+var_50]
.text:0000000000401852                 add     rax, rdx
.text:0000000000401855                 lea     rbx, [rax+4]
.text:0000000000401859                 lea     rax, dword_40AF97
.text:0000000000401860                 mov     [rbp+var_58], rax
.text:0000000000401864                 mov     rax, 0DB60E9D42F618B7Ch
.text:000000000040186E                 mov     [rbp+var_60], rax
.text:0000000000401872                 mov     [rbp+var_64], 0Ch
.text:0000000000401879                 call    getMem
.text:000000000040187E                 mov     [rbp+var_70], rax
.text:0000000000401882                 mov     rax, [rbp+var_70]
.text:0000000000401886                 movzx   eax, byte ptr [rax]
.text:0000000000401889                 movzx   eax, al
.text:000000000040188C                 lea     ecx, [rax+3]
.text:000000000040188F                 mov     edx, 66666667h
.text:0000000000401894                 mov     eax, ecx
.text:0000000000401896                 imul    edx
.text:0000000000401898                 sar     edx, 2
.text:000000000040189B                 mov     eax, ecx
.text:000000000040189D                 sar     eax, 1Fh
.text:00000000004018A0                 sub     edx, eax
.text:00000000004018A2                 mov     eax, edx
.text:00000000004018A4                 shl     eax, 2
.text:00000000004018A7                 add     eax, edx
.text:00000000004018A9                 add     eax, eax
.text:00000000004018AB                 sub     ecx, eax
.text:00000000004018AD                 mov     edx, ecx
.text:00000000004018AF                 mov     rax, [rbp+var_70]
.text:00000000004018B3                 mov     [rax], dl
.text:00000000004018B5                 sub     [rbp+var_64], 1
.text:00000000004018B9
.text:00000000004018B9 loc_4018B9:                             ; CODE XREF: sub_4015E0+34F↓j
.text:00000000004018B9                 cmp     [rbp+var_64], 0
.text:00000000004018BD                 js      short loc_401931
.text:00000000004018BF                 mov     rdx, [rbp+var_60]
.text:00000000004018C3                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004018CD                 imul    rax, rdx
.text:00000000004018D1                 add     rax, 1
.text:00000000004018D5                 mov     [rbp+var_60], rax
.text:00000000004018D9                 mov     eax, [rbp+var_64]
.text:00000000004018DC                 sar     eax, 2
.text:00000000004018DF                 cdqe
.text:00000000004018E1                 lea     rdx, ds:0[rax*4]
.text:00000000004018E9                 mov     rax, [rbp+var_58]
.text:00000000004018ED                 add     rax, rdx
.text:00000000004018F0                 mov     edx, [rax]
.text:00000000004018F2                 mov     rax, [rbp+var_60]
.text:00000000004018F6                 shr     rax, 20h
.text:00000000004018FA                 mov     esi, eax
.text:00000000004018FC                 mov     rax, [rbp+var_70]
.text:0000000000401900                 movzx   eax, byte ptr [rax]
.text:0000000000401903                 movzx   eax, al
.text:0000000000401906                 mov     ecx, [rbp+var_64]
.text:0000000000401909                 mov     edi, ecx
.text:000000000040190B                 sar     edi, 2
.text:000000000040190E                 xor     esi, edx
.text:0000000000401910                 mov     rcx, [rbp+var_70]
.text:0000000000401914                 movsxd  rdi, edi
.text:0000000000401917                 movsxd  rdx, eax
.text:000000000040191A                 mov     rax, rdx
.text:000000000040191D                 shl     rax, 3
.text:0000000000401921                 add     rax, rdx
.text:0000000000401924                 add     rax, rdi
.text:0000000000401927                 mov     [rcx+rax*4+4], esi
.text:000000000040192B                 sub     [rbp+var_64], 4
.text:000000000040192F                 jmp     short loc_4018B9
.text:0000000000401931 ; ---------------------------------------------------------------------------
.text:0000000000401931
.text:0000000000401931 loc_401931:                             ; CODE XREF: sub_4015E0+2DD↑j
.text:0000000000401931                 mov     rax, [rbp+var_70]
.text:0000000000401935                 movzx   eax, byte ptr [rax]
.text:0000000000401938                 movzx   eax, al
.text:000000000040193B                 movsxd  rdx, eax
.text:000000000040193E                 mov     rax, rdx
.text:0000000000401941                 shl     rax, 3
.text:0000000000401945                 add     rax, rdx
.text:0000000000401948                 shl     rax, 2
.text:000000000040194C                 mov     rdx, [rbp+var_70]
.text:0000000000401950                 add     rax, rdx
.text:0000000000401953                 lea     rdi, [rax+4]
.text:0000000000401957                 lea     rax, [rbp+var_A0]
.text:000000000040195E                 lea     r8, qword_60C3B0
.text:0000000000401965                 mov     rcx, rax
.text:0000000000401968                 mov     rdx, r12
.text:000000000040196B                 mov     rsi, rbx
.text:000000000040196E                 mov     eax, 0
.text:0000000000401973                 call    sub_40A07C
.text:0000000000401978                 test    eax, eax
.text:000000000040197A                 jnz     short loc_40198F
.text:000000000040197C                 mov     rax, cs:qword_60C3B0
.text:0000000000401983                 test    rax, rax
.text:0000000000401986                 jz      short loc_40198F
.text:0000000000401988                 mov     eax, 1
.text:000000000040198D                 jmp     short loc_401994
.text:000000000040198F ; ---------------------------------------------------------------------------
.text:000000000040198F
.text:000000000040198F loc_40198F:                             ; CODE XREF: sub_4015E0+39A↑j
.text:000000000040198F                                         ; sub_4015E0+3A6↑j
.text:000000000040198F                 mov     eax, 0
.text:0000000000401994
.text:0000000000401994 loc_401994:                             ; CODE XREF: sub_4015E0+3AD↑j
.text:0000000000401994                 add     rsp, 90h
.text:000000000040199B                 pop     rbx
.text:000000000040199C                 pop     r12
.text:000000000040199E                 pop     rbp
.text:000000000040199F                 retn
.text:000000000040199F ; } // starts at 4015E0
.text:000000000040199F sub_4015E0      endp
.text:000000000040199F
.text:00000000004019A0
.text:00000000004019A0 ; =============== S U B R O U T I N E =======================================
.text:00000000004019A0
.text:00000000004019A0 ; Attributes: bp-based frame
.text:00000000004019A0
.text:00000000004019A0 sub_4019A0      proc near               ; CODE XREF: sub_408E38+2F↓p
.text:00000000004019A0
.text:00000000004019A0 var_38          = qword ptr -38h
.text:00000000004019A0 var_2C          = dword ptr -2Ch
.text:00000000004019A0 var_28          = qword ptr -28h
.text:00000000004019A0 var_20          = qword ptr -20h
.text:00000000004019A0 var_14          = dword ptr -14h
.text:00000000004019A0
.text:00000000004019A0 ; __unwind {
.text:00000000004019A0                 push    rbp
.text:00000000004019A1                 mov     rbp, rsp
.text:00000000004019A4                 push    rbx
.text:00000000004019A5                 sub     rsp, 38h
.text:00000000004019A9                 nop
.text:00000000004019AA                 nop
.text:00000000004019AB                 nop
.text:00000000004019AC                 nop
.text:00000000004019AD                 nop
.text:00000000004019AE                 nop
.text:00000000004019AF                 nop
.text:00000000004019B0                 nop
.text:00000000004019B1                 nop
.text:00000000004019B2                 nop
.text:00000000004019B3                 nop
.text:00000000004019B4                 nop
.text:00000000004019B5                 nop
.text:00000000004019B6                 nop
.text:00000000004019B7                 nop
.text:00000000004019B8                 nop
.text:00000000004019B9                 nop
.text:00000000004019BA                 nop
.text:00000000004019BB                 nop
.text:00000000004019BC                 nop
.text:00000000004019BD                 nop
.text:00000000004019BE                 movzx   eax, cs:byte_60C3B8
.text:00000000004019C5                 test    al, al
.text:00000000004019C7                 jz      short loc_4019DB
.text:00000000004019C9                 mov     rax, cs:qword_60C0D0
.text:00000000004019D0                 test    rax, rax
.text:00000000004019D3                 setnz   al
.text:00000000004019D6                 jmp     loc_401B7D
.text:00000000004019DB ; ---------------------------------------------------------------------------
.text:00000000004019DB
.text:00000000004019DB loc_4019DB:                             ; CODE XREF: sub_4019A0+27↑j
.text:00000000004019DB                 mov     cs:byte_60C3B8, 1
.text:00000000004019E2                 call    sub_400CED
.text:00000000004019E7                 xor     eax, 1
.text:00000000004019EA                 test    al, al
.text:00000000004019EC                 jz      short loc_401A03
.text:00000000004019EE                 mov     cs:qword_60C0D0, 0
.text:00000000004019F9                 mov     eax, 0
.text:00000000004019FE                 jmp     loc_401B7D
.text:0000000000401A03 ; ---------------------------------------------------------------------------
.text:0000000000401A03
.text:0000000000401A03 loc_401A03:                             ; CODE XREF: sub_4019A0+4C↑j
.text:0000000000401A03                 call    sub_4015E0
.text:0000000000401A08                 xor     eax, 1
.text:0000000000401A0B                 test    al, al
.text:0000000000401A0D                 jz      short loc_401A24
.text:0000000000401A0F                 mov     cs:qword_60C0D0, 0
.text:0000000000401A1A                 mov     eax, 0
.text:0000000000401A1F                 jmp     loc_401B7D
.text:0000000000401A24 ; ---------------------------------------------------------------------------
.text:0000000000401A24
.text:0000000000401A24 loc_401A24:                             ; CODE XREF: sub_4019A0+6D↑j
.text:0000000000401A24                                         ; sub_4019A0+AC↓j
.text:0000000000401A24                 mov     rax, cs:qword_60C0D0
.text:0000000000401A2B                 test    rax, rax
.text:0000000000401A2E                 jnz     short loc_401A4E
.text:0000000000401A30                 call    randData
.text:0000000000401A35                 mov     ebx, eax
.text:0000000000401A37                 call    randData
.text:0000000000401A3C                 mov     eax, eax
.text:0000000000401A3E                 shl     rax, 20h
.text:0000000000401A42                 xor     rax, rbx
.text:0000000000401A45                 mov     cs:qword_60C0D0, rax
.text:0000000000401A4C                 jmp     short loc_401A24
.text:0000000000401A4E ; ---------------------------------------------------------------------------
.text:0000000000401A4E
.text:0000000000401A4E loc_401A4E:                             ; CODE XREF: sub_4019A0+8E↑j
.text:0000000000401A4E                 mov     [rbp+var_14], 0
.text:0000000000401A55
.text:0000000000401A55 loc_401A55:                             ; CODE XREF: sub_4019A0+1D8↓j
.text:0000000000401A55                 cmp     [rbp+var_14], 1Fh
.text:0000000000401A59                 jg      loc_401B7D
.text:0000000000401A5F                 lea     rax, unk_40AFA4
.text:0000000000401A66                 mov     [rbp+var_20], rax
.text:0000000000401A6A                 mov     rax, 0FD072AD6D2C263B3h
.text:0000000000401A74                 mov     [rbp+var_28], rax
.text:0000000000401A78                 mov     [rbp+var_2C], 7
.text:0000000000401A7F                 call    getMem
.text:0000000000401A84                 mov     [rbp+var_38], rax
.text:0000000000401A88                 mov     rax, [rbp+var_38]
.text:0000000000401A8C                 movzx   eax, byte ptr [rax]
.text:0000000000401A8F                 movzx   eax, al
.text:0000000000401A92                 lea     ecx, [rax+3]
.text:0000000000401A95                 mov     edx, 66666667h
.text:0000000000401A9A                 mov     eax, ecx
.text:0000000000401A9C                 imul    edx
.text:0000000000401A9E                 sar     edx, 2
.text:0000000000401AA1                 mov     eax, ecx
.text:0000000000401AA3                 sar     eax, 1Fh
.text:0000000000401AA6                 sub     edx, eax
.text:0000000000401AA8                 mov     eax, edx
.text:0000000000401AAA                 shl     eax, 2
.text:0000000000401AAD                 add     eax, edx
.text:0000000000401AAF                 add     eax, eax
.text:0000000000401AB1                 sub     ecx, eax
.text:0000000000401AB3                 mov     edx, ecx
.text:0000000000401AB5                 mov     rax, [rbp+var_38]
.text:0000000000401AB9                 mov     [rax], dl
.text:0000000000401ABB                 sub     [rbp+var_2C], 1
.text:0000000000401ABF
.text:0000000000401ABF loc_401ABF:                             ; CODE XREF: sub_4019A0+195↓j
.text:0000000000401ABF                 cmp     [rbp+var_2C], 0
.text:0000000000401AC3                 js      short loc_401B37
.text:0000000000401AC5                 mov     rdx, [rbp+var_28]
.text:0000000000401AC9                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000401AD3                 imul    rax, rdx
.text:0000000000401AD7                 add     rax, 1
.text:0000000000401ADB                 mov     [rbp+var_28], rax
.text:0000000000401ADF                 mov     eax, [rbp+var_2C]
.text:0000000000401AE2                 sar     eax, 2
.text:0000000000401AE5                 cdqe
.text:0000000000401AE7                 lea     rdx, ds:0[rax*4]
.text:0000000000401AEF                 mov     rax, [rbp+var_20]
.text:0000000000401AF3                 add     rax, rdx
.text:0000000000401AF6                 mov     edx, [rax]
.text:0000000000401AF8                 mov     rax, [rbp+var_28]
.text:0000000000401AFC                 shr     rax, 20h
.text:0000000000401B00                 mov     esi, eax
.text:0000000000401B02                 mov     rax, [rbp+var_38]
.text:0000000000401B06                 movzx   eax, byte ptr [rax]
.text:0000000000401B09                 movzx   eax, al
.text:0000000000401B0C                 mov     ecx, [rbp+var_2C]
.text:0000000000401B0F                 mov     edi, ecx
.text:0000000000401B11                 sar     edi, 2
.text:0000000000401B14                 xor     esi, edx
.text:0000000000401B16                 mov     rcx, [rbp+var_38]
.text:0000000000401B1A                 movsxd  rdi, edi
.text:0000000000401B1D                 movsxd  rdx, eax
.text:0000000000401B20                 mov     rax, rdx
.text:0000000000401B23                 shl     rax, 3
.text:0000000000401B27                 add     rax, rdx
.text:0000000000401B2A                 add     rax, rdi
.text:0000000000401B2D                 mov     [rcx+rax*4+4], esi
.text:0000000000401B31                 sub     [rbp+var_2C], 4
.text:0000000000401B35                 jmp     short loc_401ABF
.text:0000000000401B37 ; ---------------------------------------------------------------------------
.text:0000000000401B37
.text:0000000000401B37 loc_401B37:                             ; CODE XREF: sub_4019A0+123↑j
.text:0000000000401B37                 mov     rax, [rbp+var_38]
.text:0000000000401B3B                 movzx   eax, byte ptr [rax]
.text:0000000000401B3E                 movzx   eax, al
.text:0000000000401B41                 movsxd  rdx, eax
.text:0000000000401B44                 mov     rax, rdx
.text:0000000000401B47                 shl     rax, 3
.text:0000000000401B4B                 add     rax, rdx
.text:0000000000401B4E                 shl     rax, 2
.text:0000000000401B52                 mov     rdx, [rbp+var_38]
.text:0000000000401B56                 add     rax, rdx
.text:0000000000401B59                 lea     rcx, [rax+4]
.text:0000000000401B5D                 mov     eax, [rbp+var_14]
.text:0000000000401B60                 mov     edx, 1
.text:0000000000401B65                 mov     esi, eax
.text:0000000000401B67                 mov     rdi, rcx
.text:0000000000401B6A                 mov     eax, 0
.text:0000000000401B6F                 call    sub_40A07C
.text:0000000000401B74                 add     [rbp+var_14], 1
.text:0000000000401B78                 jmp     loc_401A55
.text:0000000000401B7D ; ---------------------------------------------------------------------------
.text:0000000000401B7D
.text:0000000000401B7D loc_401B7D:                             ; CODE XREF: sub_4019A0+36↑j
.text:0000000000401B7D                                         ; sub_4019A0+5E↑j ...
.text:0000000000401B7D                 add     rsp, 38h
.text:0000000000401B81                 pop     rbx
.text:0000000000401B82                 pop     rbp
.text:0000000000401B83                 retn
.text:0000000000401B83 ; } // starts at 4019A0
.text:0000000000401B83 sub_4019A0      endp
.text:0000000000401B83
.text:0000000000401B84
.text:0000000000401B84 ; =============== S U B R O U T I N E =======================================
.text:0000000000401B84
.text:0000000000401B84 ; Attributes: bp-based frame
.text:0000000000401B84
.text:0000000000401B84 sub_401B84      proc near               ; CODE XREF: sub_408E38+26↓p
.text:0000000000401B84 ; __unwind {
.text:0000000000401B84                 push    rbp
.text:0000000000401B85                 mov     rbp, rsp
.text:0000000000401B88                 nop
.text:0000000000401B89                 nop
.text:0000000000401B8A                 nop
.text:0000000000401B8B                 nop
.text:0000000000401B8C                 nop
.text:0000000000401B8D                 nop
.text:0000000000401B8E                 nop
.text:0000000000401B8F                 nop
.text:0000000000401B90                 nop
.text:0000000000401B91                 nop
.text:0000000000401B92                 nop
.text:0000000000401B93                 nop
.text:0000000000401B94                 nop
.text:0000000000401B95                 nop
.text:0000000000401B96                 nop
.text:0000000000401B97                 nop
.text:0000000000401B98                 nop
.text:0000000000401B99                 nop
.text:0000000000401B9A                 nop
.text:0000000000401B9B                 nop
.text:0000000000401B9C                 nop
.text:0000000000401B9D                 mov     rax, cs:ntp_time
.text:0000000000401BA4                 test    rax, rax
.text:0000000000401BA7                 jnz     short loc_401BB0
.text:0000000000401BA9                 mov     eax, 0
.text:0000000000401BAE                 jmp     short loc_401C29
.text:0000000000401BB0 ; ---------------------------------------------------------------------------
.text:0000000000401BB0
.text:0000000000401BB0 loc_401BB0:                             ; CODE XREF: sub_401B84+23↑j
.text:0000000000401BB0                 mov     rax, cs:qword_60C3A8
.text:0000000000401BB7                 test    rax, rax
.text:0000000000401BBA                 jnz     short loc_401BD1
.text:0000000000401BBC                 mov     rax, cs:ntp_time
.text:0000000000401BC3                 mov     cs:qword_60C3A8, rax
.text:0000000000401BCA                 mov     eax, 0
.text:0000000000401BCF                 jmp     short loc_401C29
.text:0000000000401BD1 ; ---------------------------------------------------------------------------
.text:0000000000401BD1
.text:0000000000401BD1 loc_401BD1:                             ; CODE XREF: sub_401B84+36↑j
.text:0000000000401BD1                 mov     edx, cs:dword_60C26C
.text:0000000000401BD7                 mov     eax, edx
.text:0000000000401BD9                 shl     eax, 2
.text:0000000000401BDC                 add     eax, edx
.text:0000000000401BDE                 mov     edx, eax
.text:0000000000401BE0                 mov     rax, cs:qword_60C3A8
.text:0000000000401BE7                 add     rdx, rax
.text:0000000000401BEA                 mov     rax, cs:ntp_time
.text:0000000000401BF1                 cmp     rdx, rax
.text:0000000000401BF4                 jl      short loc_401BFD
.text:0000000000401BF6                 mov     eax, 0
.text:0000000000401BFB                 jmp     short loc_401C29
.text:0000000000401BFD ; ---------------------------------------------------------------------------
.text:0000000000401BFD
.text:0000000000401BFD loc_401BFD:                             ; CODE XREF: sub_401B84+70↑j
.text:0000000000401BFD                 mov     eax, cs:dword_60C26C
.text:0000000000401C03                 add     eax, eax
.text:0000000000401C05                 mov     edx, eax
.text:0000000000401C07                 mov     rax, cs:qword_60C3A0
.text:0000000000401C0E                 add     rdx, rax
.text:0000000000401C11                 mov     rax, cs:ntp_time
.text:0000000000401C18                 cmp     rdx, rax
.text:0000000000401C1B                 jle     short loc_401C24
.text:0000000000401C1D                 mov     eax, 0
.text:0000000000401C22                 jmp     short loc_401C29
.text:0000000000401C24 ; ---------------------------------------------------------------------------
.text:0000000000401C24
.text:0000000000401C24 loc_401C24:                             ; CODE XREF: sub_401B84+97↑j
.text:0000000000401C24                 mov     eax, 1
.text:0000000000401C29
.text:0000000000401C29 loc_401C29:                             ; CODE XREF: sub_401B84+2A↑j
.text:0000000000401C29                                         ; sub_401B84+4B↑j ...
.text:0000000000401C29                 pop     rbp
.text:0000000000401C2A                 retn
.text:0000000000401C2A ; } // starts at 401B84
.text:0000000000401C2A sub_401B84      endp
.text:0000000000401C2A
.text:0000000000401C2B
.text:0000000000401C2B ; =============== S U B R O U T I N E =======================================
.text:0000000000401C2B
.text:0000000000401C2B ; Attributes: bp-based frame
.text:0000000000401C2B
.text:0000000000401C2B sub_401C2B      proc near               ; CODE XREF: sub_403FFF+155↓p
.text:0000000000401C2B                                         ; sub_408CE3+21↓p
.text:0000000000401C2B
.text:0000000000401C2B var_78          = qword ptr -78h
.text:0000000000401C2B var_6C          = dword ptr -6Ch
.text:0000000000401C2B var_68          = qword ptr -68h
.text:0000000000401C2B var_60          = qword ptr -60h
.text:0000000000401C2B var_58          = qword ptr -58h
.text:0000000000401C2B var_4C          = dword ptr -4Ch
.text:0000000000401C2B var_48          = qword ptr -48h
.text:0000000000401C2B var_40          = qword ptr -40h
.text:0000000000401C2B var_38          = qword ptr -38h
.text:0000000000401C2B var_2C          = dword ptr -2Ch
.text:0000000000401C2B var_28          = qword ptr -28h
.text:0000000000401C2B var_20          = qword ptr -20h
.text:0000000000401C2B var_14          = dword ptr -14h
.text:0000000000401C2B
.text:0000000000401C2B ; __unwind {
.text:0000000000401C2B                 push    rbp
.text:0000000000401C2C                 mov     rbp, rsp
.text:0000000000401C2F                 push    r12
.text:0000000000401C31                 push    rbx
.text:0000000000401C32                 sub     rsp, 70h
.text:0000000000401C36                 nop
.text:0000000000401C37                 nop
.text:0000000000401C38                 nop
.text:0000000000401C39                 nop
.text:0000000000401C3A                 nop
.text:0000000000401C3B                 nop
.text:0000000000401C3C                 nop
.text:0000000000401C3D                 nop
.text:0000000000401C3E                 nop
.text:0000000000401C3F                 nop
.text:0000000000401C40                 nop
.text:0000000000401C41                 nop
.text:0000000000401C42                 nop
.text:0000000000401C43                 nop
.text:0000000000401C44                 nop
.text:0000000000401C45                 nop
.text:0000000000401C46                 nop
.text:0000000000401C47                 nop
.text:0000000000401C48                 nop
.text:0000000000401C49                 nop
.text:0000000000401C4A                 nop
.text:0000000000401C4B                 lea     rax, unk_40AFAD
.text:0000000000401C52                 mov     [rbp+var_20], rax
.text:0000000000401C56                 mov     rax, 3569D77C1F3F9E97h
.text:0000000000401C60                 mov     [rbp+var_28], rax
.text:0000000000401C64                 mov     [rbp+var_2C], 7
.text:0000000000401C6B                 call    getMem
.text:0000000000401C70                 mov     [rbp+var_38], rax
.text:0000000000401C74                 mov     rax, [rbp+var_38]
.text:0000000000401C78                 movzx   eax, byte ptr [rax]
.text:0000000000401C7B                 movzx   eax, al
.text:0000000000401C7E                 lea     ecx, [rax+3]
.text:0000000000401C81                 mov     edx, 66666667h
.text:0000000000401C86                 mov     eax, ecx
.text:0000000000401C88                 imul    edx
.text:0000000000401C8A                 sar     edx, 2
.text:0000000000401C8D                 mov     eax, ecx
.text:0000000000401C8F                 sar     eax, 1Fh
.text:0000000000401C92                 sub     edx, eax
.text:0000000000401C94                 mov     eax, edx
.text:0000000000401C96                 shl     eax, 2
.text:0000000000401C99                 add     eax, edx
.text:0000000000401C9B                 add     eax, eax
.text:0000000000401C9D                 sub     ecx, eax
.text:0000000000401C9F                 mov     edx, ecx
.text:0000000000401CA1                 mov     rax, [rbp+var_38]
.text:0000000000401CA5                 mov     [rax], dl
.text:0000000000401CA7                 sub     [rbp+var_2C], 1
.text:0000000000401CAB
.text:0000000000401CAB loc_401CAB:                             ; CODE XREF: sub_401C2B+F6↓j
.text:0000000000401CAB                 cmp     [rbp+var_2C], 0
.text:0000000000401CAF                 js      short loc_401D23
.text:0000000000401CB1                 mov     rdx, [rbp+var_28]
.text:0000000000401CB5                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000401CBF                 imul    rax, rdx
.text:0000000000401CC3                 add     rax, 1
.text:0000000000401CC7                 mov     [rbp+var_28], rax
.text:0000000000401CCB                 mov     eax, [rbp+var_2C]
.text:0000000000401CCE                 sar     eax, 2
.text:0000000000401CD1                 cdqe
.text:0000000000401CD3                 lea     rdx, ds:0[rax*4]
.text:0000000000401CDB                 mov     rax, [rbp+var_20]
.text:0000000000401CDF                 add     rax, rdx
.text:0000000000401CE2                 mov     edx, [rax]
.text:0000000000401CE4                 mov     rax, [rbp+var_28]
.text:0000000000401CE8                 shr     rax, 20h
.text:0000000000401CEC                 mov     esi, eax
.text:0000000000401CEE                 mov     rax, [rbp+var_38]
.text:0000000000401CF2                 movzx   eax, byte ptr [rax]
.text:0000000000401CF5                 movzx   eax, al
.text:0000000000401CF8                 mov     ecx, [rbp+var_2C]
.text:0000000000401CFB                 mov     edi, ecx
.text:0000000000401CFD                 sar     edi, 2
.text:0000000000401D00                 xor     esi, edx
.text:0000000000401D02                 mov     rcx, [rbp+var_38]
.text:0000000000401D06                 movsxd  rdi, edi
.text:0000000000401D09                 movsxd  rdx, eax
.text:0000000000401D0C                 mov     rax, rdx
.text:0000000000401D0F                 shl     rax, 3
.text:0000000000401D13                 add     rax, rdx
.text:0000000000401D16                 add     rax, rdi
.text:0000000000401D19                 mov     [rcx+rax*4+4], esi
.text:0000000000401D1D                 sub     [rbp+var_2C], 4
.text:0000000000401D21                 jmp     short loc_401CAB
.text:0000000000401D23 ; ---------------------------------------------------------------------------
.text:0000000000401D23
.text:0000000000401D23 loc_401D23:                             ; CODE XREF: sub_401C2B+84↑j
.text:0000000000401D23                 mov     rax, [rbp+var_38]
.text:0000000000401D27                 movzx   eax, byte ptr [rax]
.text:0000000000401D2A                 movzx   eax, al
.text:0000000000401D2D                 movsxd  rdx, eax
.text:0000000000401D30                 mov     rax, rdx
.text:0000000000401D33                 shl     rax, 3
.text:0000000000401D37                 add     rax, rdx
.text:0000000000401D3A                 shl     rax, 2
.text:0000000000401D3E                 mov     rdx, [rbp+var_38]
.text:0000000000401D42                 add     rax, rdx
.text:0000000000401D45                 add     rax, 4
.text:0000000000401D49                 mov     ecx, 6
.text:0000000000401D4E                 mov     edx, 1
.text:0000000000401D53                 mov     esi, 2
.text:0000000000401D58                 mov     rdi, rax
.text:0000000000401D5B                 mov     eax, 0
.text:0000000000401D60                 call    sub_40A07C
.text:0000000000401D65                 mov     [rbp+var_14], eax
.text:0000000000401D68                 mov     eax, [rbp+var_14]
.text:0000000000401D6B                 shr     eax, 1Fh
.text:0000000000401D6E                 test    al, al
.text:0000000000401D70                 jz      short loc_401D7C
.text:0000000000401D72                 mov     eax, 0FFFFFFFFh
.text:0000000000401D77                 jmp     loc_401FCA
.text:0000000000401D7C ; ---------------------------------------------------------------------------
.text:0000000000401D7C
.text:0000000000401D7C loc_401D7C:                             ; CODE XREF: sub_401C2B+145↑j
.text:0000000000401D7C                 mov     rax, cs:qword_60C3B0
.text:0000000000401D83                 mov     r12d, [rax+10h]
.text:0000000000401D87                 mov     rax, cs:qword_60C3B0
.text:0000000000401D8E                 mov     rbx, [rax+18h]
.text:0000000000401D92                 lea     rax, unk_40AFB6
.text:0000000000401D99                 mov     [rbp+var_40], rax
.text:0000000000401D9D                 mov     rax, 0D67AD86E168F4000h
.text:0000000000401DA7                 mov     [rbp+var_48], rax
.text:0000000000401DAB                 mov     [rbp+var_4C], 8
.text:0000000000401DB2                 call    getMem
.text:0000000000401DB7                 mov     [rbp+var_58], rax
.text:0000000000401DBB                 mov     rax, [rbp+var_58]
.text:0000000000401DBF                 movzx   eax, byte ptr [rax]
.text:0000000000401DC2                 movzx   eax, al
.text:0000000000401DC5                 lea     ecx, [rax+3]
.text:0000000000401DC8                 mov     edx, 66666667h
.text:0000000000401DCD                 mov     eax, ecx
.text:0000000000401DCF                 imul    edx
.text:0000000000401DD1                 sar     edx, 2
.text:0000000000401DD4                 mov     eax, ecx
.text:0000000000401DD6                 sar     eax, 1Fh
.text:0000000000401DD9                 sub     edx, eax
.text:0000000000401DDB                 mov     eax, edx
.text:0000000000401DDD                 shl     eax, 2
.text:0000000000401DE0                 add     eax, edx
.text:0000000000401DE2                 add     eax, eax
.text:0000000000401DE4                 sub     ecx, eax
.text:0000000000401DE6                 mov     edx, ecx
.text:0000000000401DE8                 mov     rax, [rbp+var_58]
.text:0000000000401DEC                 mov     [rax], dl
.text:0000000000401DEE                 sub     [rbp+var_4C], 1
.text:0000000000401DF2
.text:0000000000401DF2 loc_401DF2:                             ; CODE XREF: sub_401C2B+23D↓j
.text:0000000000401DF2                 cmp     [rbp+var_4C], 0
.text:0000000000401DF6                 js      short loc_401E6A
.text:0000000000401DF8                 mov     rdx, [rbp+var_48]
.text:0000000000401DFC                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000401E06                 imul    rax, rdx
.text:0000000000401E0A                 add     rax, 1
.text:0000000000401E0E                 mov     [rbp+var_48], rax
.text:0000000000401E12                 mov     eax, [rbp+var_4C]
.text:0000000000401E15                 sar     eax, 2
.text:0000000000401E18                 cdqe
.text:0000000000401E1A                 lea     rdx, ds:0[rax*4]
.text:0000000000401E22                 mov     rax, [rbp+var_40]
.text:0000000000401E26                 add     rax, rdx
.text:0000000000401E29                 mov     edx, [rax]
.text:0000000000401E2B                 mov     rax, [rbp+var_48]
.text:0000000000401E2F                 shr     rax, 20h
.text:0000000000401E33                 mov     esi, eax
.text:0000000000401E35                 mov     rax, [rbp+var_58]
.text:0000000000401E39                 movzx   eax, byte ptr [rax]
.text:0000000000401E3C                 movzx   eax, al
.text:0000000000401E3F                 mov     ecx, [rbp+var_4C]
.text:0000000000401E42                 mov     edi, ecx
.text:0000000000401E44                 sar     edi, 2
.text:0000000000401E47                 xor     esi, edx
.text:0000000000401E49                 mov     rcx, [rbp+var_58]
.text:0000000000401E4D                 movsxd  rdi, edi
.text:0000000000401E50                 movsxd  rdx, eax
.text:0000000000401E53                 mov     rax, rdx
.text:0000000000401E56                 shl     rax, 3
.text:0000000000401E5A                 add     rax, rdx
.text:0000000000401E5D                 add     rax, rdi
.text:0000000000401E60                 mov     [rcx+rax*4+4], esi
.text:0000000000401E64                 sub     [rbp+var_4C], 4
.text:0000000000401E68                 jmp     short loc_401DF2
.text:0000000000401E6A ; ---------------------------------------------------------------------------
.text:0000000000401E6A
.text:0000000000401E6A loc_401E6A:                             ; CODE XREF: sub_401C2B+1CB↑j
.text:0000000000401E6A                 mov     rax, [rbp+var_58]
.text:0000000000401E6E                 movzx   eax, byte ptr [rax]
.text:0000000000401E71                 movzx   eax, al
.text:0000000000401E74                 movsxd  rdx, eax
.text:0000000000401E77                 mov     rax, rdx
.text:0000000000401E7A                 shl     rax, 3
.text:0000000000401E7E                 add     rax, rdx
.text:0000000000401E81                 shl     rax, 2
.text:0000000000401E85                 mov     rdx, [rbp+var_58]
.text:0000000000401E89                 add     rax, rdx
.text:0000000000401E8C                 lea     rdi, [rax+4]
.text:0000000000401E90                 mov     eax, [rbp+var_14]
.text:0000000000401E93                 mov     ecx, r12d
.text:0000000000401E96                 mov     rdx, rbx
.text:0000000000401E99                 mov     esi, eax
.text:0000000000401E9B                 mov     eax, 0
.text:0000000000401EA0                 call    sub_40A07C
.text:0000000000401EA5                 shr     eax, 1Fh
.text:0000000000401EA8                 test    al, al
.text:0000000000401EAA                 jnz     short loc_401EB4
.text:0000000000401EAC                 mov     eax, [rbp+var_14]
.text:0000000000401EAF                 jmp     loc_401FCA
.text:0000000000401EB4 ; ---------------------------------------------------------------------------
.text:0000000000401EB4
.text:0000000000401EB4 loc_401EB4:                             ; CODE XREF: sub_401C2B+27F↑j
.text:0000000000401EB4                 nop
.text:0000000000401EB5                 lea     rax, unk_40AFBF
.text:0000000000401EBC                 mov     [rbp+var_60], rax
.text:0000000000401EC0                 mov     rax, 0EB9FF2E94D9F740Bh
.text:0000000000401ECA                 mov     [rbp+var_68], rax
.text:0000000000401ECE                 mov     [rbp+var_6C], 6
.text:0000000000401ED5                 call    getMem
.text:0000000000401EDA                 mov     [rbp+var_78], rax
.text:0000000000401EDE                 mov     rax, [rbp+var_78]
.text:0000000000401EE2                 movzx   eax, byte ptr [rax]
.text:0000000000401EE5                 movzx   eax, al
.text:0000000000401EE8                 lea     ecx, [rax+3]
.text:0000000000401EEB                 mov     edx, 66666667h
.text:0000000000401EF0                 mov     eax, ecx
.text:0000000000401EF2                 imul    edx
.text:0000000000401EF4                 sar     edx, 2
.text:0000000000401EF7                 mov     eax, ecx
.text:0000000000401EF9                 sar     eax, 1Fh
.text:0000000000401EFC                 sub     edx, eax
.text:0000000000401EFE                 mov     eax, edx
.text:0000000000401F00                 shl     eax, 2
.text:0000000000401F03                 add     eax, edx
.text:0000000000401F05                 add     eax, eax
.text:0000000000401F07                 sub     ecx, eax
.text:0000000000401F09                 mov     edx, ecx
.text:0000000000401F0B                 mov     rax, [rbp+var_78]
.text:0000000000401F0F                 mov     [rax], dl
.text:0000000000401F11                 sub     [rbp+var_6C], 1
.text:0000000000401F15
.text:0000000000401F15 loc_401F15:                             ; CODE XREF: sub_401C2B+360↓j
.text:0000000000401F15                 cmp     [rbp+var_6C], 0
.text:0000000000401F19                 js      short loc_401F8D
.text:0000000000401F1B                 mov     rdx, [rbp+var_68]
.text:0000000000401F1F                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000401F29                 imul    rax, rdx
.text:0000000000401F2D                 add     rax, 1
.text:0000000000401F31                 mov     [rbp+var_68], rax
.text:0000000000401F35                 mov     eax, [rbp+var_6C]
.text:0000000000401F38                 sar     eax, 2
.text:0000000000401F3B                 cdqe
.text:0000000000401F3D                 lea     rdx, ds:0[rax*4]
.text:0000000000401F45                 mov     rax, [rbp+var_60]
.text:0000000000401F49                 add     rax, rdx
.text:0000000000401F4C                 mov     edx, [rax]
.text:0000000000401F4E                 mov     rax, [rbp+var_68]
.text:0000000000401F52                 shr     rax, 20h
.text:0000000000401F56                 mov     esi, eax
.text:0000000000401F58                 mov     rax, [rbp+var_78]
.text:0000000000401F5C                 movzx   eax, byte ptr [rax]
.text:0000000000401F5F                 movzx   eax, al
.text:0000000000401F62                 mov     ecx, [rbp+var_6C]
.text:0000000000401F65                 mov     edi, ecx
.text:0000000000401F67                 sar     edi, 2
.text:0000000000401F6A                 xor     esi, edx
.text:0000000000401F6C                 mov     rcx, [rbp+var_78]
.text:0000000000401F70                 movsxd  rdi, edi
.text:0000000000401F73                 movsxd  rdx, eax
.text:0000000000401F76                 mov     rax, rdx
.text:0000000000401F79                 shl     rax, 3
.text:0000000000401F7D                 add     rax, rdx
.text:0000000000401F80                 add     rax, rdi
.text:0000000000401F83                 mov     [rcx+rax*4+4], esi
.text:0000000000401F87                 sub     [rbp+var_6C], 4
.text:0000000000401F8B                 jmp     short loc_401F15
.text:0000000000401F8D ; ---------------------------------------------------------------------------
.text:0000000000401F8D
.text:0000000000401F8D loc_401F8D:                             ; CODE XREF: sub_401C2B+2EE↑j
.text:0000000000401F8D                 mov     rax, [rbp+var_78]
.text:0000000000401F91                 movzx   eax, byte ptr [rax]
.text:0000000000401F94                 movzx   eax, al
.text:0000000000401F97                 movsxd  rdx, eax
.text:0000000000401F9A                 mov     rax, rdx
.text:0000000000401F9D                 shl     rax, 3
.text:0000000000401FA1                 add     rax, rdx
.text:0000000000401FA4                 shl     rax, 2
.text:0000000000401FA8                 mov     rdx, [rbp+var_78]
.text:0000000000401FAC                 add     rax, rdx
.text:0000000000401FAF                 lea     rdx, [rax+4]
.text:0000000000401FB3                 mov     eax, [rbp+var_14]
.text:0000000000401FB6                 mov     esi, eax
.text:0000000000401FB8                 mov     rdi, rdx
.text:0000000000401FBB                 mov     eax, 0
.text:0000000000401FC0                 call    sub_40A07C
.text:0000000000401FC5                 mov     eax, 0FFFFFFFFh
.text:0000000000401FCA
.text:0000000000401FCA loc_401FCA:                             ; CODE XREF: sub_401C2B+14C↑j
.text:0000000000401FCA                                         ; sub_401C2B+284↑j
.text:0000000000401FCA                 add     rsp, 70h
.text:0000000000401FCE                 pop     rbx
.text:0000000000401FCF                 pop     r12
.text:0000000000401FD1                 pop     rbp
.text:0000000000401FD2                 retn
.text:0000000000401FD2 ; } // starts at 401C2B
.text:0000000000401FD2 sub_401C2B      endp
.text:0000000000401FD2
.text:0000000000401FD3
.text:0000000000401FD3 ; =============== S U B R O U T I N E =======================================
.text:0000000000401FD3
.text:0000000000401FD3 ; Attributes: bp-based frame
.text:0000000000401FD3
.text:0000000000401FD3 sub_401FD3      proc near               ; CODE XREF: sub_404398:loc_404FDF↓p
.text:0000000000401FD3                                         ; sub_405008+32C7↓p
.text:0000000000401FD3
.text:0000000000401FD3 var_F4          = dword ptr -0F4h
.text:0000000000401FD3 var_F0          = qword ptr -0F0h
.text:0000000000401FD3 var_E8          = qword ptr -0E8h
.text:0000000000401FD3 var_D8          = qword ptr -0D8h
.text:0000000000401FD3 var_CC          = dword ptr -0CCh
.text:0000000000401FD3 var_C8          = qword ptr -0C8h
.text:0000000000401FD3 var_C0          = qword ptr -0C0h
.text:0000000000401FD3 var_B8          = qword ptr -0B8h
.text:0000000000401FD3 var_AC          = dword ptr -0ACh
.text:0000000000401FD3 var_A8          = qword ptr -0A8h
.text:0000000000401FD3 var_A0          = qword ptr -0A0h
.text:0000000000401FD3 var_98          = qword ptr -98h
.text:0000000000401FD3 var_8C          = dword ptr -8Ch
.text:0000000000401FD3 var_88          = qword ptr -88h
.text:0000000000401FD3 var_80          = qword ptr -80h
.text:0000000000401FD3 var_78          = qword ptr -78h
.text:0000000000401FD3 var_6C          = dword ptr -6Ch
.text:0000000000401FD3 var_68          = qword ptr -68h
.text:0000000000401FD3 var_60          = qword ptr -60h
.text:0000000000401FD3 var_58          = qword ptr -58h
.text:0000000000401FD3 var_4C          = dword ptr -4Ch
.text:0000000000401FD3 var_48          = qword ptr -48h
.text:0000000000401FD3 var_40          = qword ptr -40h
.text:0000000000401FD3 var_38          = qword ptr -38h
.text:0000000000401FD3 var_2C          = dword ptr -2Ch
.text:0000000000401FD3 var_28          = qword ptr -28h
.text:0000000000401FD3 var_20          = qword ptr -20h
.text:0000000000401FD3 var_14          = dword ptr -14h
.text:0000000000401FD3
.text:0000000000401FD3 ; __unwind {
.text:0000000000401FD3                 push    rbp
.text:0000000000401FD4                 mov     rbp, rsp
.text:0000000000401FD7                 push    rbx
.text:0000000000401FD8                 sub     rsp, 0F8h
.text:0000000000401FDF                 nop
.text:0000000000401FE0                 nop
.text:0000000000401FE1                 nop
.text:0000000000401FE2                 nop
.text:0000000000401FE3                 nop
.text:0000000000401FE4                 nop
.text:0000000000401FE5                 nop
.text:0000000000401FE6                 nop
.text:0000000000401FE7                 nop
.text:0000000000401FE8                 nop
.text:0000000000401FE9                 nop
.text:0000000000401FEA                 nop
.text:0000000000401FEB                 nop
.text:0000000000401FEC                 nop
.text:0000000000401FED                 nop
.text:0000000000401FEE                 nop
.text:0000000000401FEF                 nop
.text:0000000000401FF0                 nop
.text:0000000000401FF1                 nop
.text:0000000000401FF2                 nop
.text:0000000000401FF3                 nop
.text:0000000000401FF4                 mov     [rbp+var_F0], 0
.text:0000000000401FFF                 mov     [rbp+var_E8], 0
.text:000000000040200A                 mov     [rbp+var_F4], 1
.text:0000000000402014                 lea     rax, unk_40AFC8
.text:000000000040201B                 mov     [rbp+var_20], rax
.text:000000000040201F                 mov     rax, 78555AD9948F0EEAh
.text:0000000000402029                 mov     [rbp+var_28], rax
.text:000000000040202D                 mov     [rbp+var_2C], 7
.text:0000000000402034                 call    getMem
.text:0000000000402039                 mov     [rbp+var_38], rax
.text:000000000040203D                 mov     rax, [rbp+var_38]
.text:0000000000402041                 movzx   eax, byte ptr [rax]
.text:0000000000402044                 movzx   eax, al
.text:0000000000402047                 lea     ecx, [rax+3]
.text:000000000040204A                 mov     edx, 66666667h
.text:000000000040204F                 mov     eax, ecx
.text:0000000000402051                 imul    edx
.text:0000000000402053                 sar     edx, 2
.text:0000000000402056                 mov     eax, ecx
.text:0000000000402058                 sar     eax, 1Fh
.text:000000000040205B                 sub     edx, eax
.text:000000000040205D                 mov     eax, edx
.text:000000000040205F                 shl     eax, 2
.text:0000000000402062                 add     eax, edx
.text:0000000000402064                 add     eax, eax
.text:0000000000402066                 sub     ecx, eax
.text:0000000000402068                 mov     edx, ecx
.text:000000000040206A                 mov     rax, [rbp+var_38]
.text:000000000040206E                 mov     [rax], dl
.text:0000000000402070                 sub     [rbp+var_2C], 1
.text:0000000000402074
.text:0000000000402074 loc_402074:                             ; CODE XREF: sub_401FD3+117↓j
.text:0000000000402074                 cmp     [rbp+var_2C], 0
.text:0000000000402078                 js      short loc_4020EC
.text:000000000040207A                 mov     rdx, [rbp+var_28]
.text:000000000040207E                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000402088                 imul    rax, rdx
.text:000000000040208C                 add     rax, 1
.text:0000000000402090                 mov     [rbp+var_28], rax
.text:0000000000402094                 mov     eax, [rbp+var_2C]
.text:0000000000402097                 sar     eax, 2
.text:000000000040209A                 cdqe
.text:000000000040209C                 lea     rdx, ds:0[rax*4]
.text:00000000004020A4                 mov     rax, [rbp+var_20]
.text:00000000004020A8                 add     rax, rdx
.text:00000000004020AB                 mov     edx, [rax]
.text:00000000004020AD                 mov     rax, [rbp+var_28]
.text:00000000004020B1                 shr     rax, 20h
.text:00000000004020B5                 mov     esi, eax
.text:00000000004020B7                 mov     rax, [rbp+var_38]
.text:00000000004020BB                 movzx   eax, byte ptr [rax]
.text:00000000004020BE                 movzx   eax, al
.text:00000000004020C1                 mov     ecx, [rbp+var_2C]
.text:00000000004020C4                 mov     edi, ecx
.text:00000000004020C6                 sar     edi, 2
.text:00000000004020C9                 xor     esi, edx
.text:00000000004020CB                 mov     rcx, [rbp+var_38]
.text:00000000004020CF                 movsxd  rdi, edi
.text:00000000004020D2                 movsxd  rdx, eax
.text:00000000004020D5                 mov     rax, rdx
.text:00000000004020D8                 shl     rax, 3
.text:00000000004020DC                 add     rax, rdx
.text:00000000004020DF                 add     rax, rdi
.text:00000000004020E2                 mov     [rcx+rax*4+4], esi
.text:00000000004020E6                 sub     [rbp+var_2C], 4
.text:00000000004020EA                 jmp     short loc_402074
.text:00000000004020EC ; ---------------------------------------------------------------------------
.text:00000000004020EC
.text:00000000004020EC loc_4020EC:                             ; CODE XREF: sub_401FD3+A5↑j
.text:00000000004020EC                 mov     rax, [rbp+var_38]
.text:00000000004020F0                 movzx   eax, byte ptr [rax]
.text:00000000004020F3                 movzx   eax, al
.text:00000000004020F6                 movsxd  rdx, eax
.text:00000000004020F9                 mov     rax, rdx
.text:00000000004020FC                 shl     rax, 3
.text:0000000000402100                 add     rax, rdx
.text:0000000000402103                 shl     rax, 2
.text:0000000000402107                 mov     rdx, [rbp+var_38]
.text:000000000040210B                 add     rax, rdx
.text:000000000040210E                 add     rax, 4
.text:0000000000402112                 mov     ecx, 6
.text:0000000000402117                 mov     edx, 1
.text:000000000040211C                 mov     esi, 2
.text:0000000000402121                 mov     rdi, rax
.text:0000000000402124                 mov     eax, 0
.text:0000000000402129                 call    sub_40A07C
.text:000000000040212E                 mov     [rbp+var_14], eax
.text:0000000000402131                 mov     eax, [rbp+var_14]
.text:0000000000402134                 shr     eax, 1Fh
.text:0000000000402137                 test    al, al
.text:0000000000402139                 jz      short loc_402145
.text:000000000040213B                 mov     eax, 0FFFFFFFFh
.text:0000000000402140                 jmp     loc_4027B9
.text:0000000000402145 ; ---------------------------------------------------------------------------
.text:0000000000402145
.text:0000000000402145 loc_402145:                             ; CODE XREF: sub_401FD3+166↑j
.text:0000000000402145                 lea     rax, unk_40AFD1
.text:000000000040214C                 mov     [rbp+var_40], rax
.text:0000000000402150                 mov     rax, 487AA674D3F31782h
.text:000000000040215A                 mov     [rbp+var_48], rax
.text:000000000040215E                 mov     [rbp+var_4C], 0Bh
.text:0000000000402165                 call    getMem
.text:000000000040216A                 mov     [rbp+var_58], rax
.text:000000000040216E                 mov     rax, [rbp+var_58]
.text:0000000000402172                 movzx   eax, byte ptr [rax]
.text:0000000000402175                 movzx   eax, al
.text:0000000000402178                 lea     ecx, [rax+3]
.text:000000000040217B                 mov     edx, 66666667h
.text:0000000000402180                 mov     eax, ecx
.text:0000000000402182                 imul    edx
.text:0000000000402184                 sar     edx, 2
.text:0000000000402187                 mov     eax, ecx
.text:0000000000402189                 sar     eax, 1Fh
.text:000000000040218C                 sub     edx, eax
.text:000000000040218E                 mov     eax, edx
.text:0000000000402190                 shl     eax, 2
.text:0000000000402193                 add     eax, edx
.text:0000000000402195                 add     eax, eax
.text:0000000000402197                 sub     ecx, eax
.text:0000000000402199                 mov     edx, ecx
.text:000000000040219B                 mov     rax, [rbp+var_58]
.text:000000000040219F                 mov     [rax], dl
.text:00000000004021A1                 sub     [rbp+var_4C], 1
.text:00000000004021A5
.text:00000000004021A5 loc_4021A5:                             ; CODE XREF: sub_401FD3+248↓j
.text:00000000004021A5                 cmp     [rbp+var_4C], 0
.text:00000000004021A9                 js      short loc_40221D
.text:00000000004021AB                 mov     rdx, [rbp+var_48]
.text:00000000004021AF                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004021B9                 imul    rax, rdx
.text:00000000004021BD                 add     rax, 1
.text:00000000004021C1                 mov     [rbp+var_48], rax
.text:00000000004021C5                 mov     eax, [rbp+var_4C]
.text:00000000004021C8                 sar     eax, 2
.text:00000000004021CB                 cdqe
.text:00000000004021CD                 lea     rdx, ds:0[rax*4]
.text:00000000004021D5                 mov     rax, [rbp+var_40]
.text:00000000004021D9                 add     rax, rdx
.text:00000000004021DC                 mov     edx, [rax]
.text:00000000004021DE                 mov     rax, [rbp+var_48]
.text:00000000004021E2                 shr     rax, 20h
.text:00000000004021E6                 mov     esi, eax
.text:00000000004021E8                 mov     rax, [rbp+var_58]
.text:00000000004021EC                 movzx   eax, byte ptr [rax]
.text:00000000004021EF                 movzx   eax, al
.text:00000000004021F2                 mov     ecx, [rbp+var_4C]
.text:00000000004021F5                 mov     edi, ecx
.text:00000000004021F7                 sar     edi, 2
.text:00000000004021FA                 xor     esi, edx
.text:00000000004021FC                 mov     rcx, [rbp+var_58]
.text:0000000000402200                 movsxd  rdi, edi
.text:0000000000402203                 movsxd  rdx, eax
.text:0000000000402206                 mov     rax, rdx
.text:0000000000402209                 shl     rax, 3
.text:000000000040220D                 add     rax, rdx
.text:0000000000402210                 add     rax, rdi
.text:0000000000402213                 mov     [rcx+rax*4+4], esi
.text:0000000000402217                 sub     [rbp+var_4C], 4
.text:000000000040221B                 jmp     short loc_4021A5
.text:000000000040221D ; ---------------------------------------------------------------------------
.text:000000000040221D
.text:000000000040221D loc_40221D:                             ; CODE XREF: sub_401FD3+1D6↑j
.text:000000000040221D                 mov     rax, [rbp+var_58]
.text:0000000000402221                 movzx   eax, byte ptr [rax]
.text:0000000000402224                 movzx   eax, al
.text:0000000000402227                 movsxd  rdx, eax
.text:000000000040222A                 mov     rax, rdx
.text:000000000040222D                 shl     rax, 3
.text:0000000000402231                 add     rax, rdx
.text:0000000000402234                 shl     rax, 2
.text:0000000000402238                 mov     rdx, [rbp+var_58]
.text:000000000040223C                 add     rax, rdx
.text:000000000040223F                 lea     rdi, [rax+4]
.text:0000000000402243                 lea     rdx, [rbp+var_F4]
.text:000000000040224A                 mov     eax, [rbp+var_14]
.text:000000000040224D                 mov     r9d, 4
.text:0000000000402253                 mov     r8, rdx
.text:0000000000402256                 mov     ecx, 2
.text:000000000040225B                 mov     edx, 1
.text:0000000000402260                 mov     esi, eax
.text:0000000000402262                 mov     eax, 0
.text:0000000000402267                 call    sub_40A07C
.text:000000000040226C                 mov     word ptr [rbp+var_F0], 2
.text:0000000000402275                 mov     rsi, 5573BD9B13E1C5EBh
.text:000000000040227F                 mov     edi, 0EC40B20Ah
.text:0000000000402284                 call    sub_4093C0
.text:0000000000402289                 mov     ebx, eax
.text:000000000040228B                 lea     rax, unk_40AFDE
.text:0000000000402292                 mov     [rbp+var_60], rax
.text:0000000000402296                 mov     rax, 0FB29188607C9A549h
.text:00000000004022A0                 mov     [rbp+var_68], rax
.text:00000000004022A4                 mov     [rbp+var_6C], 6
.text:00000000004022AB                 call    getMem
.text:00000000004022B0                 mov     [rbp+var_78], rax
.text:00000000004022B4                 mov     rax, [rbp+var_78]
.text:00000000004022B8                 movzx   eax, byte ptr [rax]
.text:00000000004022BB                 movzx   eax, al
.text:00000000004022BE                 lea     ecx, [rax+3]
.text:00000000004022C1                 mov     edx, 66666667h
.text:00000000004022C6                 mov     eax, ecx
.text:00000000004022C8                 imul    edx
.text:00000000004022CA                 sar     edx, 2
.text:00000000004022CD                 mov     eax, ecx
.text:00000000004022CF                 sar     eax, 1Fh
.text:00000000004022D2                 sub     edx, eax
.text:00000000004022D4                 mov     eax, edx
.text:00000000004022D6                 shl     eax, 2
.text:00000000004022D9                 add     eax, edx
.text:00000000004022DB                 add     eax, eax
.text:00000000004022DD                 sub     ecx, eax
.text:00000000004022DF                 mov     edx, ecx
.text:00000000004022E1                 mov     rax, [rbp+var_78]
.text:00000000004022E5                 mov     [rax], dl
.text:00000000004022E7                 sub     [rbp+var_6C], 1
.text:00000000004022EB
.text:00000000004022EB loc_4022EB:                             ; CODE XREF: sub_401FD3+38E↓j
.text:00000000004022EB                 cmp     [rbp+var_6C], 0
.text:00000000004022EF                 js      short loc_402363
.text:00000000004022F1                 mov     rdx, [rbp+var_68]
.text:00000000004022F5                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004022FF                 imul    rax, rdx
.text:0000000000402303                 add     rax, 1
.text:0000000000402307                 mov     [rbp+var_68], rax
.text:000000000040230B                 mov     eax, [rbp+var_6C]
.text:000000000040230E                 sar     eax, 2
.text:0000000000402311                 cdqe
.text:0000000000402313                 lea     rdx, ds:0[rax*4]
.text:000000000040231B                 mov     rax, [rbp+var_60]
.text:000000000040231F                 add     rax, rdx
.text:0000000000402322                 mov     edx, [rax]
.text:0000000000402324                 mov     rax, [rbp+var_68]
.text:0000000000402328                 shr     rax, 20h
.text:000000000040232C                 mov     esi, eax
.text:000000000040232E                 mov     rax, [rbp+var_78]
.text:0000000000402332                 movzx   eax, byte ptr [rax]
.text:0000000000402335                 movzx   eax, al
.text:0000000000402338                 mov     ecx, [rbp+var_6C]
.text:000000000040233B                 mov     edi, ecx
.text:000000000040233D                 sar     edi, 2
.text:0000000000402340                 xor     esi, edx
.text:0000000000402342                 mov     rcx, [rbp+var_78]
.text:0000000000402346                 movsxd  rdi, edi
.text:0000000000402349                 movsxd  rdx, eax
.text:000000000040234C                 mov     rax, rdx
.text:000000000040234F                 shl     rax, 3
.text:0000000000402353                 add     rax, rdx
.text:0000000000402356                 add     rax, rdi
.text:0000000000402359                 mov     [rcx+rax*4+4], esi
.text:000000000040235D                 sub     [rbp+var_6C], 4
.text:0000000000402361                 jmp     short loc_4022EB
.text:0000000000402363 ; ---------------------------------------------------------------------------
.text:0000000000402363
.text:0000000000402363 loc_402363:                             ; CODE XREF: sub_401FD3+31C↑j
.text:0000000000402363                 mov     rax, [rbp+var_78]
.text:0000000000402367                 movzx   eax, byte ptr [rax]
.text:000000000040236A                 movzx   eax, al
.text:000000000040236D                 movsxd  rdx, eax
.text:0000000000402370                 mov     rax, rdx
.text:0000000000402373                 shl     rax, 3
.text:0000000000402377                 add     rax, rdx
.text:000000000040237A                 shl     rax, 2
.text:000000000040237E                 mov     rdx, [rbp+var_78]
.text:0000000000402382                 add     rax, rdx
.text:0000000000402385                 add     rax, 4
.text:0000000000402389                 mov     esi, ebx
.text:000000000040238B                 mov     rdi, rax
.text:000000000040238E                 mov     eax, 0
.text:0000000000402393                 call    sub_40A07C
.text:0000000000402398                 mov     word ptr [rbp+var_F0+2], ax
.text:000000000040239F                 mov     dword ptr [rbp+var_F0+4], 0
.text:00000000004023A9                 lea     rax, unk_40AFE7
.text:00000000004023B0                 mov     [rbp+var_80], rax
.text:00000000004023B4                 mov     rax, 0C1F8CCB61984C0C5h
.text:00000000004023BE                 mov     [rbp+var_88], rax
.text:00000000004023C5                 mov     [rbp+var_8C], 5
.text:00000000004023CF                 call    getMem
.text:00000000004023D4                 mov     [rbp+var_98], rax
.text:00000000004023DB                 mov     rax, [rbp+var_98]
.text:00000000004023E2                 movzx   eax, byte ptr [rax]
.text:00000000004023E5                 movzx   eax, al
.text:00000000004023E8                 lea     ecx, [rax+3]
.text:00000000004023EB                 mov     edx, 66666667h
.text:00000000004023F0                 mov     eax, ecx
.text:00000000004023F2                 imul    edx
.text:00000000004023F4                 sar     edx, 2
.text:00000000004023F7                 mov     eax, ecx
.text:00000000004023F9                 sar     eax, 1Fh
.text:00000000004023FC                 sub     edx, eax
.text:00000000004023FE                 mov     eax, edx
.text:0000000000402400                 shl     eax, 2
.text:0000000000402403                 add     eax, edx
.text:0000000000402405                 add     eax, eax
.text:0000000000402407                 sub     ecx, eax
.text:0000000000402409                 mov     edx, ecx
.text:000000000040240B                 mov     rax, [rbp+var_98]
.text:0000000000402412                 mov     [rax], dl
.text:0000000000402414                 sub     [rbp+var_8C], 1
.text:000000000040241B
.text:000000000040241B loc_40241B:                             ; CODE XREF: sub_401FD3+4DD↓j
.text:000000000040241B                 cmp     [rbp+var_8C], 0
.text:0000000000402422                 js      loc_4024B5
.text:0000000000402428                 mov     rdx, [rbp+var_88]
.text:000000000040242F                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000402439                 imul    rax, rdx
.text:000000000040243D                 add     rax, 1
.text:0000000000402441                 mov     [rbp+var_88], rax
.text:0000000000402448                 mov     eax, [rbp+var_8C]
.text:000000000040244E                 sar     eax, 2
.text:0000000000402451                 cdqe
.text:0000000000402453                 lea     rdx, ds:0[rax*4]
.text:000000000040245B                 mov     rax, [rbp+var_80]
.text:000000000040245F                 add     rax, rdx
.text:0000000000402462                 mov     edx, [rax]
.text:0000000000402464                 mov     rax, [rbp+var_88]
.text:000000000040246B                 shr     rax, 20h
.text:000000000040246F                 mov     esi, eax
.text:0000000000402471                 mov     rax, [rbp+var_98]
.text:0000000000402478                 movzx   eax, byte ptr [rax]
.text:000000000040247B                 movzx   eax, al
.text:000000000040247E                 mov     ecx, [rbp+var_8C]
.text:0000000000402484                 mov     edi, ecx
.text:0000000000402486                 sar     edi, 2
.text:0000000000402489                 xor     esi, edx
.text:000000000040248B                 mov     rcx, [rbp+var_98]
.text:0000000000402492                 movsxd  rdi, edi
.text:0000000000402495                 movsxd  rdx, eax
.text:0000000000402498                 mov     rax, rdx
.text:000000000040249B                 shl     rax, 3
.text:000000000040249F                 add     rax, rdx
.text:00000000004024A2                 add     rax, rdi
.text:00000000004024A5                 mov     [rcx+rax*4+4], esi
.text:00000000004024A9                 sub     [rbp+var_8C], 4
.text:00000000004024B0                 jmp     loc_40241B
.text:00000000004024B5 ; ---------------------------------------------------------------------------
.text:00000000004024B5
.text:00000000004024B5 loc_4024B5:                             ; CODE XREF: sub_401FD3+44F↑j
.text:00000000004024B5                 mov     rax, [rbp+var_98]
.text:00000000004024BC                 movzx   eax, byte ptr [rax]
.text:00000000004024BF                 movzx   eax, al
.text:00000000004024C2                 movsxd  rdx, eax
.text:00000000004024C5                 mov     rax, rdx
.text:00000000004024C8                 shl     rax, 3
.text:00000000004024CC                 add     rax, rdx
.text:00000000004024CF                 shl     rax, 2
.text:00000000004024D3                 mov     rdx, [rbp+var_98]
.text:00000000004024DA                 add     rax, rdx
.text:00000000004024DD                 lea     rdi, [rax+4]
.text:00000000004024E1                 lea     rdx, [rbp+var_F0]
.text:00000000004024E8                 mov     eax, [rbp+var_14]
.text:00000000004024EB                 mov     ecx, 10h
.text:00000000004024F0                 mov     esi, eax
.text:00000000004024F2                 mov     eax, 0
.text:00000000004024F7                 call    sub_40A07C
.text:00000000004024FC                 shr     eax, 1Fh
.text:00000000004024FF                 test    al, al
.text:0000000000402501                 jz      loc_402661
.text:0000000000402507                 lea     rax, unk_40AFF0
.text:000000000040250E                 mov     [rbp+var_A0], rax
.text:0000000000402515                 mov     rax, 0BE5582A44EB6ED74h
.text:000000000040251F                 mov     [rbp+var_A8], rax
.text:0000000000402526                 mov     [rbp+var_AC], 6
.text:0000000000402530                 call    getMem
.text:0000000000402535                 mov     [rbp+var_B8], rax
.text:000000000040253C                 mov     rax, [rbp+var_B8]
.text:0000000000402543                 movzx   eax, byte ptr [rax]
.text:0000000000402546                 movzx   eax, al
.text:0000000000402549                 lea     ecx, [rax+3]
.text:000000000040254C                 mov     edx, 66666667h
.text:0000000000402551                 mov     eax, ecx
.text:0000000000402553                 imul    edx
.text:0000000000402555                 sar     edx, 2
.text:0000000000402558                 mov     eax, ecx
.text:000000000040255A                 sar     eax, 1Fh
.text:000000000040255D                 sub     edx, eax
.text:000000000040255F                 mov     eax, edx
.text:0000000000402561                 shl     eax, 2
.text:0000000000402564                 add     eax, edx
.text:0000000000402566                 add     eax, eax
.text:0000000000402568                 sub     ecx, eax
.text:000000000040256A                 mov     edx, ecx
.text:000000000040256C                 mov     rax, [rbp+var_B8]
.text:0000000000402573                 mov     [rax], dl
.text:0000000000402575                 sub     [rbp+var_AC], 1
.text:000000000040257C
.text:000000000040257C loc_40257C:                             ; CODE XREF: sub_401FD3+641↓j
.text:000000000040257C                 cmp     [rbp+var_AC], 0
.text:0000000000402583                 js      loc_402619
.text:0000000000402589                 mov     rdx, [rbp+var_A8]
.text:0000000000402590                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040259A                 imul    rax, rdx
.text:000000000040259E                 add     rax, 1
.text:00000000004025A2                 mov     [rbp+var_A8], rax
.text:00000000004025A9                 mov     eax, [rbp+var_AC]
.text:00000000004025AF                 sar     eax, 2
.text:00000000004025B2                 cdqe
.text:00000000004025B4                 lea     rdx, ds:0[rax*4]
.text:00000000004025BC                 mov     rax, [rbp+var_A0]
.text:00000000004025C3                 add     rax, rdx
.text:00000000004025C6                 mov     edx, [rax]
.text:00000000004025C8                 mov     rax, [rbp+var_A8]
.text:00000000004025CF                 shr     rax, 20h
.text:00000000004025D3                 mov     esi, eax
.text:00000000004025D5                 mov     rax, [rbp+var_B8]
.text:00000000004025DC                 movzx   eax, byte ptr [rax]
.text:00000000004025DF                 movzx   eax, al
.text:00000000004025E2                 mov     ecx, [rbp+var_AC]
.text:00000000004025E8                 mov     edi, ecx
.text:00000000004025EA                 sar     edi, 2
.text:00000000004025ED                 xor     esi, edx
.text:00000000004025EF                 mov     rcx, [rbp+var_B8]
.text:00000000004025F6                 movsxd  rdi, edi
.text:00000000004025F9                 movsxd  rdx, eax
.text:00000000004025FC                 mov     rax, rdx
.text:00000000004025FF                 shl     rax, 3
.text:0000000000402603                 add     rax, rdx
.text:0000000000402606                 add     rax, rdi
.text:0000000000402609                 mov     [rcx+rax*4+4], esi
.text:000000000040260D                 sub     [rbp+var_AC], 4
.text:0000000000402614                 jmp     loc_40257C
.text:0000000000402619 ; ---------------------------------------------------------------------------
.text:0000000000402619
.text:0000000000402619 loc_402619:                             ; CODE XREF: sub_401FD3+5B0↑j
.text:0000000000402619                 mov     rax, [rbp+var_B8]
.text:0000000000402620                 movzx   eax, byte ptr [rax]
.text:0000000000402623                 movzx   eax, al
.text:0000000000402626                 movsxd  rdx, eax
.text:0000000000402629                 mov     rax, rdx
.text:000000000040262C                 shl     rax, 3
.text:0000000000402630                 add     rax, rdx
.text:0000000000402633                 shl     rax, 2
.text:0000000000402637                 mov     rdx, [rbp+var_B8]
.text:000000000040263E                 add     rax, rdx
.text:0000000000402641                 lea     rdx, [rax+4]
.text:0000000000402645                 mov     eax, [rbp+var_14]
.text:0000000000402648                 mov     esi, eax
.text:000000000040264A                 mov     rdi, rdx
.text:000000000040264D                 mov     eax, 0
.text:0000000000402652                 call    sub_40A07C
.text:0000000000402657                 mov     eax, 0FFFFFFFFh
.text:000000000040265C                 jmp     loc_4027B9
.text:0000000000402661 ; ---------------------------------------------------------------------------
.text:0000000000402661
.text:0000000000402661 loc_402661:                             ; CODE XREF: sub_401FD3+52E↑j
.text:0000000000402661                 lea     rax, unk_40AFF9
.text:0000000000402668                 mov     [rbp+var_C0], rax
.text:000000000040266F                 mov     rax, 59C29770508B30CCh
.text:0000000000402679                 mov     [rbp+var_C8], rax
.text:0000000000402680                 mov     [rbp+var_CC], 7
.text:000000000040268A                 call    getMem
.text:000000000040268F                 mov     [rbp+var_D8], rax
.text:0000000000402696                 mov     rax, [rbp+var_D8]
.text:000000000040269D                 movzx   eax, byte ptr [rax]
.text:00000000004026A0                 movzx   eax, al
.text:00000000004026A3                 lea     ecx, [rax+3]
.text:00000000004026A6                 mov     edx, 66666667h
.text:00000000004026AB                 mov     eax, ecx
.text:00000000004026AD                 imul    edx
.text:00000000004026AF                 sar     edx, 2
.text:00000000004026B2                 mov     eax, ecx
.text:00000000004026B4                 sar     eax, 1Fh
.text:00000000004026B7                 sub     edx, eax
.text:00000000004026B9                 mov     eax, edx
.text:00000000004026BB                 shl     eax, 2
.text:00000000004026BE                 add     eax, edx
.text:00000000004026C0                 add     eax, eax
.text:00000000004026C2                 sub     ecx, eax
.text:00000000004026C4                 mov     edx, ecx
.text:00000000004026C6                 mov     rax, [rbp+var_D8]
.text:00000000004026CD                 mov     [rax], dl
.text:00000000004026CF                 sub     [rbp+var_CC], 1
.text:00000000004026D6
.text:00000000004026D6 loc_4026D6:                             ; CODE XREF: sub_401FD3+79B↓j
.text:00000000004026D6                 cmp     [rbp+var_CC], 0
.text:00000000004026DD                 js      loc_402773
.text:00000000004026E3                 mov     rdx, [rbp+var_C8]
.text:00000000004026EA                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004026F4                 imul    rax, rdx
.text:00000000004026F8                 add     rax, 1
.text:00000000004026FC                 mov     [rbp+var_C8], rax
.text:0000000000402703                 mov     eax, [rbp+var_CC]
.text:0000000000402709                 sar     eax, 2
.text:000000000040270C                 cdqe
.text:000000000040270E                 lea     rdx, ds:0[rax*4]
.text:0000000000402716                 mov     rax, [rbp+var_C0]
.text:000000000040271D                 add     rax, rdx
.text:0000000000402720                 mov     edx, [rax]
.text:0000000000402722                 mov     rax, [rbp+var_C8]
.text:0000000000402729                 shr     rax, 20h
.text:000000000040272D                 mov     esi, eax
.text:000000000040272F                 mov     rax, [rbp+var_D8]
.text:0000000000402736                 movzx   eax, byte ptr [rax]
.text:0000000000402739                 movzx   eax, al
.text:000000000040273C                 mov     ecx, [rbp+var_CC]
.text:0000000000402742                 mov     edi, ecx
.text:0000000000402744                 sar     edi, 2
.text:0000000000402747                 xor     esi, edx
.text:0000000000402749                 mov     rcx, [rbp+var_D8]
.text:0000000000402750                 movsxd  rdi, edi
.text:0000000000402753                 movsxd  rdx, eax
.text:0000000000402756                 mov     rax, rdx
.text:0000000000402759                 shl     rax, 3
.text:000000000040275D                 add     rax, rdx
.text:0000000000402760                 add     rax, rdi
.text:0000000000402763                 mov     [rcx+rax*4+4], esi
.text:0000000000402767                 sub     [rbp+var_CC], 4
.text:000000000040276E                 jmp     loc_4026D6
.text:0000000000402773 ; ---------------------------------------------------------------------------
.text:0000000000402773
.text:0000000000402773 loc_402773:                             ; CODE XREF: sub_401FD3+70A↑j
.text:0000000000402773                 mov     rax, [rbp+var_D8]
.text:000000000040277A                 movzx   eax, byte ptr [rax]
.text:000000000040277D                 movzx   eax, al
.text:0000000000402780                 movsxd  rdx, eax
.text:0000000000402783                 mov     rax, rdx
.text:0000000000402786                 shl     rax, 3
.text:000000000040278A                 add     rax, rdx
.text:000000000040278D                 shl     rax, 2
.text:0000000000402791                 mov     rdx, [rbp+var_D8]
.text:0000000000402798                 add     rax, rdx
.text:000000000040279B                 lea     rcx, [rax+4]
.text:000000000040279F                 mov     eax, [rbp+var_14]
.text:00000000004027A2                 mov     edx, 5
.text:00000000004027A7                 mov     esi, eax
.text:00000000004027A9                 mov     rdi, rcx
.text:00000000004027AC                 mov     eax, 0
.text:00000000004027B1                 call    sub_40A07C
.text:00000000004027B6                 mov     eax, [rbp+var_14]
.text:00000000004027B9
.text:00000000004027B9 loc_4027B9:                             ; CODE XREF: sub_401FD3+16D↑j
.text:00000000004027B9                                         ; sub_401FD3+689↑j
.text:00000000004027B9                 add     rsp, 0F8h
.text:00000000004027C0                 pop     rbx
.text:00000000004027C1                 pop     rbp
.text:00000000004027C2                 retn
.text:00000000004027C2 ; } // starts at 401FD3
.text:00000000004027C2 sub_401FD3      endp
.text:00000000004027C2
.text:00000000004027C3
.text:00000000004027C3 ; =============== S U B R O U T I N E =======================================
.text:00000000004027C3
.text:00000000004027C3 ; Attributes: bp-based frame
.text:00000000004027C3
.text:00000000004027C3 sub_4027C3      proc near               ; CODE XREF: sub_402807+2D5↓p
.text:00000000004027C3                                         ; sub_402807+42E↓p ...
.text:00000000004027C3
.text:00000000004027C3 var_14          = dword ptr -14h
.text:00000000004027C3 var_10          = qword ptr -10h
.text:00000000004027C3 var_8           = qword ptr -8
.text:00000000004027C3
.text:00000000004027C3 ; __unwind {
.text:00000000004027C3                 push    rbp
.text:00000000004027C4                 mov     rbp, rsp
.text:00000000004027C7                 mov     [rbp+var_8], rdi
.text:00000000004027CB                 mov     [rbp+var_10], rsi
.text:00000000004027CF                 mov     [rbp+var_14], edx
.text:00000000004027D2
.text:00000000004027D2 loc_4027D2:                             ; CODE XREF: sub_4027C3+3F↓j
.text:00000000004027D2                 mov     eax, [rbp+var_14]
.text:00000000004027D5                 lea     edx, [rax-1]
.text:00000000004027D8                 mov     [rbp+var_14], edx
.text:00000000004027DB                 test    eax, eax
.text:00000000004027DD                 setnz   al
.text:00000000004027E0                 test    al, al
.text:00000000004027E2                 jz      short loc_402804
.text:00000000004027E4                 mov     rax, [rbp+var_10]
.text:00000000004027E8                 lea     rdx, [rax+1]
.text:00000000004027EC                 mov     [rbp+var_10], rdx
.text:00000000004027F0                 movzx   edx, byte ptr [rax]
.text:00000000004027F3                 mov     rax, [rbp+var_8]
.text:00000000004027F7                 movzx   eax, byte ptr [rax]
.text:00000000004027FA                 xor     edx, eax
.text:00000000004027FC                 mov     rax, [rbp+var_8]
.text:0000000000402800                 mov     [rax], dl
.text:0000000000402802                 jmp     short loc_4027D2
.text:0000000000402804 ; ---------------------------------------------------------------------------
.text:0000000000402804
.text:0000000000402804 loc_402804:                             ; CODE XREF: sub_4027C3+1F↑j
.text:0000000000402804                 nop
.text:0000000000402805                 pop     rbp
.text:0000000000402806                 retn
.text:0000000000402806 ; } // starts at 4027C3
.text:0000000000402806 sub_4027C3      endp
.text:0000000000402806
.text:0000000000402807
.text:0000000000402807 ; =============== S U B R O U T I N E =======================================
.text:0000000000402807
.text:0000000000402807 ; Attributes: bp-based frame
.text:0000000000402807
.text:0000000000402807 sub_402807      proc near               ; CODE XREF: sub_402D64+13A↓p
.text:0000000000402807                                         ; sub_4034E7+3F0↓p ...
.text:0000000000402807
.text:0000000000402807 var_A8          = qword ptr -0A8h
.text:0000000000402807 var_A0          = qword ptr -0A0h
.text:0000000000402807 var_98          = dword ptr -98h
.text:0000000000402807 var_94          = dword ptr -94h
.text:0000000000402807 var_85          = byte ptr -85h
.text:0000000000402807 var_84          = dword ptr -84h
.text:0000000000402807 var_80          = qword ptr -80h
.text:0000000000402807 var_74          = dword ptr -74h
.text:0000000000402807 var_70          = qword ptr -70h
.text:0000000000402807 var_68          = qword ptr -68h
.text:0000000000402807 var_60          = qword ptr -60h
.text:0000000000402807 var_54          = dword ptr -54h
.text:0000000000402807 var_50          = qword ptr -50h
.text:0000000000402807 var_48          = qword ptr -48h
.text:0000000000402807 var_40          = qword ptr -40h
.text:0000000000402807 var_34          = dword ptr -34h
.text:0000000000402807 var_30          = qword ptr -30h
.text:0000000000402807 var_28          = qword ptr -28h
.text:0000000000402807 var_20          = qword ptr -20h
.text:0000000000402807 var_14          = dword ptr -14h
.text:0000000000402807 var_10          = qword ptr -10h
.text:0000000000402807 var_8           = qword ptr -8
.text:0000000000402807
.text:0000000000402807 ; __unwind {
.text:0000000000402807                 push    rbp
.text:0000000000402808                 mov     rbp, rsp
.text:000000000040280B                 sub     rsp, 0B0h
.text:0000000000402812                 mov     [rbp+var_94], edi
.text:0000000000402818                 mov     [rbp+var_A0], rsi
.text:000000000040281F                 mov     [rbp+var_98], edx
.text:0000000000402825                 mov     [rbp+var_A8], rcx
.text:000000000040282C                 nop
.text:000000000040282D                 nop
.text:000000000040282E                 nop
.text:000000000040282F                 nop
.text:0000000000402830                 nop
.text:0000000000402831                 nop
.text:0000000000402832                 nop
.text:0000000000402833                 nop
.text:0000000000402834                 nop
.text:0000000000402835                 nop
.text:0000000000402836                 nop
.text:0000000000402837                 nop
.text:0000000000402838                 nop
.text:0000000000402839                 nop
.text:000000000040283A                 nop
.text:000000000040283B                 nop
.text:000000000040283C                 nop
.text:000000000040283D                 nop
.text:000000000040283E                 nop
.text:000000000040283F                 nop
.text:0000000000402840                 nop
.text:0000000000402841                 mov     eax, [rbp+var_98]
.text:0000000000402847                 add     eax, 9
.text:000000000040284A                 mov     [rbp+var_84], eax
.text:0000000000402850                 mov     [rbp+var_85], 0
.text:0000000000402857                 lea     rax, unk_40B002
.text:000000000040285E                 mov     [rbp+var_8], rax
.text:0000000000402862                 mov     rax, 2E5C37CC88427466h
.text:000000000040286C                 mov     [rbp+var_10], rax
.text:0000000000402870                 mov     [rbp+var_14], 5
.text:0000000000402877                 call    getMem
.text:000000000040287C                 mov     [rbp+var_20], rax
.text:0000000000402880                 mov     rax, [rbp+var_20]
.text:0000000000402884                 movzx   eax, byte ptr [rax]
.text:0000000000402887                 movzx   eax, al
.text:000000000040288A                 lea     ecx, [rax+3]
.text:000000000040288D                 mov     edx, 66666667h
.text:0000000000402892                 mov     eax, ecx
.text:0000000000402894                 imul    edx
.text:0000000000402896                 sar     edx, 2
.text:0000000000402899                 mov     eax, ecx
.text:000000000040289B                 sar     eax, 1Fh
.text:000000000040289E                 sub     edx, eax
.text:00000000004028A0                 mov     eax, edx
.text:00000000004028A2                 shl     eax, 2
.text:00000000004028A5                 add     eax, edx
.text:00000000004028A7                 add     eax, eax
.text:00000000004028A9                 sub     ecx, eax
.text:00000000004028AB                 mov     edx, ecx
.text:00000000004028AD                 mov     rax, [rbp+var_20]
.text:00000000004028B1                 mov     [rax], dl
.text:00000000004028B3                 sub     [rbp+var_14], 1
.text:00000000004028B7
.text:00000000004028B7 loc_4028B7:                             ; CODE XREF: sub_402807+126↓j
.text:00000000004028B7                 cmp     [rbp+var_14], 0
.text:00000000004028BB                 js      short loc_40292F
.text:00000000004028BD                 mov     rdx, [rbp+var_10]
.text:00000000004028C1                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004028CB                 imul    rax, rdx
.text:00000000004028CF                 add     rax, 1
.text:00000000004028D3                 mov     [rbp+var_10], rax
.text:00000000004028D7                 mov     eax, [rbp+var_14]
.text:00000000004028DA                 sar     eax, 2
.text:00000000004028DD                 cdqe
.text:00000000004028DF                 lea     rdx, ds:0[rax*4]
.text:00000000004028E7                 mov     rax, [rbp+var_8]
.text:00000000004028EB                 add     rax, rdx
.text:00000000004028EE                 mov     edx, [rax]
.text:00000000004028F0                 mov     rax, [rbp+var_10]
.text:00000000004028F4                 shr     rax, 20h
.text:00000000004028F8                 mov     esi, eax
.text:00000000004028FA                 mov     rax, [rbp+var_20]
.text:00000000004028FE                 movzx   eax, byte ptr [rax]
.text:0000000000402901                 movzx   eax, al
.text:0000000000402904                 mov     ecx, [rbp+var_14]
.text:0000000000402907                 mov     edi, ecx
.text:0000000000402909                 sar     edi, 2
.text:000000000040290C                 xor     esi, edx
.text:000000000040290E                 mov     rcx, [rbp+var_20]
.text:0000000000402912                 movsxd  rdi, edi
.text:0000000000402915                 movsxd  rdx, eax
.text:0000000000402918                 mov     rax, rdx
.text:000000000040291B                 shl     rax, 3
.text:000000000040291F                 add     rax, rdx
.text:0000000000402922                 add     rax, rdi
.text:0000000000402925                 mov     [rcx+rax*4+4], esi
.text:0000000000402929                 sub     [rbp+var_14], 4
.text:000000000040292D                 jmp     short loc_4028B7
.text:000000000040292F ; ---------------------------------------------------------------------------
.text:000000000040292F
.text:000000000040292F loc_40292F:                             ; CODE XREF: sub_402807+B4↑j
.text:000000000040292F                 mov     rax, [rbp+var_20]
.text:0000000000402933                 movzx   eax, byte ptr [rax]
.text:0000000000402936                 movzx   eax, al
.text:0000000000402939                 movsxd  rdx, eax
.text:000000000040293C                 mov     rax, rdx
.text:000000000040293F                 shl     rax, 3
.text:0000000000402943                 add     rax, rdx
.text:0000000000402946                 shl     rax, 2
.text:000000000040294A                 mov     rdx, [rbp+var_20]
.text:000000000040294E                 add     rax, rdx
.text:0000000000402951                 lea     rdi, [rax+4]
.text:0000000000402955                 lea     rdx, [rbp+var_84]
.text:000000000040295C                 mov     eax, [rbp+var_94]
.text:0000000000402962                 mov     r8d, 0
.text:0000000000402968                 mov     ecx, 4
.text:000000000040296D                 mov     esi, eax
.text:000000000040296F                 mov     eax, 0
.text:0000000000402974                 call    sub_40A07C
.text:0000000000402979                 cmp     eax, 4
.text:000000000040297C                 setnz   al
.text:000000000040297F                 test    al, al
.text:0000000000402981                 jz      short loc_40298D
.text:0000000000402983                 mov     eax, 0
.text:0000000000402988                 jmp     locret_402D62
.text:000000000040298D ; ---------------------------------------------------------------------------
.text:000000000040298D
.text:000000000040298D loc_40298D:                             ; CODE XREF: sub_402807+17A↑j
.text:000000000040298D                 lea     rax, unk_40B00B
.text:0000000000402994                 mov     [rbp+var_28], rax
.text:0000000000402998                 mov     rax, 0E90D3FB583A3AC20h
.text:00000000004029A2                 mov     [rbp+var_30], rax
.text:00000000004029A6                 mov     [rbp+var_34], 5
.text:00000000004029AD                 call    getMem
.text:00000000004029B2                 mov     [rbp+var_40], rax
.text:00000000004029B6                 mov     rax, [rbp+var_40]
.text:00000000004029BA                 movzx   eax, byte ptr [rax]
.text:00000000004029BD                 movzx   eax, al
.text:00000000004029C0                 lea     ecx, [rax+3]
.text:00000000004029C3                 mov     edx, 66666667h
.text:00000000004029C8                 mov     eax, ecx
.text:00000000004029CA                 imul    edx
.text:00000000004029CC                 sar     edx, 2
.text:00000000004029CF                 mov     eax, ecx
.text:00000000004029D1                 sar     eax, 1Fh
.text:00000000004029D4                 sub     edx, eax
.text:00000000004029D6                 mov     eax, edx
.text:00000000004029D8                 shl     eax, 2
.text:00000000004029DB                 add     eax, edx
.text:00000000004029DD                 add     eax, eax
.text:00000000004029DF                 sub     ecx, eax
.text:00000000004029E1                 mov     edx, ecx
.text:00000000004029E3                 mov     rax, [rbp+var_40]
.text:00000000004029E7                 mov     [rax], dl
.text:00000000004029E9                 sub     [rbp+var_34], 1
.text:00000000004029ED
.text:00000000004029ED loc_4029ED:                             ; CODE XREF: sub_402807+25C↓j
.text:00000000004029ED                 cmp     [rbp+var_34], 0
.text:00000000004029F1                 js      short loc_402A65
.text:00000000004029F3                 mov     rdx, [rbp+var_30]
.text:00000000004029F7                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000402A01                 imul    rax, rdx
.text:0000000000402A05                 add     rax, 1
.text:0000000000402A09                 mov     [rbp+var_30], rax
.text:0000000000402A0D                 mov     eax, [rbp+var_34]
.text:0000000000402A10                 sar     eax, 2
.text:0000000000402A13                 cdqe
.text:0000000000402A15                 lea     rdx, ds:0[rax*4]
.text:0000000000402A1D                 mov     rax, [rbp+var_28]
.text:0000000000402A21                 add     rax, rdx
.text:0000000000402A24                 mov     edx, [rax]
.text:0000000000402A26                 mov     rax, [rbp+var_30]
.text:0000000000402A2A                 shr     rax, 20h
.text:0000000000402A2E                 mov     esi, eax
.text:0000000000402A30                 mov     rax, [rbp+var_40]
.text:0000000000402A34                 movzx   eax, byte ptr [rax]
.text:0000000000402A37                 movzx   eax, al
.text:0000000000402A3A                 mov     ecx, [rbp+var_34]
.text:0000000000402A3D                 mov     edi, ecx
.text:0000000000402A3F                 sar     edi, 2
.text:0000000000402A42                 xor     esi, edx
.text:0000000000402A44                 mov     rcx, [rbp+var_40]
.text:0000000000402A48                 movsxd  rdi, edi
.text:0000000000402A4B                 movsxd  rdx, eax
.text:0000000000402A4E                 mov     rax, rdx
.text:0000000000402A51                 shl     rax, 3
.text:0000000000402A55                 add     rax, rdx
.text:0000000000402A58                 add     rax, rdi
.text:0000000000402A5B                 mov     [rcx+rax*4+4], esi
.text:0000000000402A5F                 sub     [rbp+var_34], 4
.text:0000000000402A63                 jmp     short loc_4029ED
.text:0000000000402A65 ; ---------------------------------------------------------------------------
.text:0000000000402A65
.text:0000000000402A65 loc_402A65:                             ; CODE XREF: sub_402807+1EA↑j
.text:0000000000402A65                 mov     rax, [rbp+var_40]
.text:0000000000402A69                 movzx   eax, byte ptr [rax]
.text:0000000000402A6C                 movzx   eax, al
.text:0000000000402A6F                 movsxd  rdx, eax
.text:0000000000402A72                 mov     rax, rdx
.text:0000000000402A75                 shl     rax, 3
.text:0000000000402A79                 add     rax, rdx
.text:0000000000402A7C                 shl     rax, 2
.text:0000000000402A80                 mov     rdx, [rbp+var_40]
.text:0000000000402A84                 add     rax, rdx
.text:0000000000402A87                 lea     rdi, [rax+4]
.text:0000000000402A8B                 lea     rdx, [rbp+var_A8]
.text:0000000000402A92                 mov     eax, [rbp+var_94]
.text:0000000000402A98                 mov     r8d, 0
.text:0000000000402A9E                 mov     ecx, 8
.text:0000000000402AA3                 mov     esi, eax
.text:0000000000402AA5                 mov     eax, 0
.text:0000000000402AAA                 call    sub_40A07C
.text:0000000000402AAF                 cmp     eax, 8
.text:0000000000402AB2                 setnz   al
.text:0000000000402AB5                 test    al, al
.text:0000000000402AB7                 jz      short loc_402AC3
.text:0000000000402AB9                 mov     eax, 0
.text:0000000000402ABE                 jmp     locret_402D62
.text:0000000000402AC3 ; ---------------------------------------------------------------------------
.text:0000000000402AC3
.text:0000000000402AC3 loc_402AC3:                             ; CODE XREF: sub_402807+2B0↑j
.text:0000000000402AC3                 lea     rcx, [rbp+var_A8]
.text:0000000000402ACA                 lea     rax, [rbp+var_85]
.text:0000000000402AD1                 mov     edx, 8
.text:0000000000402AD6                 mov     rsi, rcx
.text:0000000000402AD9                 mov     rdi, rax
.text:0000000000402ADC                 call    sub_4027C3
.text:0000000000402AE1                 lea     rax, unk_40B014
.text:0000000000402AE8                 mov     [rbp+var_48], rax
.text:0000000000402AEC                 mov     rax, 0CD853398CCF8B7B5h
.text:0000000000402AF6                 mov     [rbp+var_50], rax
.text:0000000000402AFA                 mov     [rbp+var_54], 5
.text:0000000000402B01                 call    getMem
.text:0000000000402B06                 mov     [rbp+var_60], rax
.text:0000000000402B0A                 mov     rax, [rbp+var_60]
.text:0000000000402B0E                 movzx   eax, byte ptr [rax]
.text:0000000000402B11                 movzx   eax, al
.text:0000000000402B14                 lea     ecx, [rax+3]
.text:0000000000402B17                 mov     edx, 66666667h
.text:0000000000402B1C                 mov     eax, ecx
.text:0000000000402B1E                 imul    edx
.text:0000000000402B20                 sar     edx, 2
.text:0000000000402B23                 mov     eax, ecx
.text:0000000000402B25                 sar     eax, 1Fh
.text:0000000000402B28                 sub     edx, eax
.text:0000000000402B2A                 mov     eax, edx
.text:0000000000402B2C                 shl     eax, 2
.text:0000000000402B2F                 add     eax, edx
.text:0000000000402B31                 add     eax, eax
.text:0000000000402B33                 sub     ecx, eax
.text:0000000000402B35                 mov     edx, ecx
.text:0000000000402B37                 mov     rax, [rbp+var_60]
.text:0000000000402B3B                 mov     [rax], dl
.text:0000000000402B3D                 sub     [rbp+var_54], 1
.text:0000000000402B41
.text:0000000000402B41 loc_402B41:                             ; CODE XREF: sub_402807+3B0↓j
.text:0000000000402B41                 cmp     [rbp+var_54], 0
.text:0000000000402B45                 js      short loc_402BB9
.text:0000000000402B47                 mov     rdx, [rbp+var_50]
.text:0000000000402B4B                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000402B55                 imul    rax, rdx
.text:0000000000402B59                 add     rax, 1
.text:0000000000402B5D                 mov     [rbp+var_50], rax
.text:0000000000402B61                 mov     eax, [rbp+var_54]
.text:0000000000402B64                 sar     eax, 2
.text:0000000000402B67                 cdqe
.text:0000000000402B69                 lea     rdx, ds:0[rax*4]
.text:0000000000402B71                 mov     rax, [rbp+var_48]
.text:0000000000402B75                 add     rax, rdx
.text:0000000000402B78                 mov     edx, [rax]
.text:0000000000402B7A                 mov     rax, [rbp+var_50]
.text:0000000000402B7E                 shr     rax, 20h
.text:0000000000402B82                 mov     esi, eax
.text:0000000000402B84                 mov     rax, [rbp+var_60]
.text:0000000000402B88                 movzx   eax, byte ptr [rax]
.text:0000000000402B8B                 movzx   eax, al
.text:0000000000402B8E                 mov     ecx, [rbp+var_54]
.text:0000000000402B91                 mov     edi, ecx
.text:0000000000402B93                 sar     edi, 2
.text:0000000000402B96                 xor     esi, edx
.text:0000000000402B98                 mov     rcx, [rbp+var_60]
.text:0000000000402B9C                 movsxd  rdi, edi
.text:0000000000402B9F                 movsxd  rdx, eax
.text:0000000000402BA2                 mov     rax, rdx
.text:0000000000402BA5                 shl     rax, 3
.text:0000000000402BA9                 add     rax, rdx
.text:0000000000402BAC                 add     rax, rdi
.text:0000000000402BAF                 mov     [rcx+rax*4+4], esi
.text:0000000000402BB3                 sub     [rbp+var_54], 4
.text:0000000000402BB7                 jmp     short loc_402B41
.text:0000000000402BB9 ; ---------------------------------------------------------------------------
.text:0000000000402BB9
.text:0000000000402BB9 loc_402BB9:                             ; CODE XREF: sub_402807+33E↑j
.text:0000000000402BB9                 mov     rax, [rbp+var_60]
.text:0000000000402BBD                 movzx   eax, byte ptr [rax]
.text:0000000000402BC0                 movzx   eax, al
.text:0000000000402BC3                 movsxd  rdx, eax
.text:0000000000402BC6                 mov     rax, rdx
.text:0000000000402BC9                 shl     rax, 3
.text:0000000000402BCD                 add     rax, rdx
.text:0000000000402BD0                 shl     rax, 2
.text:0000000000402BD4                 mov     rdx, [rbp+var_60]
.text:0000000000402BD8                 add     rax, rdx
.text:0000000000402BDB                 lea     rdi, [rax+4]
.text:0000000000402BDF                 mov     ecx, [rbp+var_98]
.text:0000000000402BE5                 mov     rdx, [rbp+var_A0]
.text:0000000000402BEC                 mov     eax, [rbp+var_94]
.text:0000000000402BF2                 mov     r8d, 0
.text:0000000000402BF8                 mov     esi, eax
.text:0000000000402BFA                 mov     eax, 0
.text:0000000000402BFF                 call    sub_40A07C
.text:0000000000402C04                 cmp     [rbp+var_98], eax
.text:0000000000402C0A                 setnz   al
.text:0000000000402C0D                 test    al, al
.text:0000000000402C0F                 jz      short loc_402C1B
.text:0000000000402C11                 mov     eax, 0
.text:0000000000402C16                 jmp     locret_402D62
.text:0000000000402C1B ; ---------------------------------------------------------------------------
.text:0000000000402C1B
.text:0000000000402C1B loc_402C1B:                             ; CODE XREF: sub_402807+408↑j
.text:0000000000402C1B                 mov     edx, [rbp+var_98]
.text:0000000000402C21                 mov     rcx, [rbp+var_A0]
.text:0000000000402C28                 lea     rax, [rbp+var_85]
.text:0000000000402C2F                 mov     rsi, rcx
.text:0000000000402C32                 mov     rdi, rax
.text:0000000000402C35                 call    sub_4027C3
.text:0000000000402C3A                 lea     rax, unk_40B01D
.text:0000000000402C41                 mov     [rbp+var_68], rax
.text:0000000000402C45                 mov     rax, 814535C4CAD42C7Bh
.text:0000000000402C4F                 mov     [rbp+var_70], rax
.text:0000000000402C53                 mov     [rbp+var_74], 5
.text:0000000000402C5A                 call    getMem
.text:0000000000402C5F                 mov     [rbp+var_80], rax
.text:0000000000402C63                 mov     rax, [rbp+var_80]
.text:0000000000402C67                 movzx   eax, byte ptr [rax]
.text:0000000000402C6A                 movzx   eax, al
.text:0000000000402C6D                 lea     ecx, [rax+3]
.text:0000000000402C70                 mov     edx, 66666667h
.text:0000000000402C75                 mov     eax, ecx
.text:0000000000402C77                 imul    edx
.text:0000000000402C79                 sar     edx, 2
.text:0000000000402C7C                 mov     eax, ecx
.text:0000000000402C7E                 sar     eax, 1Fh
.text:0000000000402C81                 sub     edx, eax
.text:0000000000402C83                 mov     eax, edx
.text:0000000000402C85                 shl     eax, 2
.text:0000000000402C88                 add     eax, edx
.text:0000000000402C8A                 add     eax, eax
.text:0000000000402C8C                 sub     ecx, eax
.text:0000000000402C8E                 mov     edx, ecx
.text:0000000000402C90                 mov     rax, [rbp+var_80]
.text:0000000000402C94                 mov     [rax], dl
.text:0000000000402C96                 sub     [rbp+var_74], 1
.text:0000000000402C9A
.text:0000000000402C9A loc_402C9A:                             ; CODE XREF: sub_402807+509↓j
.text:0000000000402C9A                 cmp     [rbp+var_74], 0
.text:0000000000402C9E                 js      short loc_402D12
.text:0000000000402CA0                 mov     rdx, [rbp+var_70]
.text:0000000000402CA4                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000402CAE                 imul    rax, rdx
.text:0000000000402CB2                 add     rax, 1
.text:0000000000402CB6                 mov     [rbp+var_70], rax
.text:0000000000402CBA                 mov     eax, [rbp+var_74]
.text:0000000000402CBD                 sar     eax, 2
.text:0000000000402CC0                 cdqe
.text:0000000000402CC2                 lea     rdx, ds:0[rax*4]
.text:0000000000402CCA                 mov     rax, [rbp+var_68]
.text:0000000000402CCE                 add     rax, rdx
.text:0000000000402CD1                 mov     edx, [rax]
.text:0000000000402CD3                 mov     rax, [rbp+var_70]
.text:0000000000402CD7                 shr     rax, 20h
.text:0000000000402CDB                 mov     esi, eax
.text:0000000000402CDD                 mov     rax, [rbp+var_80]
.text:0000000000402CE1                 movzx   eax, byte ptr [rax]
.text:0000000000402CE4                 movzx   eax, al
.text:0000000000402CE7                 mov     ecx, [rbp+var_74]
.text:0000000000402CEA                 mov     edi, ecx
.text:0000000000402CEC                 sar     edi, 2
.text:0000000000402CEF                 xor     esi, edx
.text:0000000000402CF1                 mov     rcx, [rbp+var_80]
.text:0000000000402CF5                 movsxd  rdi, edi
.text:0000000000402CF8                 movsxd  rdx, eax
.text:0000000000402CFB                 mov     rax, rdx
.text:0000000000402CFE                 shl     rax, 3
.text:0000000000402D02                 add     rax, rdx
.text:0000000000402D05                 add     rax, rdi
.text:0000000000402D08                 mov     [rcx+rax*4+4], esi
.text:0000000000402D0C                 sub     [rbp+var_74], 4
.text:0000000000402D10                 jmp     short loc_402C9A
.text:0000000000402D12 ; ---------------------------------------------------------------------------
.text:0000000000402D12
.text:0000000000402D12 loc_402D12:                             ; CODE XREF: sub_402807+497↑j
.text:0000000000402D12                 mov     rax, [rbp+var_80]
.text:0000000000402D16                 movzx   eax, byte ptr [rax]
.text:0000000000402D19                 movzx   eax, al
.text:0000000000402D1C                 movsxd  rdx, eax
.text:0000000000402D1F                 mov     rax, rdx
.text:0000000000402D22                 shl     rax, 3
.text:0000000000402D26                 add     rax, rdx
.text:0000000000402D29                 shl     rax, 2
.text:0000000000402D2D                 mov     rdx, [rbp+var_80]
.text:0000000000402D31                 add     rax, rdx
.text:0000000000402D34                 lea     rdi, [rax+4]
.text:0000000000402D38                 lea     rdx, [rbp+var_85]
.text:0000000000402D3F                 mov     eax, [rbp+var_94]
.text:0000000000402D45                 mov     r8d, 0
.text:0000000000402D4B                 mov     ecx, 1
.text:0000000000402D50                 mov     esi, eax
.text:0000000000402D52                 mov     eax, 0
.text:0000000000402D57                 call    sub_40A07C
.text:0000000000402D5C                 cmp     eax, 1
.text:0000000000402D5F                 setz    al
.text:0000000000402D62
.text:0000000000402D62 locret_402D62:                          ; CODE XREF: sub_402807+181↑j
.text:0000000000402D62                                         ; sub_402807+2B7↑j ...
.text:0000000000402D62                 leave
.text:0000000000402D63                 retn
.text:0000000000402D63 ; } // starts at 402807
.text:0000000000402D63 sub_402807      endp
.text:0000000000402D63
.text:0000000000402D64
.text:0000000000402D64 ; =============== S U B R O U T I N E =======================================
.text:0000000000402D64
.text:0000000000402D64 ; Attributes: bp-based frame
.text:0000000000402D64
.text:0000000000402D64 sub_402D64      proc near               ; CODE XREF: sub_405008+15E↓p
.text:0000000000402D64                                         ; sub_405008+A29↓p ...
.text:0000000000402D64
.text:0000000000402D64 var_40          = qword ptr -40h
.text:0000000000402D64 var_34          = dword ptr -34h
.text:0000000000402D64 var_30          = qword ptr -30h
.text:0000000000402D64 var_24          = dword ptr -24h
.text:0000000000402D64 var_20          = qword ptr -20h
.text:0000000000402D64 var_18          = qword ptr -18h
.text:0000000000402D64
.text:0000000000402D64 ; __unwind {
.text:0000000000402D64                 push    rbp
.text:0000000000402D65                 mov     rbp, rsp
.text:0000000000402D68                 push    rbx
.text:0000000000402D69                 sub     rsp, 38h
.text:0000000000402D6D                 mov     [rbp+var_34], edi
.text:0000000000402D70                 mov     [rbp+var_40], rsi
.text:0000000000402D74                 mov     rbx, cs:qword_60C0D0
.text:0000000000402D7B                 lea     rax, dword_40B026
.text:0000000000402D82                 mov     [rbp+var_18], rax
.text:0000000000402D86                 mov     rax, 6DE7449878ACB14Ah
.text:0000000000402D90                 mov     [rbp+var_20], rax
.text:0000000000402D94                 mov     [rbp+var_24], 7
.text:0000000000402D9B                 call    getMem
.text:0000000000402DA0                 mov     [rbp+var_30], rax
.text:0000000000402DA4                 mov     rax, [rbp+var_30]
.text:0000000000402DA8                 movzx   eax, byte ptr [rax]
.text:0000000000402DAB                 movzx   eax, al
.text:0000000000402DAE                 lea     ecx, [rax+3]
.text:0000000000402DB1                 mov     edx, 66666667h
.text:0000000000402DB6                 mov     eax, ecx
.text:0000000000402DB8                 imul    edx
.text:0000000000402DBA                 sar     edx, 2
.text:0000000000402DBD                 mov     eax, ecx
.text:0000000000402DBF                 sar     eax, 1Fh
.text:0000000000402DC2                 sub     edx, eax
.text:0000000000402DC4                 mov     eax, edx
.text:0000000000402DC6                 shl     eax, 2
.text:0000000000402DC9                 add     eax, edx
.text:0000000000402DCB                 add     eax, eax
.text:0000000000402DCD                 sub     ecx, eax
.text:0000000000402DCF                 mov     edx, ecx
.text:0000000000402DD1                 mov     rax, [rbp+var_30]
.text:0000000000402DD5                 mov     [rax], dl
.text:0000000000402DD7                 sub     [rbp+var_24], 1
.text:0000000000402DDB
.text:0000000000402DDB loc_402DDB:                             ; CODE XREF: sub_402D64+ED↓j
.text:0000000000402DDB                 cmp     [rbp+var_24], 0
.text:0000000000402DDF                 js      short loc_402E53
.text:0000000000402DE1                 mov     rdx, [rbp+var_20]
.text:0000000000402DE5                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000402DEF                 imul    rax, rdx
.text:0000000000402DF3                 add     rax, 1
.text:0000000000402DF7                 mov     [rbp+var_20], rax
.text:0000000000402DFB                 mov     eax, [rbp+var_24]
.text:0000000000402DFE                 sar     eax, 2
.text:0000000000402E01                 cdqe
.text:0000000000402E03                 lea     rdx, ds:0[rax*4]
.text:0000000000402E0B                 mov     rax, [rbp+var_18]
.text:0000000000402E0F                 add     rax, rdx
.text:0000000000402E12                 mov     edx, [rax]
.text:0000000000402E14                 mov     rax, [rbp+var_20]
.text:0000000000402E18                 shr     rax, 20h
.text:0000000000402E1C                 mov     esi, eax
.text:0000000000402E1E                 mov     rax, [rbp+var_30]
.text:0000000000402E22                 movzx   eax, byte ptr [rax]
.text:0000000000402E25                 movzx   eax, al
.text:0000000000402E28                 mov     ecx, [rbp+var_24]
.text:0000000000402E2B                 mov     edi, ecx
.text:0000000000402E2D                 sar     edi, 2
.text:0000000000402E30                 xor     esi, edx
.text:0000000000402E32                 mov     rcx, [rbp+var_30]
.text:0000000000402E36                 movsxd  rdi, edi
.text:0000000000402E39                 movsxd  rdx, eax
.text:0000000000402E3C                 mov     rax, rdx
.text:0000000000402E3F                 shl     rax, 3
.text:0000000000402E43                 add     rax, rdx
.text:0000000000402E46                 add     rax, rdi
.text:0000000000402E49                 mov     [rcx+rax*4+4], esi
.text:0000000000402E4D                 sub     [rbp+var_24], 4
.text:0000000000402E51                 jmp     short loc_402DDB
.text:0000000000402E53 ; ---------------------------------------------------------------------------
.text:0000000000402E53
.text:0000000000402E53 loc_402E53:                             ; CODE XREF: sub_402D64+7B↑j
.text:0000000000402E53                 mov     rax, [rbp+var_30]
.text:0000000000402E57                 movzx   eax, byte ptr [rax]
.text:0000000000402E5A                 movzx   eax, al
.text:0000000000402E5D                 movsxd  rdx, eax
.text:0000000000402E60                 mov     rax, rdx
.text:0000000000402E63                 shl     rax, 3
.text:0000000000402E67                 add     rax, rdx
.text:0000000000402E6A                 shl     rax, 2
.text:0000000000402E6E                 mov     rdx, [rbp+var_30]
.text:0000000000402E72                 add     rax, rdx
.text:0000000000402E75                 lea     rdx, [rax+4]
.text:0000000000402E79                 mov     rax, [rbp+var_40]
.text:0000000000402E7D                 mov     rsi, rax
.text:0000000000402E80                 mov     rdi, rdx
.text:0000000000402E83                 mov     eax, 0
.text:0000000000402E88                 call    sub_40A07C
.text:0000000000402E8D                 add     eax, 1
.text:0000000000402E90                 mov     edx, eax
.text:0000000000402E92                 mov     rsi, [rbp+var_40]
.text:0000000000402E96                 mov     eax, [rbp+var_34]
.text:0000000000402E99                 mov     rcx, rbx
.text:0000000000402E9C                 mov     edi, eax
.text:0000000000402E9E                 call    sub_402807
.text:0000000000402EA3                 add     rsp, 38h
.text:0000000000402EA7                 pop     rbx
.text:0000000000402EA8                 pop     rbp
.text:0000000000402EA9                 retn
.text:0000000000402EA9 ; } // starts at 402D64
.text:0000000000402EA9 sub_402D64      endp
.text:0000000000402EA9
.text:0000000000402EAA
.text:0000000000402EAA ; =============== S U B R O U T I N E =======================================
.text:0000000000402EAA
.text:0000000000402EAA ; Attributes: bp-based frame
.text:0000000000402EAA
.text:0000000000402EAA sub_402EAA      proc near               ; CODE XREF: sub_4034B7+29↓p
.text:0000000000402EAA                                         ; sub_4034E7+7F↓p ...
.text:0000000000402EAA
.text:0000000000402EAA var_C0          = qword ptr -0C0h
.text:0000000000402EAA var_B8          = qword ptr -0B8h
.text:0000000000402EAA var_B0          = qword ptr -0B0h
.text:0000000000402EAA var_A8          = dword ptr -0A8h
.text:0000000000402EAA var_A4          = dword ptr -0A4h
.text:0000000000402EAA var_99          = byte ptr -99h
.text:0000000000402EAA var_98          = dword ptr -98h
.text:0000000000402EAA var_91          = byte ptr -91h
.text:0000000000402EAA var_90          = qword ptr -90h
.text:0000000000402EAA var_88          = qword ptr -88h
.text:0000000000402EAA var_7C          = dword ptr -7Ch
.text:0000000000402EAA var_78          = qword ptr -78h
.text:0000000000402EAA var_70          = qword ptr -70h
.text:0000000000402EAA var_68          = qword ptr -68h
.text:0000000000402EAA var_5C          = dword ptr -5Ch
.text:0000000000402EAA var_58          = qword ptr -58h
.text:0000000000402EAA var_50          = qword ptr -50h
.text:0000000000402EAA var_48          = qword ptr -48h
.text:0000000000402EAA var_3C          = dword ptr -3Ch
.text:0000000000402EAA var_38          = qword ptr -38h
.text:0000000000402EAA var_30          = qword ptr -30h
.text:0000000000402EAA var_28          = qword ptr -28h
.text:0000000000402EAA var_1C          = dword ptr -1Ch
.text:0000000000402EAA var_18          = qword ptr -18h
.text:0000000000402EAA var_10          = qword ptr -10h
.text:0000000000402EAA var_4           = dword ptr -4
.text:0000000000402EAA
.text:0000000000402EAA ; __unwind {
.text:0000000000402EAA                 push    rbp
.text:0000000000402EAB                 mov     rbp, rsp
.text:0000000000402EAE                 sub     rsp, 0C0h
.text:0000000000402EB5                 mov     [rbp+var_A4], edi
.text:0000000000402EBB                 mov     [rbp+var_B0], rsi
.text:0000000000402EC2                 mov     [rbp+var_A8], edx
.text:0000000000402EC8                 mov     [rbp+var_B8], rcx
.text:0000000000402ECF                 mov     [rbp+var_C0], r8
.text:0000000000402ED6                 nop
.text:0000000000402ED7                 nop
.text:0000000000402ED8                 nop
.text:0000000000402ED9                 nop
.text:0000000000402EDA                 nop
.text:0000000000402EDB                 nop
.text:0000000000402EDC                 nop
.text:0000000000402EDD                 nop
.text:0000000000402EDE                 nop
.text:0000000000402EDF                 nop
.text:0000000000402EE0                 nop
.text:0000000000402EE1                 nop
.text:0000000000402EE2                 nop
.text:0000000000402EE3                 nop
.text:0000000000402EE4                 nop
.text:0000000000402EE5                 nop
.text:0000000000402EE6                 nop
.text:0000000000402EE7                 nop
.text:0000000000402EE8                 nop
.text:0000000000402EE9                 nop
.text:0000000000402EEA                 nop
.text:0000000000402EEB                 mov     [rbp+var_91], 0
.text:0000000000402EF2                 lea     rax, unk_40B02F
.text:0000000000402EF9                 mov     [rbp+var_10], rax
.text:0000000000402EFD                 mov     rax, 358C92634DA67EB0h
.text:0000000000402F07                 mov     [rbp+var_18], rax
.text:0000000000402F0B                 mov     [rbp+var_1C], 5
.text:0000000000402F12                 call    getMem
.text:0000000000402F17                 mov     [rbp+var_28], rax
.text:0000000000402F1B                 mov     rax, [rbp+var_28]
.text:0000000000402F1F                 movzx   eax, byte ptr [rax]
.text:0000000000402F22                 movzx   eax, al
.text:0000000000402F25                 lea     ecx, [rax+3]
.text:0000000000402F28                 mov     edx, 66666667h
.text:0000000000402F2D                 mov     eax, ecx
.text:0000000000402F2F                 imul    edx
.text:0000000000402F31                 sar     edx, 2
.text:0000000000402F34                 mov     eax, ecx
.text:0000000000402F36                 sar     eax, 1Fh
.text:0000000000402F39                 sub     edx, eax
.text:0000000000402F3B                 mov     eax, edx
.text:0000000000402F3D                 shl     eax, 2
.text:0000000000402F40                 add     eax, edx
.text:0000000000402F42                 add     eax, eax
.text:0000000000402F44                 sub     ecx, eax
.text:0000000000402F46                 mov     edx, ecx
.text:0000000000402F48                 mov     rax, [rbp+var_28]
.text:0000000000402F4C                 mov     [rax], dl
.text:0000000000402F4E                 sub     [rbp+var_1C], 1
.text:0000000000402F52
.text:0000000000402F52 loc_402F52:                             ; CODE XREF: sub_402EAA+11E↓j
.text:0000000000402F52                 cmp     [rbp+var_1C], 0
.text:0000000000402F56                 js      short loc_402FCA
.text:0000000000402F58                 mov     rdx, [rbp+var_18]
.text:0000000000402F5C                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000402F66                 imul    rax, rdx
.text:0000000000402F6A                 add     rax, 1
.text:0000000000402F6E                 mov     [rbp+var_18], rax
.text:0000000000402F72                 mov     eax, [rbp+var_1C]
.text:0000000000402F75                 sar     eax, 2
.text:0000000000402F78                 cdqe
.text:0000000000402F7A                 lea     rdx, ds:0[rax*4]
.text:0000000000402F82                 mov     rax, [rbp+var_10]
.text:0000000000402F86                 add     rax, rdx
.text:0000000000402F89                 mov     edx, [rax]
.text:0000000000402F8B                 mov     rax, [rbp+var_18]
.text:0000000000402F8F                 shr     rax, 20h
.text:0000000000402F93                 mov     esi, eax
.text:0000000000402F95                 mov     rax, [rbp+var_28]
.text:0000000000402F99                 movzx   eax, byte ptr [rax]
.text:0000000000402F9C                 movzx   eax, al
.text:0000000000402F9F                 mov     ecx, [rbp+var_1C]
.text:0000000000402FA2                 mov     edi, ecx
.text:0000000000402FA4                 sar     edi, 2
.text:0000000000402FA7                 xor     esi, edx
.text:0000000000402FA9                 mov     rcx, [rbp+var_28]
.text:0000000000402FAD                 movsxd  rdi, edi
.text:0000000000402FB0                 movsxd  rdx, eax
.text:0000000000402FB3                 mov     rax, rdx
.text:0000000000402FB6                 shl     rax, 3
.text:0000000000402FBA                 add     rax, rdx
.text:0000000000402FBD                 add     rax, rdi
.text:0000000000402FC0                 mov     [rcx+rax*4+4], esi
.text:0000000000402FC4                 sub     [rbp+var_1C], 4
.text:0000000000402FC8                 jmp     short loc_402F52
.text:0000000000402FCA ; ---------------------------------------------------------------------------
.text:0000000000402FCA
.text:0000000000402FCA loc_402FCA:                             ; CODE XREF: sub_402EAA+AC↑j
.text:0000000000402FCA                 mov     rax, [rbp+var_28]
.text:0000000000402FCE                 movzx   eax, byte ptr [rax]
.text:0000000000402FD1                 movzx   eax, al
.text:0000000000402FD4                 movsxd  rdx, eax
.text:0000000000402FD7                 mov     rax, rdx
.text:0000000000402FDA                 shl     rax, 3
.text:0000000000402FDE                 add     rax, rdx
.text:0000000000402FE1                 shl     rax, 2
.text:0000000000402FE5                 mov     rdx, [rbp+var_28]
.text:0000000000402FE9                 add     rax, rdx
.text:0000000000402FEC                 lea     rdi, [rax+4]
.text:0000000000402FF0                 lea     rdx, [rbp+var_98]
.text:0000000000402FF7                 mov     eax, [rbp+var_A4]
.text:0000000000402FFD                 mov     r8d, 100h
.text:0000000000403003                 mov     ecx, 4
.text:0000000000403008                 mov     esi, eax
.text:000000000040300A                 mov     eax, 0
.text:000000000040300F                 call    sub_40A07C
.text:0000000000403014                 cmp     eax, 4
.text:0000000000403017                 jnz     short loc_403027
.text:0000000000403019                 mov     eax, [rbp+var_98]
.text:000000000040301F                 cdqe
.text:0000000000403021                 cmp     rax, 7
.text:0000000000403025                 ja      short loc_40302E
.text:0000000000403027
.text:0000000000403027 loc_403027:                             ; CODE XREF: sub_402EAA+16D↑j
.text:0000000000403027                 mov     eax, 1
.text:000000000040302C                 jmp     short loc_403033
.text:000000000040302E ; ---------------------------------------------------------------------------
.text:000000000040302E
.text:000000000040302E loc_40302E:                             ; CODE XREF: sub_402EAA+17B↑j
.text:000000000040302E                 mov     eax, 0
.text:0000000000403033
.text:0000000000403033 loc_403033:                             ; CODE XREF: sub_402EAA+182↑j
.text:0000000000403033                 test    al, al
.text:0000000000403035                 jz      short loc_403041
.text:0000000000403037                 mov     eax, 0
.text:000000000040303C                 jmp     locret_4034B5
.text:0000000000403041 ; ---------------------------------------------------------------------------
.text:0000000000403041
.text:0000000000403041 loc_403041:                             ; CODE XREF: sub_402EAA+18B↑j
.text:0000000000403041                 mov     eax, [rbp+var_98]
.text:0000000000403047                 sub     eax, 8
.text:000000000040304A                 mov     [rbp+var_98], eax
.text:0000000000403050                 lea     rax, unk_40B038
.text:0000000000403057                 mov     [rbp+var_30], rax
.text:000000000040305B                 mov     rax, 4331C2E5FEC7FBEDh
.text:0000000000403065                 mov     [rbp+var_38], rax
.text:0000000000403069                 mov     [rbp+var_3C], 5
.text:0000000000403070                 call    getMem
.text:0000000000403075                 mov     [rbp+var_48], rax
.text:0000000000403079                 mov     rax, [rbp+var_48]
.text:000000000040307D                 movzx   eax, byte ptr [rax]
.text:0000000000403080                 movzx   eax, al
.text:0000000000403083                 lea     ecx, [rax+3]
.text:0000000000403086                 mov     edx, 66666667h
.text:000000000040308B                 mov     eax, ecx
.text:000000000040308D                 imul    edx
.text:000000000040308F                 sar     edx, 2
.text:0000000000403092                 mov     eax, ecx
.text:0000000000403094                 sar     eax, 1Fh
.text:0000000000403097                 sub     edx, eax
.text:0000000000403099                 mov     eax, edx
.text:000000000040309B                 shl     eax, 2
.text:000000000040309E                 add     eax, edx
.text:00000000004030A0                 add     eax, eax
.text:00000000004030A2                 sub     ecx, eax
.text:00000000004030A4                 mov     edx, ecx
.text:00000000004030A6                 mov     rax, [rbp+var_48]
.text:00000000004030AA                 mov     [rax], dl
.text:00000000004030AC                 sub     [rbp+var_3C], 1
.text:00000000004030B0
.text:00000000004030B0 loc_4030B0:                             ; CODE XREF: sub_402EAA+27C↓j
.text:00000000004030B0                 cmp     [rbp+var_3C], 0
.text:00000000004030B4                 js      short loc_403128
.text:00000000004030B6                 mov     rdx, [rbp+var_38]
.text:00000000004030BA                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004030C4                 imul    rax, rdx
.text:00000000004030C8                 add     rax, 1
.text:00000000004030CC                 mov     [rbp+var_38], rax
.text:00000000004030D0                 mov     eax, [rbp+var_3C]
.text:00000000004030D3                 sar     eax, 2
.text:00000000004030D6                 cdqe
.text:00000000004030D8                 lea     rdx, ds:0[rax*4]
.text:00000000004030E0                 mov     rax, [rbp+var_30]
.text:00000000004030E4                 add     rax, rdx
.text:00000000004030E7                 mov     edx, [rax]
.text:00000000004030E9                 mov     rax, [rbp+var_38]
.text:00000000004030ED                 shr     rax, 20h
.text:00000000004030F1                 mov     esi, eax
.text:00000000004030F3                 mov     rax, [rbp+var_48]
.text:00000000004030F7                 movzx   eax, byte ptr [rax]
.text:00000000004030FA                 movzx   eax, al
.text:00000000004030FD                 mov     ecx, [rbp+var_3C]
.text:0000000000403100                 mov     edi, ecx
.text:0000000000403102                 sar     edi, 2
.text:0000000000403105                 xor     esi, edx
.text:0000000000403107                 mov     rcx, [rbp+var_48]
.text:000000000040310B                 movsxd  rdi, edi
.text:000000000040310E                 movsxd  rdx, eax
.text:0000000000403111                 mov     rax, rdx
.text:0000000000403114                 shl     rax, 3
.text:0000000000403118                 add     rax, rdx
.text:000000000040311B                 add     rax, rdi
.text:000000000040311E                 mov     [rcx+rax*4+4], esi
.text:0000000000403122                 sub     [rbp+var_3C], 4
.text:0000000000403126                 jmp     short loc_4030B0
.text:0000000000403128 ; ---------------------------------------------------------------------------
.text:0000000000403128
.text:0000000000403128 loc_403128:                             ; CODE XREF: sub_402EAA+20A↑j
.text:0000000000403128                 mov     rax, [rbp+var_48]
.text:000000000040312C                 movzx   eax, byte ptr [rax]
.text:000000000040312F                 movzx   eax, al
.text:0000000000403132                 movsxd  rdx, eax
.text:0000000000403135                 mov     rax, rdx
.text:0000000000403138                 shl     rax, 3
.text:000000000040313C                 add     rax, rdx
.text:000000000040313F                 shl     rax, 2
.text:0000000000403143                 mov     rdx, [rbp+var_48]
.text:0000000000403147                 add     rax, rdx
.text:000000000040314A                 lea     rdi, [rax+4]
.text:000000000040314E                 lea     rdx, [rbp+var_90]
.text:0000000000403155                 mov     eax, [rbp+var_A4]
.text:000000000040315B                 mov     r8d, 100h
.text:0000000000403161                 mov     ecx, 8
.text:0000000000403166                 mov     esi, eax
.text:0000000000403168                 mov     eax, 0
.text:000000000040316D                 call    sub_40A07C
.text:0000000000403172                 cmp     eax, 8
.text:0000000000403175                 setnz   al
.text:0000000000403178                 test    al, al
.text:000000000040317A                 jz      short loc_403186
.text:000000000040317C                 mov     eax, 0
.text:0000000000403181                 jmp     locret_4034B5
.text:0000000000403186 ; ---------------------------------------------------------------------------
.text:0000000000403186
.text:0000000000403186 loc_403186:                             ; CODE XREF: sub_402EAA+2D0↑j
.text:0000000000403186                 lea     rcx, [rbp+var_90]
.text:000000000040318D                 lea     rax, [rbp+var_91]
.text:0000000000403194                 mov     edx, 8
.text:0000000000403199                 mov     rsi, rcx
.text:000000000040319C                 mov     rdi, rax
.text:000000000040319F                 call    sub_4027C3
.text:00000000004031A4                 cmp     [rbp+var_C0], 0
.text:00000000004031AC                 jz      short loc_4031BF
.text:00000000004031AE                 mov     rdx, [rbp+var_90]
.text:00000000004031B5                 mov     rax, [rbp+var_C0]
.text:00000000004031BC                 mov     [rax], rdx
.text:00000000004031BF
.text:00000000004031BF loc_4031BF:                             ; CODE XREF: sub_402EAA+302↑j
.text:00000000004031BF                 mov     eax, [rbp+var_98]
.text:00000000004031C5                 sub     eax, 1
.text:00000000004031C8                 mov     [rbp+var_4], eax
.text:00000000004031CB                 mov     eax, [rbp+var_4]
.text:00000000004031CE                 cmp     eax, [rbp+var_A8]
.text:00000000004031D4                 jg      loc_4032FF
.text:00000000004031DA                 lea     rax, unk_40B041
.text:00000000004031E1                 mov     [rbp+var_50], rax
.text:00000000004031E5                 mov     rax, 7BE1389EE6849A0Fh
.text:00000000004031EF                 mov     [rbp+var_58], rax
.text:00000000004031F3                 mov     [rbp+var_5C], 5
.text:00000000004031FA                 call    getMem
.text:00000000004031FF                 mov     [rbp+var_68], rax
.text:0000000000403203                 mov     rax, [rbp+var_68]
.text:0000000000403207                 movzx   eax, byte ptr [rax]
.text:000000000040320A                 movzx   eax, al
.text:000000000040320D                 lea     ecx, [rax+3]
.text:0000000000403210                 mov     edx, 66666667h
.text:0000000000403215                 mov     eax, ecx
.text:0000000000403217                 imul    edx
.text:0000000000403219                 sar     edx, 2
.text:000000000040321C                 mov     eax, ecx
.text:000000000040321E                 sar     eax, 1Fh
.text:0000000000403221                 sub     edx, eax
.text:0000000000403223                 mov     eax, edx
.text:0000000000403225                 shl     eax, 2
.text:0000000000403228                 add     eax, edx
.text:000000000040322A                 add     eax, eax
.text:000000000040322C                 sub     ecx, eax
.text:000000000040322E                 mov     edx, ecx
.text:0000000000403230                 mov     rax, [rbp+var_68]
.text:0000000000403234                 mov     [rax], dl
.text:0000000000403236                 sub     [rbp+var_5C], 1
.text:000000000040323A
.text:000000000040323A loc_40323A:                             ; CODE XREF: sub_402EAA+406↓j
.text:000000000040323A                 cmp     [rbp+var_5C], 0
.text:000000000040323E                 js      short loc_4032B2
.text:0000000000403240                 mov     rdx, [rbp+var_58]
.text:0000000000403244                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040324E                 imul    rax, rdx
.text:0000000000403252                 add     rax, 1
.text:0000000000403256                 mov     [rbp+var_58], rax
.text:000000000040325A                 mov     eax, [rbp+var_5C]
.text:000000000040325D                 sar     eax, 2
.text:0000000000403260                 cdqe
.text:0000000000403262                 lea     rdx, ds:0[rax*4]
.text:000000000040326A                 mov     rax, [rbp+var_50]
.text:000000000040326E                 add     rax, rdx
.text:0000000000403271                 mov     edx, [rax]
.text:0000000000403273                 mov     rax, [rbp+var_58]
.text:0000000000403277                 shr     rax, 20h
.text:000000000040327B                 mov     esi, eax
.text:000000000040327D                 mov     rax, [rbp+var_68]
.text:0000000000403281                 movzx   eax, byte ptr [rax]
.text:0000000000403284                 movzx   eax, al
.text:0000000000403287                 mov     ecx, [rbp+var_5C]
.text:000000000040328A                 mov     edi, ecx
.text:000000000040328C                 sar     edi, 2
.text:000000000040328F                 xor     esi, edx
.text:0000000000403291                 mov     rcx, [rbp+var_68]
.text:0000000000403295                 movsxd  rdi, edi
.text:0000000000403298                 movsxd  rdx, eax
.text:000000000040329B                 mov     rax, rdx
.text:000000000040329E                 shl     rax, 3
.text:00000000004032A2                 add     rax, rdx
.text:00000000004032A5                 add     rax, rdi
.text:00000000004032A8                 mov     [rcx+rax*4+4], esi
.text:00000000004032AC                 sub     [rbp+var_5C], 4
.text:00000000004032B0                 jmp     short loc_40323A
.text:00000000004032B2 ; ---------------------------------------------------------------------------
.text:00000000004032B2
.text:00000000004032B2 loc_4032B2:                             ; CODE XREF: sub_402EAA+394↑j
.text:00000000004032B2                 mov     rax, [rbp+var_68]
.text:00000000004032B6                 movzx   eax, byte ptr [rax]
.text:00000000004032B9                 movzx   eax, al
.text:00000000004032BC                 movsxd  rdx, eax
.text:00000000004032BF                 mov     rax, rdx
.text:00000000004032C2                 shl     rax, 3
.text:00000000004032C6                 add     rax, rdx
.text:00000000004032C9                 shl     rax, 2
.text:00000000004032CD                 mov     rdx, [rbp+var_68]
.text:00000000004032D1                 add     rax, rdx
.text:00000000004032D4                 lea     rdi, [rax+4]
.text:00000000004032D8                 mov     ecx, [rbp+var_4]
.text:00000000004032DB                 mov     rdx, [rbp+var_B0]
.text:00000000004032E2                 mov     eax, [rbp+var_A4]
.text:00000000004032E8                 mov     r8d, 100h
.text:00000000004032EE                 mov     esi, eax
.text:00000000004032F0                 mov     eax, 0
.text:00000000004032F5                 call    sub_40A07C
.text:00000000004032FA                 cmp     [rbp+var_4], eax
.text:00000000004032FD                 jz      short loc_403306
.text:00000000004032FF
.text:00000000004032FF loc_4032FF:                             ; CODE XREF: sub_402EAA+32A↑j
.text:00000000004032FF                 mov     eax, 1
.text:0000000000403304                 jmp     short loc_40330B
.text:0000000000403306 ; ---------------------------------------------------------------------------
.text:0000000000403306
.text:0000000000403306 loc_403306:                             ; CODE XREF: sub_402EAA+453↑j
.text:0000000000403306                 mov     eax, 0
.text:000000000040330B
.text:000000000040330B loc_40330B:                             ; CODE XREF: sub_402EAA+45A↑j
.text:000000000040330B                 test    al, al
.text:000000000040330D                 jz      short loc_403319
.text:000000000040330F                 mov     eax, 0
.text:0000000000403314                 jmp     locret_4034B5
.text:0000000000403319 ; ---------------------------------------------------------------------------
.text:0000000000403319
.text:0000000000403319 loc_403319:                             ; CODE XREF: sub_402EAA+463↑j
.text:0000000000403319                 mov     edx, [rbp+var_4]
.text:000000000040331C                 mov     rcx, [rbp+var_B0]
.text:0000000000403323                 lea     rax, [rbp+var_91]
.text:000000000040332A                 mov     rsi, rcx
.text:000000000040332D                 mov     rdi, rax
.text:0000000000403330                 call    sub_4027C3
.text:0000000000403335                 cmp     [rbp+var_B8], 0
.text:000000000040333D                 jz      short loc_40334B
.text:000000000040333F                 mov     rax, [rbp+var_B8]
.text:0000000000403346                 mov     edx, [rbp+var_4]
.text:0000000000403349                 mov     [rax], edx
.text:000000000040334B
.text:000000000040334B loc_40334B:                             ; CODE XREF: sub_402EAA+493↑j
.text:000000000040334B                 lea     rax, unk_40B04A
.text:0000000000403352                 mov     [rbp+var_70], rax
.text:0000000000403356                 mov     rax, 0C304EC9955CDEEh
.text:0000000000403360                 mov     [rbp+var_78], rax
.text:0000000000403364                 mov     [rbp+var_7C], 5
.text:000000000040336B                 call    getMem
.text:0000000000403370                 mov     [rbp+var_88], rax
.text:0000000000403377                 mov     rax, [rbp+var_88]
.text:000000000040337E                 movzx   eax, byte ptr [rax]
.text:0000000000403381                 movzx   eax, al
.text:0000000000403384                 lea     ecx, [rax+3]
.text:0000000000403387                 mov     edx, 66666667h
.text:000000000040338C                 mov     eax, ecx
.text:000000000040338E                 imul    edx
.text:0000000000403390                 sar     edx, 2
.text:0000000000403393                 mov     eax, ecx
.text:0000000000403395                 sar     eax, 1Fh
.text:0000000000403398                 sub     edx, eax
.text:000000000040339A                 mov     eax, edx
.text:000000000040339C                 shl     eax, 2
.text:000000000040339F                 add     eax, edx
.text:00000000004033A1                 add     eax, eax
.text:00000000004033A3                 sub     ecx, eax
.text:00000000004033A5                 mov     edx, ecx
.text:00000000004033A7                 mov     rax, [rbp+var_88]
.text:00000000004033AE                 mov     [rax], dl
.text:00000000004033B0                 sub     [rbp+var_7C], 1
.text:00000000004033B4
.text:00000000004033B4 loc_4033B4:                             ; CODE XREF: sub_402EAA+586↓j
.text:00000000004033B4                 cmp     [rbp+var_7C], 0
.text:00000000004033B8                 js      short loc_403432
.text:00000000004033BA                 mov     rdx, [rbp+var_78]
.text:00000000004033BE                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004033C8                 imul    rax, rdx
.text:00000000004033CC                 add     rax, 1
.text:00000000004033D0                 mov     [rbp+var_78], rax
.text:00000000004033D4                 mov     eax, [rbp+var_7C]
.text:00000000004033D7                 sar     eax, 2
.text:00000000004033DA                 cdqe
.text:00000000004033DC                 lea     rdx, ds:0[rax*4]
.text:00000000004033E4                 mov     rax, [rbp+var_70]
.text:00000000004033E8                 add     rax, rdx
.text:00000000004033EB                 mov     edx, [rax]
.text:00000000004033ED                 mov     rax, [rbp+var_78]
.text:00000000004033F1                 shr     rax, 20h
.text:00000000004033F5                 mov     esi, eax
.text:00000000004033F7                 mov     rax, [rbp+var_88]
.text:00000000004033FE                 movzx   eax, byte ptr [rax]
.text:0000000000403401                 movzx   eax, al
.text:0000000000403404                 mov     ecx, [rbp+var_7C]
.text:0000000000403407                 mov     edi, ecx
.text:0000000000403409                 sar     edi, 2
.text:000000000040340C                 xor     esi, edx
.text:000000000040340E                 mov     rcx, [rbp+var_88]
.text:0000000000403415                 movsxd  rdi, edi
.text:0000000000403418                 movsxd  rdx, eax
.text:000000000040341B                 mov     rax, rdx
.text:000000000040341E                 shl     rax, 3
.text:0000000000403422                 add     rax, rdx
.text:0000000000403425                 add     rax, rdi
.text:0000000000403428                 mov     [rcx+rax*4+4], esi
.text:000000000040342C                 sub     [rbp+var_7C], 4
.text:0000000000403430                 jmp     short loc_4033B4
.text:0000000000403432 ; ---------------------------------------------------------------------------
.text:0000000000403432
.text:0000000000403432 loc_403432:                             ; CODE XREF: sub_402EAA+50E↑j
.text:0000000000403432                 mov     rax, [rbp+var_88]
.text:0000000000403439                 movzx   eax, byte ptr [rax]
.text:000000000040343C                 movzx   eax, al
.text:000000000040343F                 movsxd  rdx, eax
.text:0000000000403442                 mov     rax, rdx
.text:0000000000403445                 shl     rax, 3
.text:0000000000403449                 add     rax, rdx
.text:000000000040344C                 shl     rax, 2
.text:0000000000403450                 mov     rdx, [rbp+var_88]
.text:0000000000403457                 add     rax, rdx
.text:000000000040345A                 lea     rdi, [rax+4]
.text:000000000040345E                 lea     rdx, [rbp+var_99]
.text:0000000000403465                 mov     eax, [rbp+var_A4]
.text:000000000040346B                 mov     r8d, 0
.text:0000000000403471                 mov     ecx, 1
.text:0000000000403476                 mov     esi, eax
.text:0000000000403478                 mov     eax, 0
.text:000000000040347D                 call    sub_40A07C
.text:0000000000403482                 cmp     eax, 1
.text:0000000000403485                 jnz     short loc_403499
.text:0000000000403487                 movzx   edx, [rbp+var_99]
.text:000000000040348E                 movzx   eax, [rbp+var_91]
.text:0000000000403495                 cmp     dl, al
.text:0000000000403497                 jz      short loc_4034A0
.text:0000000000403499
.text:0000000000403499 loc_403499:                             ; CODE XREF: sub_402EAA+5DB↑j
.text:0000000000403499                 mov     eax, 1
.text:000000000040349E                 jmp     short loc_4034A5
.text:00000000004034A0 ; ---------------------------------------------------------------------------
.text:00000000004034A0
.text:00000000004034A0 loc_4034A0:                             ; CODE XREF: sub_402EAA+5ED↑j
.text:00000000004034A0                 mov     eax, 0
.text:00000000004034A5
.text:00000000004034A5 loc_4034A5:                             ; CODE XREF: sub_402EAA+5F4↑j
.text:00000000004034A5                 test    al, al
.text:00000000004034A7                 jz      short loc_4034B0
.text:00000000004034A9                 mov     eax, 0
.text:00000000004034AE                 jmp     short locret_4034B5
.text:00000000004034B0 ; ---------------------------------------------------------------------------
.text:00000000004034B0
.text:00000000004034B0 loc_4034B0:                             ; CODE XREF: sub_402EAA+5FD↑j
.text:00000000004034B0                 mov     eax, 1
.text:00000000004034B5
.text:00000000004034B5 locret_4034B5:                          ; CODE XREF: sub_402EAA+192↑j
.text:00000000004034B5                                         ; sub_402EAA+2D7↑j ...
.text:00000000004034B5                 leave
.text:00000000004034B6                 retn
.text:00000000004034B6 ; } // starts at 402EAA
.text:00000000004034B6 sub_402EAA      endp
.text:00000000004034B6
.text:00000000004034B7
.text:00000000004034B7 ; =============== S U B R O U T I N E =======================================
.text:00000000004034B7
.text:00000000004034B7 ; Attributes: bp-based frame
.text:00000000004034B7
.text:00000000004034B7 sub_4034B7      proc near               ; CODE XREF: sub_405008+181↓p
.text:00000000004034B7
.text:00000000004034B7 var_10          = qword ptr -10h
.text:00000000004034B7 var_8           = dword ptr -8
.text:00000000004034B7 var_4           = dword ptr -4
.text:00000000004034B7
.text:00000000004034B7 ; __unwind {
.text:00000000004034B7                 push    rbp
.text:00000000004034B8                 mov     rbp, rsp
.text:00000000004034BB                 sub     rsp, 10h
.text:00000000004034BF                 mov     [rbp+var_4], edi
.text:00000000004034C2                 mov     [rbp+var_10], rsi
.text:00000000004034C6                 mov     [rbp+var_8], edx
.text:00000000004034C9                 mov     edx, [rbp+var_8]
.text:00000000004034CC                 mov     rsi, [rbp+var_10]
.text:00000000004034D0                 mov     eax, [rbp+var_4]
.text:00000000004034D3                 mov     r8d, 0
.text:00000000004034D9                 mov     ecx, 0
.text:00000000004034DE                 mov     edi, eax
.text:00000000004034E0                 call    sub_402EAA
.text:00000000004034E5                 leave
.text:00000000004034E6                 retn
.text:00000000004034E6 ; } // starts at 4034B7
.text:00000000004034E6 sub_4034B7      endp
.text:00000000004034E6
.text:00000000004034E7
.text:00000000004034E7 ; =============== S U B R O U T I N E =======================================
.text:00000000004034E7
.text:00000000004034E7 ; Attributes: bp-based frame
.text:00000000004034E7
.text:00000000004034E7 sub_4034E7      proc near               ; CODE XREF: sub_403FFF+171↓p
.text:00000000004034E7
.text:00000000004034E7 var_558         = dword ptr -558h
.text:00000000004034E7 var_554         = dword ptr -554h
.text:00000000004034E7 var_54C         = dword ptr -54Ch
.text:00000000004034E7 var_548         = qword ptr -548h
.text:00000000004034E7 var_540         = byte ptr -540h
.text:00000000004034E7 var_158         = qword ptr -158h
.text:00000000004034E7 var_14C         = dword ptr -14Ch
.text:00000000004034E7 var_148         = qword ptr -148h
.text:00000000004034E7 var_140         = qword ptr -140h
.text:00000000004034E7 var_138         = qword ptr -138h
.text:00000000004034E7 var_12C         = dword ptr -12Ch
.text:00000000004034E7 var_128         = qword ptr -128h
.text:00000000004034E7 var_120         = qword ptr -120h
.text:00000000004034E7 var_118         = qword ptr -118h
.text:00000000004034E7 var_10C         = dword ptr -10Ch
.text:00000000004034E7 var_108         = qword ptr -108h
.text:00000000004034E7 var_100         = qword ptr -100h
.text:00000000004034E7 var_F2          = byte ptr -0F2h
.text:00000000004034E7 var_F1          = byte ptr -0F1h
.text:00000000004034E7 var_F0          = qword ptr -0F0h
.text:00000000004034E7 var_E8          = qword ptr -0E8h
.text:00000000004034E7 var_E0          = qword ptr -0E0h
.text:00000000004034E7 var_D8          = qword ptr -0D8h
.text:00000000004034E7 var_D0          = qword ptr -0D0h
.text:00000000004034E7 var_C4          = dword ptr -0C4h
.text:00000000004034E7 var_C0          = qword ptr -0C0h
.text:00000000004034E7 var_B8          = qword ptr -0B8h
.text:00000000004034E7 var_AA          = byte ptr -0AAh
.text:00000000004034E7 var_A9          = byte ptr -0A9h
.text:00000000004034E7 var_A8          = qword ptr -0A8h
.text:00000000004034E7 var_A0          = qword ptr -0A0h
.text:00000000004034E7 var_98          = qword ptr -98h
.text:00000000004034E7 var_90          = qword ptr -90h
.text:00000000004034E7 var_88          = qword ptr -88h
.text:00000000004034E7 var_7C          = dword ptr -7Ch
.text:00000000004034E7 var_78          = qword ptr -78h
.text:00000000004034E7 var_70          = qword ptr -70h
.text:00000000004034E7 var_62          = byte ptr -62h
.text:00000000004034E7 var_61          = byte ptr -61h
.text:00000000004034E7 var_60          = qword ptr -60h
.text:00000000004034E7 var_58          = qword ptr -58h
.text:00000000004034E7 var_50          = qword ptr -50h
.text:00000000004034E7 var_48          = qword ptr -48h
.text:00000000004034E7 var_40          = qword ptr -40h
.text:00000000004034E7 var_34          = dword ptr -34h
.text:00000000004034E7 var_30          = qword ptr -30h
.text:00000000004034E7 var_28          = qword ptr -28h
.text:00000000004034E7 var_1C          = dword ptr -1Ch
.text:00000000004034E7 var_18          = qword ptr -18h
.text:00000000004034E7
.text:00000000004034E7 ; __unwind {
.text:00000000004034E7                 push    rbp
.text:00000000004034E8                 mov     rbp, rsp
.text:00000000004034EB                 push    rbx
.text:00000000004034EC                 sub     rsp, 558h
.text:00000000004034F3                 mov     [rbp+var_554], edi
.text:00000000004034F9                 mov     [rbp+var_558], esi
.text:00000000004034FF                 nop
.text:0000000000403500                 nop
.text:0000000000403501                 nop
.text:0000000000403502                 nop
.text:0000000000403503                 nop
.text:0000000000403504                 nop
.text:0000000000403505                 nop
.text:0000000000403506                 nop
.text:0000000000403507                 nop
.text:0000000000403508                 nop
.text:0000000000403509                 nop
.text:000000000040350A                 nop
.text:000000000040350B                 nop
.text:000000000040350C                 nop
.text:000000000040350D                 nop
.text:000000000040350E                 nop
.text:000000000040350F                 nop
.text:0000000000403510                 nop
.text:0000000000403511                 nop
.text:0000000000403512                 nop
.text:0000000000403513                 nop
.text:0000000000403514                 lea     rdx, [rbp+var_540]
.text:000000000040351B                 mov     eax, 0
.text:0000000000403520                 mov     ecx, 7Dh
.text:0000000000403525                 mov     rdi, rdx
.text:0000000000403528                 rep stosq
.text:000000000040352B                 mov     rax, fs:28h
.text:0000000000403534                 mov     rbx, rax
.text:0000000000403537                 mov     rax, rbx
.text:000000000040353A                 mov     [rbp+var_18], rax
.text:000000000040353E                 lea     rcx, [rbp+var_548]
.text:0000000000403545                 lea     rdx, [rbp+var_54C]
.text:000000000040354C                 lea     rsi, [rbp+var_540]
.text:0000000000403553                 mov     eax, [rbp+var_558]
.text:0000000000403559                 mov     r8, rcx
.text:000000000040355C                 mov     rcx, rdx
.text:000000000040355F                 mov     edx, 3E8h
.text:0000000000403564                 mov     edi, eax
.text:0000000000403566                 call    sub_402EAA
.text:000000000040356B                 xor     eax, 1
.text:000000000040356E                 test    al, al
.text:0000000000403570                 jnz     short loc_403585
.text:0000000000403572                 mov     rdx, [rbp+var_548]
.text:0000000000403579                 mov     rax, cs:qword_60C0D0
.text:0000000000403580                 cmp     rdx, rax
.text:0000000000403583                 jnz     short loc_40358C
.text:0000000000403585
.text:0000000000403585 loc_403585:                             ; CODE XREF: sub_4034E7+89↑j
.text:0000000000403585                 mov     eax, 1
.text:000000000040358A                 jmp     short loc_403591
.text:000000000040358C ; ---------------------------------------------------------------------------
.text:000000000040358C
.text:000000000040358C loc_40358C:                             ; CODE XREF: sub_4034E7+9C↑j
.text:000000000040358C                 mov     eax, 0
.text:0000000000403591
.text:0000000000403591 loc_403591:                             ; CODE XREF: sub_4034E7+A3↑j
.text:0000000000403591                 test    al, al
.text:0000000000403593                 jnz     loc_403E75
.text:0000000000403599                 lea     rax, unk_40B053
.text:00000000004035A0                 mov     [rbp+var_28], rax
.text:00000000004035A4                 mov     rax, 60E14E6DC0B1E60Eh
.text:00000000004035AE                 mov     [rbp+var_30], rax
.text:00000000004035B2                 mov     [rbp+var_34], 6
.text:00000000004035B9                 call    getMem
.text:00000000004035BE                 mov     [rbp+var_40], rax
.text:00000000004035C2                 mov     rax, [rbp+var_40]
.text:00000000004035C6                 movzx   eax, byte ptr [rax]
.text:00000000004035C9                 movzx   eax, al
.text:00000000004035CC                 lea     ecx, [rax+3]
.text:00000000004035CF                 mov     edx, 66666667h
.text:00000000004035D4                 mov     eax, ecx
.text:00000000004035D6                 imul    edx
.text:00000000004035D8                 sar     edx, 2
.text:00000000004035DB                 mov     eax, ecx
.text:00000000004035DD                 sar     eax, 1Fh
.text:00000000004035E0                 sub     edx, eax
.text:00000000004035E2                 mov     eax, edx
.text:00000000004035E4                 shl     eax, 2
.text:00000000004035E7                 add     eax, edx
.text:00000000004035E9                 add     eax, eax
.text:00000000004035EB                 sub     ecx, eax
.text:00000000004035ED                 mov     edx, ecx
.text:00000000004035EF                 mov     rax, [rbp+var_40]
.text:00000000004035F3                 mov     [rax], dl
.text:00000000004035F5                 sub     [rbp+var_34], 1
.text:00000000004035F9
.text:00000000004035F9 loc_4035F9:                             ; CODE XREF: sub_4034E7+188↓j
.text:00000000004035F9                 cmp     [rbp+var_34], 0
.text:00000000004035FD                 js      short loc_403671
.text:00000000004035FF                 mov     rdx, [rbp+var_30]
.text:0000000000403603                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040360D                 imul    rax, rdx
.text:0000000000403611                 add     rax, 1
.text:0000000000403615                 mov     [rbp+var_30], rax
.text:0000000000403619                 mov     eax, [rbp+var_34]
.text:000000000040361C                 sar     eax, 2
.text:000000000040361F                 cdqe
.text:0000000000403621                 lea     rdx, ds:0[rax*4]
.text:0000000000403629                 mov     rax, [rbp+var_28]
.text:000000000040362D                 add     rax, rdx
.text:0000000000403630                 mov     edx, [rax]
.text:0000000000403632                 mov     rax, [rbp+var_30]
.text:0000000000403636                 shr     rax, 20h
.text:000000000040363A                 mov     esi, eax
.text:000000000040363C                 mov     rax, [rbp+var_40]
.text:0000000000403640                 movzx   eax, byte ptr [rax]
.text:0000000000403643                 movzx   eax, al
.text:0000000000403646                 mov     ecx, [rbp+var_34]
.text:0000000000403649                 mov     edi, ecx
.text:000000000040364B                 sar     edi, 2
.text:000000000040364E                 xor     esi, edx
.text:0000000000403650                 mov     rcx, [rbp+var_40]
.text:0000000000403654                 movsxd  rdi, edi
.text:0000000000403657                 movsxd  rdx, eax
.text:000000000040365A                 mov     rax, rdx
.text:000000000040365D                 shl     rax, 3
.text:0000000000403661                 add     rax, rdx
.text:0000000000403664                 add     rax, rdi
.text:0000000000403667                 mov     [rcx+rax*4+4], esi
.text:000000000040366B                 sub     [rbp+var_34], 4
.text:000000000040366F                 jmp     short loc_4035F9
.text:0000000000403671 ; ---------------------------------------------------------------------------
.text:0000000000403671
.text:0000000000403671 loc_403671:                             ; CODE XREF: sub_4034E7+116↑j
.text:0000000000403671                 mov     rax, [rbp+var_40]
.text:0000000000403675                 movzx   eax, byte ptr [rax]
.text:0000000000403678                 movzx   eax, al
.text:000000000040367B                 movsxd  rdx, eax
.text:000000000040367E                 mov     rax, rdx
.text:0000000000403681                 shl     rax, 3
.text:0000000000403685                 add     rax, rdx
.text:0000000000403688                 shl     rax, 2
.text:000000000040368C                 mov     rdx, [rbp+var_40]
.text:0000000000403690                 add     rax, rdx
.text:0000000000403693                 lea     rdx, [rax+4]
.text:0000000000403697                 lea     rax, [rbp+var_540]
.text:000000000040369E                 mov     [rbp+var_48], rax
.text:00000000004036A2                 mov     [rbp+var_50], rdx
.text:00000000004036A6                 mov     rax, [rbp+var_48]
.text:00000000004036AA                 mov     [rbp+var_58], rax
.text:00000000004036AE                 mov     rax, [rbp+var_50]
.text:00000000004036B2                 mov     [rbp+var_60], rax
.text:00000000004036B6
.text:00000000004036B6 loc_4036B6:                             ; CODE XREF: sub_4034E7+200↓j
.text:00000000004036B6                 mov     rax, [rbp+var_58]
.text:00000000004036BA                 lea     rdx, [rax+1]
.text:00000000004036BE                 mov     [rbp+var_58], rdx
.text:00000000004036C2                 movzx   eax, byte ptr [rax]
.text:00000000004036C5                 mov     [rbp+var_61], al
.text:00000000004036C8                 mov     rax, [rbp+var_60]
.text:00000000004036CC                 lea     rdx, [rax+1]
.text:00000000004036D0                 mov     [rbp+var_60], rdx
.text:00000000004036D4                 movzx   eax, byte ptr [rax]
.text:00000000004036D7                 mov     [rbp+var_62], al
.text:00000000004036DA                 cmp     [rbp+var_61], 0
.text:00000000004036DE                 jz      short loc_4036E9
.text:00000000004036E0                 movzx   eax, [rbp+var_61]
.text:00000000004036E4                 cmp     al, [rbp+var_62]
.text:00000000004036E7                 jz      short loc_4036B6
.text:00000000004036E9
.text:00000000004036E9 loc_4036E9:                             ; CODE XREF: sub_4034E7+1F7↑j
.text:00000000004036E9                 movzx   eax, [rbp+var_61]
.text:00000000004036ED                 cmp     al, [rbp+var_62]
.text:00000000004036F0                 setz    al
.text:00000000004036F3                 movzx   eax, al
.text:00000000004036F6                 test    eax, eax
.text:00000000004036F8                 jnz     loc_4038AE
.text:00000000004036FE                 lea     rax, unk_40B05C
.text:0000000000403705                 mov     [rbp+var_70], rax
.text:0000000000403709                 mov     rax, 0F26F65B1A0696164h
.text:0000000000403713                 mov     [rbp+var_78], rax
.text:0000000000403717                 mov     [rbp+var_7C], 0Bh
.text:000000000040371E                 call    getMem
.text:0000000000403723                 mov     [rbp+var_88], rax
.text:000000000040372A                 mov     rax, [rbp+var_88]
.text:0000000000403731                 movzx   eax, byte ptr [rax]
.text:0000000000403734                 movzx   eax, al
.text:0000000000403737                 lea     ecx, [rax+3]
.text:000000000040373A                 mov     edx, 66666667h
.text:000000000040373F                 mov     eax, ecx
.text:0000000000403741                 imul    edx
.text:0000000000403743                 sar     edx, 2
.text:0000000000403746                 mov     eax, ecx
.text:0000000000403748                 sar     eax, 1Fh
.text:000000000040374B                 sub     edx, eax
.text:000000000040374D                 mov     eax, edx
.text:000000000040374F                 shl     eax, 2
.text:0000000000403752                 add     eax, edx
.text:0000000000403754                 add     eax, eax
.text:0000000000403756                 sub     ecx, eax
.text:0000000000403758                 mov     edx, ecx
.text:000000000040375A                 mov     rax, [rbp+var_88]
.text:0000000000403761                 mov     [rax], dl
.text:0000000000403763                 sub     [rbp+var_7C], 1
.text:0000000000403767
.text:0000000000403767 loc_403767:                             ; CODE XREF: sub_4034E7+2FC↓j
.text:0000000000403767                 cmp     [rbp+var_7C], 0
.text:000000000040376B                 js      short loc_4037E5
.text:000000000040376D                 mov     rdx, [rbp+var_78]
.text:0000000000403771                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040377B                 imul    rax, rdx
.text:000000000040377F                 add     rax, 1
.text:0000000000403783                 mov     [rbp+var_78], rax
.text:0000000000403787                 mov     eax, [rbp+var_7C]
.text:000000000040378A                 sar     eax, 2
.text:000000000040378D                 cdqe
.text:000000000040378F                 lea     rdx, ds:0[rax*4]
.text:0000000000403797                 mov     rax, [rbp+var_70]
.text:000000000040379B                 add     rax, rdx
.text:000000000040379E                 mov     edx, [rax]
.text:00000000004037A0                 mov     rax, [rbp+var_78]
.text:00000000004037A4                 shr     rax, 20h
.text:00000000004037A8                 mov     esi, eax
.text:00000000004037AA                 mov     rax, [rbp+var_88]
.text:00000000004037B1                 movzx   eax, byte ptr [rax]
.text:00000000004037B4                 movzx   eax, al
.text:00000000004037B7                 mov     ecx, [rbp+var_7C]
.text:00000000004037BA                 mov     edi, ecx
.text:00000000004037BC                 sar     edi, 2
.text:00000000004037BF                 xor     esi, edx
.text:00000000004037C1                 mov     rcx, [rbp+var_88]
.text:00000000004037C8                 movsxd  rdi, edi
.text:00000000004037CB                 movsxd  rdx, eax
.text:00000000004037CE                 mov     rax, rdx
.text:00000000004037D1                 shl     rax, 3
.text:00000000004037D5                 add     rax, rdx
.text:00000000004037D8                 add     rax, rdi
.text:00000000004037DB                 mov     [rcx+rax*4+4], esi
.text:00000000004037DF                 sub     [rbp+var_7C], 4
.text:00000000004037E3                 jmp     short loc_403767
.text:00000000004037E5 ; ---------------------------------------------------------------------------
.text:00000000004037E5
.text:00000000004037E5 loc_4037E5:                             ; CODE XREF: sub_4034E7+284↑j
.text:00000000004037E5                 mov     rax, [rbp+var_88]
.text:00000000004037EC                 movzx   eax, byte ptr [rax]
.text:00000000004037EF                 movzx   eax, al
.text:00000000004037F2                 movsxd  rdx, eax
.text:00000000004037F5                 mov     rax, rdx
.text:00000000004037F8                 shl     rax, 3
.text:00000000004037FC                 add     rax, rdx
.text:00000000004037FF                 shl     rax, 2
.text:0000000000403803                 mov     rdx, [rbp+var_88]
.text:000000000040380A                 add     rax, rdx
.text:000000000040380D                 lea     rdx, [rax+4]
.text:0000000000403811                 lea     rax, [rbp+var_540]
.text:0000000000403818                 mov     [rbp+var_90], rax
.text:000000000040381F                 mov     [rbp+var_98], rdx
.text:0000000000403826                 mov     rax, [rbp+var_90]
.text:000000000040382D                 mov     [rbp+var_A0], rax
.text:0000000000403834                 mov     rax, [rbp+var_98]
.text:000000000040383B                 mov     [rbp+var_A8], rax
.text:0000000000403842
.text:0000000000403842 loc_403842:                             ; CODE XREF: sub_4034E7+3A7↓j
.text:0000000000403842                 mov     rax, [rbp+var_A0]
.text:0000000000403849                 lea     rdx, [rax+1]
.text:000000000040384D                 mov     [rbp+var_A0], rdx
.text:0000000000403854                 movzx   eax, byte ptr [rax]
.text:0000000000403857                 mov     [rbp+var_A9], al
.text:000000000040385D                 mov     rax, [rbp+var_A8]
.text:0000000000403864                 lea     rdx, [rax+1]
.text:0000000000403868                 mov     [rbp+var_A8], rdx
.text:000000000040386F                 movzx   eax, byte ptr [rax]
.text:0000000000403872                 mov     [rbp+var_AA], al
.text:0000000000403878                 cmp     [rbp+var_A9], 0
.text:000000000040387F                 jz      short loc_403890
.text:0000000000403881                 movzx   eax, [rbp+var_A9]
.text:0000000000403888                 cmp     al, [rbp+var_AA]
.text:000000000040388E                 jz      short loc_403842
.text:0000000000403890
.text:0000000000403890 loc_403890:                             ; CODE XREF: sub_4034E7+398↑j
.text:0000000000403890                 movzx   eax, [rbp+var_A9]
.text:0000000000403897                 cmp     al, [rbp+var_AA]
.text:000000000040389D                 setz    al
.text:00000000004038A0                 movzx   eax, al
.text:00000000004038A3                 test    eax, eax
.text:00000000004038A5                 jnz     short loc_4038AE
.text:00000000004038A7                 mov     eax, 1
.text:00000000004038AC                 jmp     short loc_4038B3
.text:00000000004038AE ; ---------------------------------------------------------------------------
.text:00000000004038AE
.text:00000000004038AE loc_4038AE:                             ; CODE XREF: sub_4034E7+211↑j
.text:00000000004038AE                                         ; sub_4034E7+3BE↑j
.text:00000000004038AE                 mov     eax, 0
.text:00000000004038B3
.text:00000000004038B3 loc_4038B3:                             ; CODE XREF: sub_4034E7+3C5↑j
.text:00000000004038B3                 test    al, al
.text:00000000004038B5                 jnz     loc_403E78
.text:00000000004038BB                 mov     rcx, [rbp+var_548]
.text:00000000004038C2                 mov     edx, [rbp+var_54C]
.text:00000000004038C8                 lea     rsi, [rbp+var_540]
.text:00000000004038CF                 mov     eax, [rbp+var_554]
.text:00000000004038D5                 mov     edi, eax
.text:00000000004038D7                 call    sub_402807
.text:00000000004038DC                 xor     eax, 1
.text:00000000004038DF                 test    al, al
.text:00000000004038E1                 jnz     loc_403E7B
.text:00000000004038E7                 lea     rcx, [rbp+var_548]
.text:00000000004038EE                 lea     rdx, [rbp+var_54C]
.text:00000000004038F5                 lea     rsi, [rbp+var_540]
.text:00000000004038FC                 mov     eax, [rbp+var_554]
.text:0000000000403902                 mov     r8, rcx
.text:0000000000403905                 mov     rcx, rdx
.text:0000000000403908                 mov     edx, 3E8h
.text:000000000040390D                 mov     edi, eax
.text:000000000040390F                 call    sub_402EAA
.text:0000000000403914                 xor     eax, 1
.text:0000000000403917                 test    al, al
.text:0000000000403919                 jnz     loc_403E7E
.text:000000000040391F                 mov     rcx, [rbp+var_548]
.text:0000000000403926                 mov     edx, [rbp+var_54C]
.text:000000000040392C                 lea     rsi, [rbp+var_540]
.text:0000000000403933                 mov     eax, [rbp+var_558]
.text:0000000000403939                 mov     edi, eax
.text:000000000040393B                 call    sub_402807
.text:0000000000403940                 xor     eax, 1
.text:0000000000403943                 test    al, al
.text:0000000000403945                 jnz     loc_403E81
.text:000000000040394B                 lea     rcx, [rbp+var_548]
.text:0000000000403952                 lea     rdx, [rbp+var_54C]
.text:0000000000403959                 lea     rsi, [rbp+var_540]
.text:0000000000403960                 mov     eax, [rbp+var_558]
.text:0000000000403966                 mov     r8, rcx
.text:0000000000403969                 mov     rcx, rdx
.text:000000000040396C                 mov     edx, 3E8h
.text:0000000000403971                 mov     edi, eax
.text:0000000000403973                 call    sub_402EAA
.text:0000000000403978                 xor     eax, 1
.text:000000000040397B                 test    al, al
.text:000000000040397D                 jnz     loc_403E84
.text:0000000000403983                 mov     rcx, [rbp+var_548]
.text:000000000040398A                 mov     edx, [rbp+var_54C]
.text:0000000000403990                 lea     rsi, [rbp+var_540]
.text:0000000000403997                 mov     eax, [rbp+var_554]
.text:000000000040399D                 mov     edi, eax
.text:000000000040399F                 call    sub_402807
.text:00000000004039A4                 xor     eax, 1
.text:00000000004039A7                 test    al, al
.text:00000000004039A9                 jnz     loc_403E87
.text:00000000004039AF                 lea     rax, unk_40B069
.text:00000000004039B6                 mov     [rbp+var_B8], rax
.text:00000000004039BD                 mov     rax, 0FB78568FA475B304h
.text:00000000004039C7                 mov     [rbp+var_C0], rax
.text:00000000004039CE                 mov     [rbp+var_C4], 7
.text:00000000004039D8                 call    getMem
.text:00000000004039DD                 mov     [rbp+var_D0], rax
.text:00000000004039E4                 mov     rax, [rbp+var_D0]
.text:00000000004039EB                 movzx   eax, byte ptr [rax]
.text:00000000004039EE                 movzx   eax, al
.text:00000000004039F1                 lea     ecx, [rax+3]
.text:00000000004039F4                 mov     edx, 66666667h
.text:00000000004039F9                 mov     eax, ecx
.text:00000000004039FB                 imul    edx
.text:00000000004039FD                 sar     edx, 2
.text:0000000000403A00                 mov     eax, ecx
.text:0000000000403A02                 sar     eax, 1Fh
.text:0000000000403A05                 sub     edx, eax
.text:0000000000403A07                 mov     eax, edx
.text:0000000000403A09                 shl     eax, 2
.text:0000000000403A0C                 add     eax, edx
.text:0000000000403A0E                 add     eax, eax
.text:0000000000403A10                 sub     ecx, eax
.text:0000000000403A12                 mov     edx, ecx
.text:0000000000403A14                 mov     rax, [rbp+var_D0]
.text:0000000000403A1B                 mov     [rax], dl
.text:0000000000403A1D                 sub     [rbp+var_C4], 1
.text:0000000000403A24
.text:0000000000403A24 loc_403A24:                             ; CODE XREF: sub_4034E7+5D5↓j
.text:0000000000403A24                 cmp     [rbp+var_C4], 0
.text:0000000000403A2B                 js      loc_403AC1
.text:0000000000403A31                 mov     rdx, [rbp+var_C0]
.text:0000000000403A38                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000403A42                 imul    rax, rdx
.text:0000000000403A46                 add     rax, 1
.text:0000000000403A4A                 mov     [rbp+var_C0], rax
.text:0000000000403A51                 mov     eax, [rbp+var_C4]
.text:0000000000403A57                 sar     eax, 2
.text:0000000000403A5A                 cdqe
.text:0000000000403A5C                 lea     rdx, ds:0[rax*4]
.text:0000000000403A64                 mov     rax, [rbp+var_B8]
.text:0000000000403A6B                 add     rax, rdx
.text:0000000000403A6E                 mov     edx, [rax]
.text:0000000000403A70                 mov     rax, [rbp+var_C0]
.text:0000000000403A77                 shr     rax, 20h
.text:0000000000403A7B                 mov     esi, eax
.text:0000000000403A7D                 mov     rax, [rbp+var_D0]
.text:0000000000403A84                 movzx   eax, byte ptr [rax]
.text:0000000000403A87                 movzx   eax, al
.text:0000000000403A8A                 mov     ecx, [rbp+var_C4]
.text:0000000000403A90                 mov     edi, ecx
.text:0000000000403A92                 sar     edi, 2
.text:0000000000403A95                 xor     esi, edx
.text:0000000000403A97                 mov     rcx, [rbp+var_D0]
.text:0000000000403A9E                 movsxd  rdi, edi
.text:0000000000403AA1                 movsxd  rdx, eax
.text:0000000000403AA4                 mov     rax, rdx
.text:0000000000403AA7                 shl     rax, 3
.text:0000000000403AAB                 add     rax, rdx
.text:0000000000403AAE                 add     rax, rdi
.text:0000000000403AB1                 mov     [rcx+rax*4+4], esi
.text:0000000000403AB5                 sub     [rbp+var_C4], 4
.text:0000000000403ABC                 jmp     loc_403A24
.text:0000000000403AC1 ; ---------------------------------------------------------------------------
.text:0000000000403AC1
.text:0000000000403AC1 loc_403AC1:                             ; CODE XREF: sub_4034E7+544↑j
.text:0000000000403AC1                 mov     rax, [rbp+var_D0]
.text:0000000000403AC8                 movzx   eax, byte ptr [rax]
.text:0000000000403ACB                 movzx   eax, al
.text:0000000000403ACE                 movsxd  rdx, eax
.text:0000000000403AD1                 mov     rax, rdx
.text:0000000000403AD4                 shl     rax, 3
.text:0000000000403AD8                 add     rax, rdx
.text:0000000000403ADB                 shl     rax, 2
.text:0000000000403ADF                 mov     rdx, [rbp+var_D0]
.text:0000000000403AE6                 add     rax, rdx
.text:0000000000403AE9                 lea     rdx, [rax+4]
.text:0000000000403AED                 lea     rax, [rbp+var_540]
.text:0000000000403AF4                 mov     [rbp+var_D8], rax
.text:0000000000403AFB                 mov     [rbp+var_E0], rdx
.text:0000000000403B02                 mov     rax, [rbp+var_D8]
.text:0000000000403B09                 mov     [rbp+var_E8], rax
.text:0000000000403B10                 mov     rax, [rbp+var_E0]
.text:0000000000403B17                 mov     [rbp+var_F0], rax
.text:0000000000403B1E
.text:0000000000403B1E loc_403B1E:                             ; CODE XREF: sub_4034E7+683↓j
.text:0000000000403B1E                 mov     rax, [rbp+var_E8]
.text:0000000000403B25                 lea     rdx, [rax+1]
.text:0000000000403B29                 mov     [rbp+var_E8], rdx
.text:0000000000403B30                 movzx   eax, byte ptr [rax]
.text:0000000000403B33                 mov     [rbp+var_F1], al
.text:0000000000403B39                 mov     rax, [rbp+var_F0]
.text:0000000000403B40                 lea     rdx, [rax+1]
.text:0000000000403B44                 mov     [rbp+var_F0], rdx
.text:0000000000403B4B                 movzx   eax, byte ptr [rax]
.text:0000000000403B4E                 mov     [rbp+var_F2], al
.text:0000000000403B54                 cmp     [rbp+var_F1], 0
.text:0000000000403B5B                 jz      short loc_403B6C
.text:0000000000403B5D                 movzx   eax, [rbp+var_F1]
.text:0000000000403B64                 cmp     al, [rbp+var_F2]
.text:0000000000403B6A                 jz      short loc_403B1E
.text:0000000000403B6C
.text:0000000000403B6C loc_403B6C:                             ; CODE XREF: sub_4034E7+674↑j
.text:0000000000403B6C                 movzx   eax, [rbp+var_F1]
.text:0000000000403B73                 cmp     al, [rbp+var_F2]
.text:0000000000403B79                 setz    al
.text:0000000000403B7C                 movzx   eax, al
.text:0000000000403B7F                 test    eax, eax
.text:0000000000403B81                 setnz   al
.text:0000000000403B84                 test    al, al
.text:0000000000403B86                 jz      loc_403E8A
.text:0000000000403B8C
.text:0000000000403B8C loc_403B8C:                             ; CODE XREF: sub_4034E7+989↓j
.text:0000000000403B8C                 lea     rax, unk_40B072
.text:0000000000403B93                 mov     [rbp+var_100], rax
.text:0000000000403B9A                 mov     rax, 77497E1E80CCDDBFh
.text:0000000000403BA4                 mov     [rbp+var_108], rax
.text:0000000000403BAB                 mov     [rbp+var_10C], 5
.text:0000000000403BB5                 call    getMem
.text:0000000000403BBA                 mov     [rbp+var_118], rax
.text:0000000000403BC1                 mov     rax, [rbp+var_118]
.text:0000000000403BC8                 movzx   eax, byte ptr [rax]
.text:0000000000403BCB                 movzx   eax, al
.text:0000000000403BCE                 lea     ecx, [rax+3]
.text:0000000000403BD1                 mov     edx, 66666667h
.text:0000000000403BD6                 mov     eax, ecx
.text:0000000000403BD8                 imul    edx
.text:0000000000403BDA                 sar     edx, 2
.text:0000000000403BDD                 mov     eax, ecx
.text:0000000000403BDF                 sar     eax, 1Fh
.text:0000000000403BE2                 sub     edx, eax
.text:0000000000403BE4                 mov     eax, edx
.text:0000000000403BE6                 shl     eax, 2
.text:0000000000403BE9                 add     eax, edx
.text:0000000000403BEB                 add     eax, eax
.text:0000000000403BED                 sub     ecx, eax
.text:0000000000403BEF                 mov     edx, ecx
.text:0000000000403BF1                 mov     rax, [rbp+var_118]
.text:0000000000403BF8                 mov     [rax], dl
.text:0000000000403BFA                 sub     [rbp+var_10C], 1
.text:0000000000403C01
.text:0000000000403C01 loc_403C01:                             ; CODE XREF: sub_4034E7+7B2↓j
.text:0000000000403C01                 cmp     [rbp+var_10C], 0
.text:0000000000403C08                 js      loc_403C9E
.text:0000000000403C0E                 mov     rdx, [rbp+var_108]
.text:0000000000403C15                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000403C1F                 imul    rax, rdx
.text:0000000000403C23                 add     rax, 1
.text:0000000000403C27                 mov     [rbp+var_108], rax
.text:0000000000403C2E                 mov     eax, [rbp+var_10C]
.text:0000000000403C34                 sar     eax, 2
.text:0000000000403C37                 cdqe
.text:0000000000403C39                 lea     rdx, ds:0[rax*4]
.text:0000000000403C41                 mov     rax, [rbp+var_100]
.text:0000000000403C48                 add     rax, rdx
.text:0000000000403C4B                 mov     edx, [rax]
.text:0000000000403C4D                 mov     rax, [rbp+var_108]
.text:0000000000403C54                 shr     rax, 20h
.text:0000000000403C58                 mov     esi, eax
.text:0000000000403C5A                 mov     rax, [rbp+var_118]
.text:0000000000403C61                 movzx   eax, byte ptr [rax]
.text:0000000000403C64                 movzx   eax, al
.text:0000000000403C67                 mov     ecx, [rbp+var_10C]
.text:0000000000403C6D                 mov     edi, ecx
.text:0000000000403C6F                 sar     edi, 2
.text:0000000000403C72                 xor     esi, edx
.text:0000000000403C74                 mov     rcx, [rbp+var_118]
.text:0000000000403C7B                 movsxd  rdi, edi
.text:0000000000403C7E                 movsxd  rdx, eax
.text:0000000000403C81                 mov     rax, rdx
.text:0000000000403C84                 shl     rax, 3
.text:0000000000403C88                 add     rax, rdx
.text:0000000000403C8B                 add     rax, rdi
.text:0000000000403C8E                 mov     [rcx+rax*4+4], esi
.text:0000000000403C92                 sub     [rbp+var_10C], 4
.text:0000000000403C99                 jmp     loc_403C01
.text:0000000000403C9E ; ---------------------------------------------------------------------------
.text:0000000000403C9E
.text:0000000000403C9E loc_403C9E:                             ; CODE XREF: sub_4034E7+721↑j
.text:0000000000403C9E                 mov     rax, [rbp+var_118]
.text:0000000000403CA5                 movzx   eax, byte ptr [rax]
.text:0000000000403CA8                 movzx   eax, al
.text:0000000000403CAB                 movsxd  rdx, eax
.text:0000000000403CAE                 mov     rax, rdx
.text:0000000000403CB1                 shl     rax, 3
.text:0000000000403CB5                 add     rax, rdx
.text:0000000000403CB8                 shl     rax, 2
.text:0000000000403CBC                 mov     rdx, [rbp+var_118]
.text:0000000000403CC3                 add     rax, rdx
.text:0000000000403CC6                 lea     rdi, [rax+4]
.text:0000000000403CCA                 lea     rdx, [rbp+var_540]
.text:0000000000403CD1                 mov     eax, [rbp+var_558]
.text:0000000000403CD7                 mov     r8d, 0
.text:0000000000403CDD                 mov     ecx, 3E8h
.text:0000000000403CE2                 mov     esi, eax
.text:0000000000403CE4                 mov     eax, 0
.text:0000000000403CE9                 call    sub_40A07C
.text:0000000000403CEE                 mov     [rbp+var_1C], eax
.text:0000000000403CF1                 cmp     [rbp+var_1C], 0
.text:0000000000403CF5                 jle     loc_403E67
.text:0000000000403CFB                 lea     rax, unk_40B07B
.text:0000000000403D02                 mov     [rbp+var_120], rax
.text:0000000000403D09                 mov     rax, 7D6D5EA4A4ADC8EBh
.text:0000000000403D13                 mov     [rbp+var_128], rax
.text:0000000000403D1A                 mov     [rbp+var_12C], 5
.text:0000000000403D24                 call    getMem
.text:0000000000403D29                 mov     [rbp+var_138], rax
.text:0000000000403D30                 mov     rax, [rbp+var_138]
.text:0000000000403D37                 movzx   eax, byte ptr [rax]
.text:0000000000403D3A                 movzx   eax, al
.text:0000000000403D3D                 lea     ecx, [rax+3]
.text:0000000000403D40                 mov     edx, 66666667h
.text:0000000000403D45                 mov     eax, ecx
.text:0000000000403D47                 imul    edx
.text:0000000000403D49                 sar     edx, 2
.text:0000000000403D4C                 mov     eax, ecx
.text:0000000000403D4E                 sar     eax, 1Fh
.text:0000000000403D51                 sub     edx, eax
.text:0000000000403D53                 mov     eax, edx
.text:0000000000403D55                 shl     eax, 2
.text:0000000000403D58                 add     eax, edx
.text:0000000000403D5A                 add     eax, eax
.text:0000000000403D5C                 sub     ecx, eax
.text:0000000000403D5E                 mov     edx, ecx
.text:0000000000403D60                 mov     rax, [rbp+var_138]
.text:0000000000403D67                 mov     [rax], dl
.text:0000000000403D69                 sub     [rbp+var_12C], 1
.text:0000000000403D70
.text:0000000000403D70 loc_403D70:                             ; CODE XREF: sub_4034E7+921↓j
.text:0000000000403D70                 cmp     [rbp+var_12C], 0
.text:0000000000403D77                 js      loc_403E0D
.text:0000000000403D7D                 mov     rdx, [rbp+var_128]
.text:0000000000403D84                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000403D8E                 imul    rax, rdx
.text:0000000000403D92                 add     rax, 1
.text:0000000000403D96                 mov     [rbp+var_128], rax
.text:0000000000403D9D                 mov     eax, [rbp+var_12C]
.text:0000000000403DA3                 sar     eax, 2
.text:0000000000403DA6                 cdqe
.text:0000000000403DA8                 lea     rdx, ds:0[rax*4]
.text:0000000000403DB0                 mov     rax, [rbp+var_120]
.text:0000000000403DB7                 add     rax, rdx
.text:0000000000403DBA                 mov     edx, [rax]
.text:0000000000403DBC                 mov     rax, [rbp+var_128]
.text:0000000000403DC3                 shr     rax, 20h
.text:0000000000403DC7                 mov     esi, eax
.text:0000000000403DC9                 mov     rax, [rbp+var_138]
.text:0000000000403DD0                 movzx   eax, byte ptr [rax]
.text:0000000000403DD3                 movzx   eax, al
.text:0000000000403DD6                 mov     ecx, [rbp+var_12C]
.text:0000000000403DDC                 mov     edi, ecx
.text:0000000000403DDE                 sar     edi, 2
.text:0000000000403DE1                 xor     esi, edx
.text:0000000000403DE3                 mov     rcx, [rbp+var_138]
.text:0000000000403DEA                 movsxd  rdi, edi
.text:0000000000403DED                 movsxd  rdx, eax
.text:0000000000403DF0                 mov     rax, rdx
.text:0000000000403DF3                 shl     rax, 3
.text:0000000000403DF7                 add     rax, rdx
.text:0000000000403DFA                 add     rax, rdi
.text:0000000000403DFD                 mov     [rcx+rax*4+4], esi
.text:0000000000403E01                 sub     [rbp+var_12C], 4
.text:0000000000403E08                 jmp     loc_403D70
.text:0000000000403E0D ; ---------------------------------------------------------------------------
.text:0000000000403E0D
.text:0000000000403E0D loc_403E0D:                             ; CODE XREF: sub_4034E7+890↑j
.text:0000000000403E0D                 mov     rax, [rbp+var_138]
.text:0000000000403E14                 movzx   eax, byte ptr [rax]
.text:0000000000403E17                 movzx   eax, al
.text:0000000000403E1A                 movsxd  rdx, eax
.text:0000000000403E1D                 mov     rax, rdx
.text:0000000000403E20                 shl     rax, 3
.text:0000000000403E24                 add     rax, rdx
.text:0000000000403E27                 shl     rax, 2
.text:0000000000403E2B                 mov     rdx, [rbp+var_138]
.text:0000000000403E32                 add     rax, rdx
.text:0000000000403E35                 lea     rdi, [rax+4]
.text:0000000000403E39                 mov     ecx, [rbp+var_1C]
.text:0000000000403E3C                 lea     rdx, [rbp+var_540]
.text:0000000000403E43                 mov     eax, [rbp+var_554]
.text:0000000000403E49                 mov     r8d, 0
.text:0000000000403E4F                 mov     esi, eax
.text:0000000000403E51                 mov     eax, 0
.text:0000000000403E56                 call    sub_40A07C
.text:0000000000403E5B                 cmp     [rbp+var_1C], eax
.text:0000000000403E5E                 jnz     short loc_403E67
.text:0000000000403E60                 mov     eax, 1
.text:0000000000403E65                 jmp     short loc_403E6C
.text:0000000000403E67 ; ---------------------------------------------------------------------------
.text:0000000000403E67
.text:0000000000403E67 loc_403E67:                             ; CODE XREF: sub_4034E7+80E↑j
.text:0000000000403E67                                         ; sub_4034E7+977↑j
.text:0000000000403E67                 mov     eax, 0
.text:0000000000403E6C
.text:0000000000403E6C loc_403E6C:                             ; CODE XREF: sub_4034E7+97E↑j
.text:0000000000403E6C                 test    al, al
.text:0000000000403E6E                 jz      short loc_403E8B
.text:0000000000403E70                 jmp     loc_403B8C
.text:0000000000403E75 ; ---------------------------------------------------------------------------
.text:0000000000403E75
.text:0000000000403E75 loc_403E75:                             ; CODE XREF: sub_4034E7+AC↑j
.text:0000000000403E75                 nop
.text:0000000000403E76                 jmp     short loc_403E8B
.text:0000000000403E78 ; ---------------------------------------------------------------------------
.text:0000000000403E78
.text:0000000000403E78 loc_403E78:                             ; CODE XREF: sub_4034E7+3CE↑j
.text:0000000000403E78                 nop
.text:0000000000403E79                 jmp     short loc_403E8B
.text:0000000000403E7B ; ---------------------------------------------------------------------------
.text:0000000000403E7B
.text:0000000000403E7B loc_403E7B:                             ; CODE XREF: sub_4034E7+3FA↑j
.text:0000000000403E7B                 nop
.text:0000000000403E7C                 jmp     short loc_403E8B
.text:0000000000403E7E ; ---------------------------------------------------------------------------
.text:0000000000403E7E
.text:0000000000403E7E loc_403E7E:                             ; CODE XREF: sub_4034E7+432↑j
.text:0000000000403E7E                 nop
.text:0000000000403E7F                 jmp     short loc_403E8B
.text:0000000000403E81 ; ---------------------------------------------------------------------------
.text:0000000000403E81
.text:0000000000403E81 loc_403E81:                             ; CODE XREF: sub_4034E7+45E↑j
.text:0000000000403E81                 nop
.text:0000000000403E82                 jmp     short loc_403E8B
.text:0000000000403E84 ; ---------------------------------------------------------------------------
.text:0000000000403E84
.text:0000000000403E84 loc_403E84:                             ; CODE XREF: sub_4034E7+496↑j
.text:0000000000403E84                 nop
.text:0000000000403E85                 jmp     short loc_403E8B
.text:0000000000403E87 ; ---------------------------------------------------------------------------
.text:0000000000403E87
.text:0000000000403E87 loc_403E87:                             ; CODE XREF: sub_4034E7+4C2↑j
.text:0000000000403E87                 nop
.text:0000000000403E88                 jmp     short loc_403E8B
.text:0000000000403E8A ; ---------------------------------------------------------------------------
.text:0000000000403E8A
.text:0000000000403E8A loc_403E8A:                             ; CODE XREF: sub_4034E7+69F↑j
.text:0000000000403E8A                 nop
.text:0000000000403E8B
.text:0000000000403E8B loc_403E8B:                             ; CODE XREF: sub_4034E7+987↑j
.text:0000000000403E8B                                         ; sub_4034E7+98F↑j ...
.text:0000000000403E8B                 mov     rax, fs:28h
.text:0000000000403E94                 mov     rbx, rax
.text:0000000000403E97                 mov     rax, rbx
.text:0000000000403E9A                 cmp     [rbp+var_18], rax
.text:0000000000403E9E                 setnz   al
.text:0000000000403EA1                 test    al, al
.text:0000000000403EA3                 jz      loc_403FF4
.text:0000000000403EA9                 lea     rax, unk_40B084
.text:0000000000403EB0                 mov     [rbp+var_140], rax
.text:0000000000403EB7                 mov     rax, 5ACFFEBCD527B0AAh
.text:0000000000403EC1                 mov     [rbp+var_148], rax
.text:0000000000403EC8                 mov     [rbp+var_14C], 11h
.text:0000000000403ED2                 call    getMem
.text:0000000000403ED7                 mov     [rbp+var_158], rax
.text:0000000000403EDE                 mov     rax, [rbp+var_158]
.text:0000000000403EE5                 movzx   eax, byte ptr [rax]
.text:0000000000403EE8                 movzx   eax, al
.text:0000000000403EEB                 lea     ecx, [rax+3]
.text:0000000000403EEE                 mov     edx, 66666667h
.text:0000000000403EF3                 mov     eax, ecx
.text:0000000000403EF5                 imul    edx
.text:0000000000403EF7                 sar     edx, 2
.text:0000000000403EFA                 mov     eax, ecx
.text:0000000000403EFC                 sar     eax, 1Fh
.text:0000000000403EFF                 sub     edx, eax
.text:0000000000403F01                 mov     eax, edx
.text:0000000000403F03                 shl     eax, 2
.text:0000000000403F06                 add     eax, edx
.text:0000000000403F08                 add     eax, eax
.text:0000000000403F0A                 sub     ecx, eax
.text:0000000000403F0C                 mov     edx, ecx
.text:0000000000403F0E                 mov     rax, [rbp+var_158]
.text:0000000000403F15                 mov     [rax], dl
.text:0000000000403F17                 sub     [rbp+var_14C], 1
.text:0000000000403F1E
.text:0000000000403F1E loc_403F1E:                             ; CODE XREF: sub_4034E7+ACF↓j
.text:0000000000403F1E                 cmp     [rbp+var_14C], 0
.text:0000000000403F25                 js      loc_403FBB
.text:0000000000403F2B                 mov     rdx, [rbp+var_148]
.text:0000000000403F32                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000403F3C                 imul    rax, rdx
.text:0000000000403F40                 add     rax, 1
.text:0000000000403F44                 mov     [rbp+var_148], rax
.text:0000000000403F4B                 mov     eax, [rbp+var_14C]
.text:0000000000403F51                 sar     eax, 2
.text:0000000000403F54                 cdqe
.text:0000000000403F56                 lea     rdx, ds:0[rax*4]
.text:0000000000403F5E                 mov     rax, [rbp+var_140]
.text:0000000000403F65                 add     rax, rdx
.text:0000000000403F68                 mov     edx, [rax]
.text:0000000000403F6A                 mov     rax, [rbp+var_148]
.text:0000000000403F71                 shr     rax, 20h
.text:0000000000403F75                 mov     esi, eax
.text:0000000000403F77                 mov     rax, [rbp+var_158]
.text:0000000000403F7E                 movzx   eax, byte ptr [rax]
.text:0000000000403F81                 movzx   eax, al
.text:0000000000403F84                 mov     ecx, [rbp+var_14C]
.text:0000000000403F8A                 mov     edi, ecx
.text:0000000000403F8C                 sar     edi, 2
.text:0000000000403F8F                 xor     esi, edx
.text:0000000000403F91                 mov     rcx, [rbp+var_158]
.text:0000000000403F98                 movsxd  rdi, edi
.text:0000000000403F9B                 movsxd  rdx, eax
.text:0000000000403F9E                 mov     rax, rdx
.text:0000000000403FA1                 shl     rax, 3
.text:0000000000403FA5                 add     rax, rdx
.text:0000000000403FA8                 add     rax, rdi
.text:0000000000403FAB                 mov     [rcx+rax*4+4], esi
.text:0000000000403FAF                 sub     [rbp+var_14C], 4
.text:0000000000403FB6                 jmp     loc_403F1E
.text:0000000000403FBB ; ---------------------------------------------------------------------------
.text:0000000000403FBB
.text:0000000000403FBB loc_403FBB:                             ; CODE XREF: sub_4034E7+A3E↑j
.text:0000000000403FBB                 mov     rax, [rbp+var_158]
.text:0000000000403FC2                 movzx   eax, byte ptr [rax]
.text:0000000000403FC5                 movzx   eax, al
.text:0000000000403FC8                 movsxd  rdx, eax
.text:0000000000403FCB                 mov     rax, rdx
.text:0000000000403FCE                 shl     rax, 3
.text:0000000000403FD2                 add     rax, rdx
.text:0000000000403FD5                 shl     rax, 2
.text:0000000000403FD9                 mov     rdx, [rbp+var_158]
.text:0000000000403FE0                 add     rax, rdx
.text:0000000000403FE3                 add     rax, 4
.text:0000000000403FE7                 mov     rdi, rax
.text:0000000000403FEA                 mov     eax, 0
.text:0000000000403FEF                 call    sub_40A07C
.text:0000000000403FF4
.text:0000000000403FF4 loc_403FF4:                             ; CODE XREF: sub_4034E7+9BC↑j
.text:0000000000403FF4                 nop
.text:0000000000403FF5                 add     rsp, 558h
.text:0000000000403FFC                 pop     rbx
.text:0000000000403FFD                 pop     rbp
.text:0000000000403FFE                 retn
.text:0000000000403FFE ; } // starts at 4034E7
.text:0000000000403FFE sub_4034E7      endp
.text:0000000000403FFE
.text:0000000000403FFF
.text:0000000000403FFF ; =============== S U B R O U T I N E =======================================
.text:0000000000403FFF
.text:0000000000403FFF ; Attributes: bp-based frame
.text:0000000000403FFF
.text:0000000000403FFF sub_403FFF      proc near               ; DATA XREF: sub_404398+2DD↓o
.text:0000000000403FFF
.text:0000000000403FFF var_88          = qword ptr -88h
.text:0000000000403FFF var_78          = qword ptr -78h
.text:0000000000403FFF var_6C          = dword ptr -6Ch
.text:0000000000403FFF var_68          = qword ptr -68h
.text:0000000000403FFF var_60          = qword ptr -60h
.text:0000000000403FFF var_58          = qword ptr -58h
.text:0000000000403FFF var_4C          = dword ptr -4Ch
.text:0000000000403FFF var_48          = qword ptr -48h
.text:0000000000403FFF var_40          = qword ptr -40h
.text:0000000000403FFF var_38          = qword ptr -38h
.text:0000000000403FFF var_2C          = dword ptr -2Ch
.text:0000000000403FFF var_28          = qword ptr -28h
.text:0000000000403FFF var_20          = qword ptr -20h
.text:0000000000403FFF var_14          = dword ptr -14h
.text:0000000000403FFF var_10          = dword ptr -10h
.text:0000000000403FFF var_C           = dword ptr -0Ch
.text:0000000000403FFF var_8           = qword ptr -8
.text:0000000000403FFF
.text:0000000000403FFF ; __unwind {
.text:0000000000403FFF                 push    rbp
.text:0000000000404000                 mov     rbp, rsp
.text:0000000000404003                 sub     rsp, 90h
.text:000000000040400A                 mov     [rbp+var_88], rdi
.text:0000000000404011                 nop
.text:0000000000404012                 nop
.text:0000000000404013                 nop
.text:0000000000404014                 nop
.text:0000000000404015                 nop
.text:0000000000404016                 nop
.text:0000000000404017                 nop
.text:0000000000404018                 nop
.text:0000000000404019                 nop
.text:000000000040401A                 nop
.text:000000000040401B                 nop
.text:000000000040401C                 nop
.text:000000000040401D                 nop
.text:000000000040401E                 nop
.text:000000000040401F                 nop
.text:0000000000404020                 nop
.text:0000000000404021                 nop
.text:0000000000404022                 nop
.text:0000000000404023                 nop
.text:0000000000404024                 nop
.text:0000000000404025                 nop
.text:0000000000404026                 mov     rax, [rbp+var_88]
.text:000000000040402D                 mov     [rbp+var_8], rax
.text:0000000000404031                 mov     rax, [rbp+var_8]
.text:0000000000404035                 mov     eax, [rax]
.text:0000000000404037                 mov     [rbp+var_C], eax
.text:000000000040403A                 mov     rax, [rbp+var_8]
.text:000000000040403E                 mov     eax, [rax+4]
.text:0000000000404041                 mov     [rbp+var_10], eax
.text:0000000000404044                 lea     rax, unk_40B099
.text:000000000040404B                 mov     [rbp+var_20], rax
.text:000000000040404F                 mov     rax, 0B473251E4CF57503h
.text:0000000000404059                 mov     [rbp+var_28], rax
.text:000000000040405D                 mov     [rbp+var_2C], 6
.text:0000000000404064                 call    getMem
.text:0000000000404069                 mov     [rbp+var_38], rax
.text:000000000040406D                 mov     rax, [rbp+var_38]
.text:0000000000404071                 movzx   eax, byte ptr [rax]
.text:0000000000404074                 movzx   eax, al
.text:0000000000404077                 lea     ecx, [rax+3]
.text:000000000040407A                 mov     edx, 66666667h
.text:000000000040407F                 mov     eax, ecx
.text:0000000000404081                 imul    edx
.text:0000000000404083                 sar     edx, 2
.text:0000000000404086                 mov     eax, ecx
.text:0000000000404088                 sar     eax, 1Fh
.text:000000000040408B                 sub     edx, eax
.text:000000000040408D                 mov     eax, edx
.text:000000000040408F                 shl     eax, 2
.text:0000000000404092                 add     eax, edx
.text:0000000000404094                 add     eax, eax
.text:0000000000404096                 sub     ecx, eax
.text:0000000000404098                 mov     edx, ecx
.text:000000000040409A                 mov     rax, [rbp+var_38]
.text:000000000040409E                 mov     [rax], dl
.text:00000000004040A0                 sub     [rbp+var_2C], 1
.text:00000000004040A4
.text:00000000004040A4 loc_4040A4:                             ; CODE XREF: sub_403FFF+11B↓j
.text:00000000004040A4                 cmp     [rbp+var_2C], 0
.text:00000000004040A8                 js      short loc_40411C
.text:00000000004040AA                 mov     rdx, [rbp+var_28]
.text:00000000004040AE                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004040B8                 imul    rax, rdx
.text:00000000004040BC                 add     rax, 1
.text:00000000004040C0                 mov     [rbp+var_28], rax
.text:00000000004040C4                 mov     eax, [rbp+var_2C]
.text:00000000004040C7                 sar     eax, 2
.text:00000000004040CA                 cdqe
.text:00000000004040CC                 lea     rdx, ds:0[rax*4]
.text:00000000004040D4                 mov     rax, [rbp+var_20]
.text:00000000004040D8                 add     rax, rdx
.text:00000000004040DB                 mov     edx, [rax]
.text:00000000004040DD                 mov     rax, [rbp+var_28]
.text:00000000004040E1                 shr     rax, 20h
.text:00000000004040E5                 mov     esi, eax
.text:00000000004040E7                 mov     rax, [rbp+var_38]
.text:00000000004040EB                 movzx   eax, byte ptr [rax]
.text:00000000004040EE                 movzx   eax, al
.text:00000000004040F1                 mov     ecx, [rbp+var_2C]
.text:00000000004040F4                 mov     edi, ecx
.text:00000000004040F6                 sar     edi, 2
.text:00000000004040F9                 xor     esi, edx
.text:00000000004040FB                 mov     rcx, [rbp+var_38]
.text:00000000004040FF                 movsxd  rdi, edi
.text:0000000000404102                 movsxd  rdx, eax
.text:0000000000404105                 mov     rax, rdx
.text:0000000000404108                 shl     rax, 3
.text:000000000040410C                 add     rax, rdx
.text:000000000040410F                 add     rax, rdi
.text:0000000000404112                 mov     [rcx+rax*4+4], esi
.text:0000000000404116                 sub     [rbp+var_2C], 4
.text:000000000040411A                 jmp     short loc_4040A4
.text:000000000040411C ; ---------------------------------------------------------------------------
.text:000000000040411C
.text:000000000040411C loc_40411C:                             ; CODE XREF: sub_403FFF+A9↑j
.text:000000000040411C                 mov     rax, [rbp+var_38]
.text:0000000000404120                 movzx   eax, byte ptr [rax]
.text:0000000000404123                 movzx   eax, al
.text:0000000000404126                 movsxd  rdx, eax
.text:0000000000404129                 mov     rax, rdx
.text:000000000040412C                 shl     rax, 3
.text:0000000000404130                 add     rax, rdx
.text:0000000000404133                 shl     rax, 2
.text:0000000000404137                 mov     rdx, [rbp+var_38]
.text:000000000040413B                 add     rax, rdx
.text:000000000040413E                 lea     rdx, [rax+4]
.text:0000000000404142                 mov     eax, [rbp+var_C]
.text:0000000000404145                 mov     esi, eax
.text:0000000000404147                 mov     rdi, rdx
.text:000000000040414A                 mov     eax, 0
.text:000000000040414F                 call    sub_40A07C
.text:0000000000404154                 call    sub_401C2B
.text:0000000000404159                 mov     [rbp+var_14], eax
.text:000000000040415C                 cmp     [rbp+var_14], 0FFFFFFFFh
.text:0000000000404160                 jz      loc_404285
.text:0000000000404166                 mov     edx, [rbp+var_10]
.text:0000000000404169                 mov     eax, [rbp+var_14]
.text:000000000040416C                 mov     esi, edx
.text:000000000040416E                 mov     edi, eax
.text:0000000000404170                 call    sub_4034E7
.text:0000000000404175                 lea     rax, unk_40B0A2
.text:000000000040417C                 mov     [rbp+var_40], rax
.text:0000000000404180                 mov     rax, 5F686167BC6ACBC9h
.text:000000000040418A                 mov     [rbp+var_48], rax
.text:000000000040418E                 mov     [rbp+var_4C], 6
.text:0000000000404195                 call    getMem
.text:000000000040419A                 mov     [rbp+var_58], rax
.text:000000000040419E                 mov     rax, [rbp+var_58]
.text:00000000004041A2                 movzx   eax, byte ptr [rax]
.text:00000000004041A5                 movzx   eax, al
.text:00000000004041A8                 lea     ecx, [rax+3]
.text:00000000004041AB                 mov     edx, 66666667h
.text:00000000004041B0                 mov     eax, ecx
.text:00000000004041B2                 imul    edx
.text:00000000004041B4                 sar     edx, 2
.text:00000000004041B7                 mov     eax, ecx
.text:00000000004041B9                 sar     eax, 1Fh
.text:00000000004041BC                 sub     edx, eax
.text:00000000004041BE                 mov     eax, edx
.text:00000000004041C0                 shl     eax, 2
.text:00000000004041C3                 add     eax, edx
.text:00000000004041C5                 add     eax, eax
.text:00000000004041C7                 sub     ecx, eax
.text:00000000004041C9                 mov     edx, ecx
.text:00000000004041CB                 mov     rax, [rbp+var_58]
.text:00000000004041CF                 mov     [rax], dl
.text:00000000004041D1                 sub     [rbp+var_4C], 1
.text:00000000004041D5
.text:00000000004041D5 loc_4041D5:                             ; CODE XREF: sub_403FFF+24C↓j
.text:00000000004041D5                 cmp     [rbp+var_4C], 0
.text:00000000004041D9                 js      short loc_40424D
.text:00000000004041DB                 mov     rdx, [rbp+var_48]
.text:00000000004041DF                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004041E9                 imul    rax, rdx
.text:00000000004041ED                 add     rax, 1
.text:00000000004041F1                 mov     [rbp+var_48], rax
.text:00000000004041F5                 mov     eax, [rbp+var_4C]
.text:00000000004041F8                 sar     eax, 2
.text:00000000004041FB                 cdqe
.text:00000000004041FD                 lea     rdx, ds:0[rax*4]
.text:0000000000404205                 mov     rax, [rbp+var_40]
.text:0000000000404209                 add     rax, rdx
.text:000000000040420C                 mov     edx, [rax]
.text:000000000040420E                 mov     rax, [rbp+var_48]
.text:0000000000404212                 shr     rax, 20h
.text:0000000000404216                 mov     esi, eax
.text:0000000000404218                 mov     rax, [rbp+var_58]
.text:000000000040421C                 movzx   eax, byte ptr [rax]
.text:000000000040421F                 movzx   eax, al
.text:0000000000404222                 mov     ecx, [rbp+var_4C]
.text:0000000000404225                 mov     edi, ecx
.text:0000000000404227                 sar     edi, 2
.text:000000000040422A                 xor     esi, edx
.text:000000000040422C                 mov     rcx, [rbp+var_58]
.text:0000000000404230                 movsxd  rdi, edi
.text:0000000000404233                 movsxd  rdx, eax
.text:0000000000404236                 mov     rax, rdx
.text:0000000000404239                 shl     rax, 3
.text:000000000040423D                 add     rax, rdx
.text:0000000000404240                 add     rax, rdi
.text:0000000000404243                 mov     [rcx+rax*4+4], esi
.text:0000000000404247                 sub     [rbp+var_4C], 4
.text:000000000040424B                 jmp     short loc_4041D5
.text:000000000040424D ; ---------------------------------------------------------------------------
.text:000000000040424D
.text:000000000040424D loc_40424D:                             ; CODE XREF: sub_403FFF+1DA↑j
.text:000000000040424D                 mov     rax, [rbp+var_58]
.text:0000000000404251                 movzx   eax, byte ptr [rax]
.text:0000000000404254                 movzx   eax, al
.text:0000000000404257                 movsxd  rdx, eax
.text:000000000040425A                 mov     rax, rdx
.text:000000000040425D                 shl     rax, 3
.text:0000000000404261                 add     rax, rdx
.text:0000000000404264                 shl     rax, 2
.text:0000000000404268                 mov     rdx, [rbp+var_58]
.text:000000000040426C                 add     rax, rdx
.text:000000000040426F                 lea     rdx, [rax+4]
.text:0000000000404273                 mov     eax, [rbp+var_14]
.text:0000000000404276                 mov     esi, eax
.text:0000000000404278                 mov     rdi, rdx
.text:000000000040427B                 mov     eax, 0
.text:0000000000404280                 call    sub_40A07C
.text:0000000000404285
.text:0000000000404285 loc_404285:                             ; CODE XREF: sub_403FFF+161↑j
.text:0000000000404285                 lea     rax, unk_40B0AB
.text:000000000040428C                 mov     [rbp+var_60], rax
.text:0000000000404290                 mov     rax, 63A3E08FACA381C2h
.text:000000000040429A                 mov     [rbp+var_68], rax
.text:000000000040429E                 mov     [rbp+var_6C], 6
.text:00000000004042A5                 call    getMem
.text:00000000004042AA                 mov     [rbp+var_78], rax
.text:00000000004042AE                 mov     rax, [rbp+var_78]
.text:00000000004042B2                 movzx   eax, byte ptr [rax]
.text:00000000004042B5                 movzx   eax, al
.text:00000000004042B8                 lea     ecx, [rax+3]
.text:00000000004042BB                 mov     edx, 66666667h
.text:00000000004042C0                 mov     eax, ecx
.text:00000000004042C2                 imul    edx
.text:00000000004042C4                 sar     edx, 2
.text:00000000004042C7                 mov     eax, ecx
.text:00000000004042C9                 sar     eax, 1Fh
.text:00000000004042CC                 sub     edx, eax
.text:00000000004042CE                 mov     eax, edx
.text:00000000004042D0                 shl     eax, 2
.text:00000000004042D3                 add     eax, edx
.text:00000000004042D5                 add     eax, eax
.text:00000000004042D7                 sub     ecx, eax
.text:00000000004042D9                 mov     edx, ecx
.text:00000000004042DB                 mov     rax, [rbp+var_78]
.text:00000000004042DF                 mov     [rax], dl
.text:00000000004042E1                 sub     [rbp+var_6C], 1
.text:00000000004042E5
.text:00000000004042E5 loc_4042E5:                             ; CODE XREF: sub_403FFF+35C↓j
.text:00000000004042E5                 cmp     [rbp+var_6C], 0
.text:00000000004042E9                 js      short loc_40435D
.text:00000000004042EB                 mov     rdx, [rbp+var_68]
.text:00000000004042EF                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004042F9                 imul    rax, rdx
.text:00000000004042FD                 add     rax, 1
.text:0000000000404301                 mov     [rbp+var_68], rax
.text:0000000000404305                 mov     eax, [rbp+var_6C]
.text:0000000000404308                 sar     eax, 2
.text:000000000040430B                 cdqe
.text:000000000040430D                 lea     rdx, ds:0[rax*4]
.text:0000000000404315                 mov     rax, [rbp+var_60]
.text:0000000000404319                 add     rax, rdx
.text:000000000040431C                 mov     edx, [rax]
.text:000000000040431E                 mov     rax, [rbp+var_68]
.text:0000000000404322                 shr     rax, 20h
.text:0000000000404326                 mov     esi, eax
.text:0000000000404328                 mov     rax, [rbp+var_78]
.text:000000000040432C                 movzx   eax, byte ptr [rax]
.text:000000000040432F                 movzx   eax, al
.text:0000000000404332                 mov     ecx, [rbp+var_6C]
.text:0000000000404335                 mov     edi, ecx
.text:0000000000404337                 sar     edi, 2
.text:000000000040433A                 xor     esi, edx
.text:000000000040433C                 mov     rcx, [rbp+var_78]
.text:0000000000404340                 movsxd  rdi, edi
.text:0000000000404343                 movsxd  rdx, eax
.text:0000000000404346                 mov     rax, rdx
.text:0000000000404349                 shl     rax, 3
.text:000000000040434D                 add     rax, rdx
.text:0000000000404350                 add     rax, rdi
.text:0000000000404353                 mov     [rcx+rax*4+4], esi
.text:0000000000404357                 sub     [rbp+var_6C], 4
.text:000000000040435B                 jmp     short loc_4042E5
.text:000000000040435D ; ---------------------------------------------------------------------------
.text:000000000040435D
.text:000000000040435D loc_40435D:                             ; CODE XREF: sub_403FFF+2EA↑j
.text:000000000040435D                 mov     rax, [rbp+var_78]
.text:0000000000404361                 movzx   eax, byte ptr [rax]
.text:0000000000404364                 movzx   eax, al
.text:0000000000404367                 movsxd  rdx, eax
.text:000000000040436A                 mov     rax, rdx
.text:000000000040436D                 shl     rax, 3
.text:0000000000404371                 add     rax, rdx
.text:0000000000404374                 shl     rax, 2
.text:0000000000404378                 mov     rdx, [rbp+var_78]
.text:000000000040437C                 add     rax, rdx
.text:000000000040437F                 lea     rdx, [rax+4]
.text:0000000000404383                 mov     eax, [rbp+var_10]
.text:0000000000404386                 mov     esi, eax
.text:0000000000404388                 mov     rdi, rdx
.text:000000000040438B                 mov     eax, 0
.text:0000000000404390                 call    sub_40A07C
.text:0000000000404395                 nop
.text:0000000000404396                 leave
.text:0000000000404397                 retn
.text:0000000000404397 ; } // starts at 403FFF
.text:0000000000404397 sub_403FFF      endp
.text:0000000000404397
.text:0000000000404398
.text:0000000000404398 ; =============== S U B R O U T I N E =======================================
.text:0000000000404398
.text:0000000000404398 ; Attributes: bp-based frame
.text:0000000000404398
.text:0000000000404398 sub_404398      proc near               ; CODE XREF: sub_405008+36D2↓p
.text:0000000000404398
.text:0000000000404398 var_164         = dword ptr -164h
.text:0000000000404398 var_15C         = dword ptr -15Ch
.text:0000000000404398 var_158         = dword ptr -158h
.text:0000000000404398 var_154         = dword ptr -154h
.text:0000000000404398 var_150         = qword ptr -150h
.text:0000000000404398 var_148         = qword ptr -148h
.text:0000000000404398 var_138         = qword ptr -138h
.text:0000000000404398 var_12C         = dword ptr -12Ch
.text:0000000000404398 var_128         = qword ptr -128h
.text:0000000000404398 var_120         = qword ptr -120h
.text:0000000000404398 var_118         = qword ptr -118h
.text:0000000000404398 var_10C         = dword ptr -10Ch
.text:0000000000404398 var_108         = qword ptr -108h
.text:0000000000404398 var_100         = qword ptr -100h
.text:0000000000404398 var_F8          = qword ptr -0F8h
.text:0000000000404398 var_EC          = dword ptr -0ECh
.text:0000000000404398 var_E8          = qword ptr -0E8h
.text:0000000000404398 var_E0          = qword ptr -0E0h
.text:0000000000404398 var_D8          = qword ptr -0D8h
.text:0000000000404398 var_CC          = dword ptr -0CCh
.text:0000000000404398 var_C8          = qword ptr -0C8h
.text:0000000000404398 var_C0          = qword ptr -0C0h
.text:0000000000404398 var_B8          = qword ptr -0B8h
.text:0000000000404398 var_AC          = dword ptr -0ACh
.text:0000000000404398 var_A8          = qword ptr -0A8h
.text:0000000000404398 var_A0          = qword ptr -0A0h
.text:0000000000404398 var_98          = qword ptr -98h
.text:0000000000404398 var_8C          = dword ptr -8Ch
.text:0000000000404398 var_88          = qword ptr -88h
.text:0000000000404398 var_80          = qword ptr -80h
.text:0000000000404398 var_78          = qword ptr -78h
.text:0000000000404398 var_6C          = dword ptr -6Ch
.text:0000000000404398 var_68          = qword ptr -68h
.text:0000000000404398 var_60          = qword ptr -60h
.text:0000000000404398 var_58          = qword ptr -58h
.text:0000000000404398 var_4C          = dword ptr -4Ch
.text:0000000000404398 var_48          = qword ptr -48h
.text:0000000000404398 var_40          = qword ptr -40h
.text:0000000000404398 var_38          = qword ptr -38h
.text:0000000000404398 var_2C          = dword ptr -2Ch
.text:0000000000404398 var_28          = qword ptr -28h
.text:0000000000404398 var_20          = qword ptr -20h
.text:0000000000404398 var_18          = dword ptr -18h
.text:0000000000404398 var_14          = dword ptr -14h
.text:0000000000404398
.text:0000000000404398 ; __unwind {
.text:0000000000404398                 push    rbp
.text:0000000000404399                 mov     rbp, rsp
.text:000000000040439C                 push    rbx
.text:000000000040439D                 sub     rsp, 168h
.text:00000000004043A4                 mov     [rbp+var_164], edi
.text:00000000004043AA                 nop
.text:00000000004043AB                 nop
.text:00000000004043AC                 nop
.text:00000000004043AD                 nop
.text:00000000004043AE                 nop
.text:00000000004043AF                 nop
.text:00000000004043B0                 nop
.text:00000000004043B1                 nop
.text:00000000004043B2                 nop
.text:00000000004043B3                 nop
.text:00000000004043B4                 nop
.text:00000000004043B5                 nop
.text:00000000004043B6                 nop
.text:00000000004043B7                 nop
.text:00000000004043B8                 nop
.text:00000000004043B9                 nop
.text:00000000004043BA                 nop
.text:00000000004043BB                 nop
.text:00000000004043BC                 nop
.text:00000000004043BD                 nop
.text:00000000004043BE                 nop
.text:00000000004043BF                 mov     [rbp+var_150], 0
.text:00000000004043CA                 mov     [rbp+var_148], 0
.text:00000000004043D5                 mov     [rbp+var_154], 10h
.text:00000000004043DF
.text:00000000004043DF loc_4043DF:                             ; CODE XREF: sub_404398+C60↓j
.text:00000000004043DF                 call    sub_40A608
.text:00000000004043E4                 mov     cs:dword_60C398, eax
.text:00000000004043EA                 mov     eax, cs:dword_60C398
.text:00000000004043F0                 cmp     eax, 0FFFFFFFFh
.text:00000000004043F3                 jnz     loc_404512
.text:00000000004043F9                 lea     rax, unk_40B0B4
.text:0000000000404400                 mov     [rbp+var_20], rax
.text:0000000000404404                 mov     rax, 110B9DA84121D06Eh
.text:000000000040440E                 mov     [rbp+var_28], rax
.text:0000000000404412                 mov     [rbp+var_2C], 6
.text:0000000000404419                 call    getMem
.text:000000000040441E                 mov     [rbp+var_38], rax
.text:0000000000404422                 mov     rax, [rbp+var_38]
.text:0000000000404426                 movzx   eax, byte ptr [rax]
.text:0000000000404429                 movzx   eax, al
.text:000000000040442C                 lea     ecx, [rax+3]
.text:000000000040442F                 mov     edx, 66666667h
.text:0000000000404434                 mov     eax, ecx
.text:0000000000404436                 imul    edx
.text:0000000000404438                 sar     edx, 2
.text:000000000040443B                 mov     eax, ecx
.text:000000000040443D                 sar     eax, 1Fh
.text:0000000000404440                 sub     edx, eax
.text:0000000000404442                 mov     eax, edx
.text:0000000000404444                 shl     eax, 2
.text:0000000000404447                 add     eax, edx
.text:0000000000404449                 add     eax, eax
.text:000000000040444B                 sub     ecx, eax
.text:000000000040444D                 mov     edx, ecx
.text:000000000040444F                 mov     rax, [rbp+var_38]
.text:0000000000404453                 mov     [rax], dl
.text:0000000000404455                 sub     [rbp+var_2C], 1
.text:0000000000404459
.text:0000000000404459 loc_404459:                             ; CODE XREF: sub_404398+137↓j
.text:0000000000404459                 cmp     [rbp+var_2C], 0
.text:000000000040445D                 js      short loc_4044D1
.text:000000000040445F                 mov     rdx, [rbp+var_28]
.text:0000000000404463                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040446D                 imul    rax, rdx
.text:0000000000404471                 add     rax, 1
.text:0000000000404475                 mov     [rbp+var_28], rax
.text:0000000000404479                 mov     eax, [rbp+var_2C]
.text:000000000040447C                 sar     eax, 2
.text:000000000040447F                 cdqe
.text:0000000000404481                 lea     rdx, ds:0[rax*4]
.text:0000000000404489                 mov     rax, [rbp+var_20]
.text:000000000040448D                 add     rax, rdx
.text:0000000000404490                 mov     edx, [rax]
.text:0000000000404492                 mov     rax, [rbp+var_28]
.text:0000000000404496                 shr     rax, 20h
.text:000000000040449A                 mov     esi, eax
.text:000000000040449C                 mov     rax, [rbp+var_38]
.text:00000000004044A0                 movzx   eax, byte ptr [rax]
.text:00000000004044A3                 movzx   eax, al
.text:00000000004044A6                 mov     ecx, [rbp+var_2C]
.text:00000000004044A9                 mov     edi, ecx
.text:00000000004044AB                 sar     edi, 2
.text:00000000004044AE                 xor     esi, edx
.text:00000000004044B0                 mov     rcx, [rbp+var_38]
.text:00000000004044B4                 movsxd  rdi, edi
.text:00000000004044B7                 movsxd  rdx, eax
.text:00000000004044BA                 mov     rax, rdx
.text:00000000004044BD                 shl     rax, 3
.text:00000000004044C1                 add     rax, rdx
.text:00000000004044C4                 add     rax, rdi
.text:00000000004044C7                 mov     [rcx+rax*4+4], esi
.text:00000000004044CB                 sub     [rbp+var_2C], 4
.text:00000000004044CF                 jmp     short loc_404459
.text:00000000004044D1 ; ---------------------------------------------------------------------------
.text:00000000004044D1
.text:00000000004044D1 loc_4044D1:                             ; CODE XREF: sub_404398+C5↑j
.text:00000000004044D1                 mov     rax, [rbp+var_38]
.text:00000000004044D5                 movzx   eax, byte ptr [rax]
.text:00000000004044D8                 movzx   eax, al
.text:00000000004044DB                 movsxd  rdx, eax
.text:00000000004044DE                 mov     rax, rdx
.text:00000000004044E1                 shl     rax, 3
.text:00000000004044E5                 add     rax, rdx
.text:00000000004044E8                 shl     rax, 2
.text:00000000004044EC                 mov     rdx, [rbp+var_38]
.text:00000000004044F0                 add     rax, rdx
.text:00000000004044F3                 lea     rdx, [rax+4]
.text:00000000004044F7                 mov     eax, [rbp+var_164]
.text:00000000004044FD                 mov     esi, eax
.text:00000000004044FF                 mov     rdi, rdx
.text:0000000000404502                 mov     eax, 0
.text:0000000000404507                 call    sub_40A07C
.text:000000000040450C                 nop
.text:000000000040450D                 jmp     loc_404FFD
.text:0000000000404512 ; ---------------------------------------------------------------------------
.text:0000000000404512
.text:0000000000404512 loc_404512:                             ; CODE XREF: sub_404398+5B↑j
.text:0000000000404512                 mov     eax, cs:dword_60C398
.text:0000000000404518                 test    eax, eax
.text:000000000040451A                 jnz     loc_404BBF
.text:0000000000404520
.text:0000000000404520 loc_404520:                             ; CODE XREF: sub_404398+574↓j
.text:0000000000404520                 lea     rax, unk_40B0BD
.text:0000000000404527                 mov     [rbp+var_40], rax
.text:000000000040452B                 mov     rax, 996D3467D202DA15h
.text:0000000000404535                 mov     [rbp+var_48], rax
.text:0000000000404539                 mov     [rbp+var_4C], 7
.text:0000000000404540                 call    getMem
.text:0000000000404545                 mov     [rbp+var_58], rax
.text:0000000000404549                 mov     rax, [rbp+var_58]
.text:000000000040454D                 movzx   eax, byte ptr [rax]
.text:0000000000404550                 movzx   eax, al
.text:0000000000404553                 lea     ecx, [rax+3]
.text:0000000000404556                 mov     edx, 66666667h
.text:000000000040455B                 mov     eax, ecx
.text:000000000040455D                 imul    edx
.text:000000000040455F                 sar     edx, 2
.text:0000000000404562                 mov     eax, ecx
.text:0000000000404564                 sar     eax, 1Fh
.text:0000000000404567                 sub     edx, eax
.text:0000000000404569                 mov     eax, edx
.text:000000000040456B                 shl     eax, 2
.text:000000000040456E                 add     eax, edx
.text:0000000000404570                 add     eax, eax
.text:0000000000404572                 sub     ecx, eax
.text:0000000000404574                 mov     edx, ecx
.text:0000000000404576                 mov     rax, [rbp+var_58]
.text:000000000040457A                 mov     [rax], dl
.text:000000000040457C                 sub     [rbp+var_4C], 1
.text:0000000000404580
.text:0000000000404580 loc_404580:                             ; CODE XREF: sub_404398+25E↓j
.text:0000000000404580                 cmp     [rbp+var_4C], 0
.text:0000000000404584                 js      short loc_4045F8
.text:0000000000404586                 mov     rdx, [rbp+var_48]
.text:000000000040458A                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000404594                 imul    rax, rdx
.text:0000000000404598                 add     rax, 1
.text:000000000040459C                 mov     [rbp+var_48], rax
.text:00000000004045A0                 mov     eax, [rbp+var_4C]
.text:00000000004045A3                 sar     eax, 2
.text:00000000004045A6                 cdqe
.text:00000000004045A8                 lea     rdx, ds:0[rax*4]
.text:00000000004045B0                 mov     rax, [rbp+var_40]
.text:00000000004045B4                 add     rax, rdx
.text:00000000004045B7                 mov     edx, [rax]
.text:00000000004045B9                 mov     rax, [rbp+var_48]
.text:00000000004045BD                 shr     rax, 20h
.text:00000000004045C1                 mov     esi, eax
.text:00000000004045C3                 mov     rax, [rbp+var_58]
.text:00000000004045C7                 movzx   eax, byte ptr [rax]
.text:00000000004045CA                 movzx   eax, al
.text:00000000004045CD                 mov     ecx, [rbp+var_4C]
.text:00000000004045D0                 mov     edi, ecx
.text:00000000004045D2                 sar     edi, 2
.text:00000000004045D5                 xor     esi, edx
.text:00000000004045D7                 mov     rcx, [rbp+var_58]
.text:00000000004045DB                 movsxd  rdi, edi
.text:00000000004045DE                 movsxd  rdx, eax
.text:00000000004045E1                 mov     rax, rdx
.text:00000000004045E4                 shl     rax, 3
.text:00000000004045E8                 add     rax, rdx
.text:00000000004045EB                 add     rax, rdi
.text:00000000004045EE                 mov     [rcx+rax*4+4], esi
.text:00000000004045F2                 sub     [rbp+var_4C], 4
.text:00000000004045F6                 jmp     short loc_404580
.text:00000000004045F8 ; ---------------------------------------------------------------------------
.text:00000000004045F8
.text:00000000004045F8 loc_4045F8:                             ; CODE XREF: sub_404398+1EC↑j
.text:00000000004045F8                 mov     rax, [rbp+var_58]
.text:00000000004045FC                 movzx   eax, byte ptr [rax]
.text:00000000004045FF                 movzx   eax, al
.text:0000000000404602                 movsxd  rdx, eax
.text:0000000000404605                 mov     rax, rdx
.text:0000000000404608                 shl     rax, 3
.text:000000000040460C                 add     rax, rdx
.text:000000000040460F                 shl     rax, 2
.text:0000000000404613                 mov     rdx, [rbp+var_58]
.text:0000000000404617                 add     rax, rdx
.text:000000000040461A                 lea     rdi, [rax+4]
.text:000000000040461E                 lea     rcx, [rbp+var_154]
.text:0000000000404625                 lea     rdx, [rbp+var_150]
.text:000000000040462C                 mov     eax, [rbp+var_164]
.text:0000000000404632                 mov     esi, eax
.text:0000000000404634                 mov     eax, 0
.text:0000000000404639                 call    sub_40A07C
.text:000000000040463E                 mov     [rbp+var_14], eax
.text:0000000000404641                 mov     eax, [rbp+var_14]
.text:0000000000404644                 not     eax
.text:0000000000404646                 shr     eax, 1Fh
.text:0000000000404649                 test    al, al
.text:000000000040464B                 jz      loc_404917
.text:0000000000404651                 mov     eax, [rbp+var_164]
.text:0000000000404657                 mov     [rbp+var_15C], eax
.text:000000000040465D                 mov     eax, [rbp+var_14]
.text:0000000000404660                 mov     [rbp+var_158], eax
.text:0000000000404666                 lea     rax, [rbp+var_15C]
.text:000000000040466D                 mov     edx, 8
.text:0000000000404672                 mov     rsi, rax
.text:0000000000404675                 lea     rdi, sub_403FFF
.text:000000000040467C                 call    sub_40A8C3
.text:0000000000404681
.text:0000000000404681 loc_404681:                             ; CODE XREF: sub_404398+57A↓j
.text:0000000000404681                 lea     rax, unk_40B0C6
.text:0000000000404688                 mov     [rbp+var_60], rax
.text:000000000040468C                 mov     rax, 3C496CD39082A87Dh
.text:0000000000404696                 mov     [rbp+var_68], rax
.text:000000000040469A                 mov     [rbp+var_6C], 8
.text:00000000004046A1                 call    getMem
.text:00000000004046A6                 mov     [rbp+var_78], rax
.text:00000000004046AA                 mov     rax, [rbp+var_78]
.text:00000000004046AE                 movzx   eax, byte ptr [rax]
.text:00000000004046B1                 movzx   eax, al
.text:00000000004046B4                 lea     ecx, [rax+3]
.text:00000000004046B7                 mov     edx, 66666667h
.text:00000000004046BC                 mov     eax, ecx
.text:00000000004046BE                 imul    edx
.text:00000000004046C0                 sar     edx, 2
.text:00000000004046C3                 mov     eax, ecx
.text:00000000004046C5                 sar     eax, 1Fh
.text:00000000004046C8                 sub     edx, eax
.text:00000000004046CA                 mov     eax, edx
.text:00000000004046CC                 shl     eax, 2
.text:00000000004046CF                 add     eax, edx
.text:00000000004046D1                 add     eax, eax
.text:00000000004046D3                 sub     ecx, eax
.text:00000000004046D5                 mov     edx, ecx
.text:00000000004046D7                 mov     rax, [rbp+var_78]
.text:00000000004046DB                 mov     [rax], dl
.text:00000000004046DD                 sub     [rbp+var_6C], 1
.text:00000000004046E1
.text:00000000004046E1 loc_4046E1:                             ; CODE XREF: sub_404398+3BF↓j
.text:00000000004046E1                 cmp     [rbp+var_6C], 0
.text:00000000004046E5                 js      short loc_404759
.text:00000000004046E7                 mov     rdx, [rbp+var_68]
.text:00000000004046EB                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004046F5                 imul    rax, rdx
.text:00000000004046F9                 add     rax, 1
.text:00000000004046FD                 mov     [rbp+var_68], rax
.text:0000000000404701                 mov     eax, [rbp+var_6C]
.text:0000000000404704                 sar     eax, 2
.text:0000000000404707                 cdqe
.text:0000000000404709                 lea     rdx, ds:0[rax*4]
.text:0000000000404711                 mov     rax, [rbp+var_60]
.text:0000000000404715                 add     rax, rdx
.text:0000000000404718                 mov     edx, [rax]
.text:000000000040471A                 mov     rax, [rbp+var_68]
.text:000000000040471E                 shr     rax, 20h
.text:0000000000404722                 mov     esi, eax
.text:0000000000404724                 mov     rax, [rbp+var_78]
.text:0000000000404728                 movzx   eax, byte ptr [rax]
.text:000000000040472B                 movzx   eax, al
.text:000000000040472E                 mov     ecx, [rbp+var_6C]
.text:0000000000404731                 mov     edi, ecx
.text:0000000000404733                 sar     edi, 2
.text:0000000000404736                 xor     esi, edx
.text:0000000000404738                 mov     rcx, [rbp+var_78]
.text:000000000040473C                 movsxd  rdi, edi
.text:000000000040473F                 movsxd  rdx, eax
.text:0000000000404742                 mov     rax, rdx
.text:0000000000404745                 shl     rax, 3
.text:0000000000404749                 add     rax, rdx
.text:000000000040474C                 add     rax, rdi
.text:000000000040474F                 mov     [rcx+rax*4+4], esi
.text:0000000000404753                 sub     [rbp+var_6C], 4
.text:0000000000404757                 jmp     short loc_4046E1
.text:0000000000404759 ; ---------------------------------------------------------------------------
.text:0000000000404759
.text:0000000000404759 loc_404759:                             ; CODE XREF: sub_404398+34D↑j
.text:0000000000404759                 mov     rax, [rbp+var_78]
.text:000000000040475D                 movzx   eax, byte ptr [rax]
.text:0000000000404760                 movzx   eax, al
.text:0000000000404763                 movsxd  rdx, eax
.text:0000000000404766                 mov     rax, rdx
.text:0000000000404769                 shl     rax, 3
.text:000000000040476D                 add     rax, rdx
.text:0000000000404770                 shl     rax, 2
.text:0000000000404774                 mov     rdx, [rbp+var_78]
.text:0000000000404778                 add     rax, rdx
.text:000000000040477B                 add     rax, 4
.text:000000000040477F                 mov     ecx, 1
.text:0000000000404784                 mov     edx, 0
.text:0000000000404789                 mov     esi, 0FFFFFFFFh
.text:000000000040478E                 mov     rdi, rax
.text:0000000000404791                 mov     eax, 0
.text:0000000000404796                 call    sub_40A07C
.text:000000000040479B                 mov     [rbp+var_18], eax
.text:000000000040479E                 cmp     [rbp+var_18], 0
.text:00000000004047A2                 jg      loc_4048FE
.text:00000000004047A8                 cmp     [rbp+var_18], 0FFFFFFFFh
.text:00000000004047AC                 jnz     loc_404905
.text:00000000004047B2                 lea     rax, unk_40B0CF
.text:00000000004047B9                 mov     [rbp+var_80], rax
.text:00000000004047BD                 mov     rax, 5C15E1B0D8021B2Ch
.text:00000000004047C7                 mov     [rbp+var_88], rax
.text:00000000004047CE                 mov     [rbp+var_8C], 11h
.text:00000000004047D8                 call    getMem
.text:00000000004047DD                 mov     [rbp+var_98], rax
.text:00000000004047E4                 mov     rax, [rbp+var_98]
.text:00000000004047EB                 movzx   eax, byte ptr [rax]
.text:00000000004047EE                 movzx   eax, al
.text:00000000004047F1                 lea     ecx, [rax+3]
.text:00000000004047F4                 mov     edx, 66666667h
.text:00000000004047F9                 mov     eax, ecx
.text:00000000004047FB                 imul    edx
.text:00000000004047FD                 sar     edx, 2
.text:0000000000404800                 mov     eax, ecx
.text:0000000000404802                 sar     eax, 1Fh
.text:0000000000404805                 sub     edx, eax
.text:0000000000404807                 mov     eax, edx
.text:0000000000404809                 shl     eax, 2
.text:000000000040480C                 add     eax, edx
.text:000000000040480E                 add     eax, eax
.text:0000000000404810                 sub     ecx, eax
.text:0000000000404812                 mov     edx, ecx
.text:0000000000404814                 mov     rax, [rbp+var_98]
.text:000000000040481B                 mov     [rax], dl
.text:000000000040481D                 sub     [rbp+var_8C], 1
.text:0000000000404824
.text:0000000000404824 loc_404824:                             ; CODE XREF: sub_404398+521↓j
.text:0000000000404824                 cmp     [rbp+var_8C], 0
.text:000000000040482B                 js      loc_4048BE
.text:0000000000404831                 mov     rdx, [rbp+var_88]
.text:0000000000404838                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000404842                 imul    rax, rdx
.text:0000000000404846                 add     rax, 1
.text:000000000040484A                 mov     [rbp+var_88], rax
.text:0000000000404851                 mov     eax, [rbp+var_8C]
.text:0000000000404857                 sar     eax, 2
.text:000000000040485A                 cdqe
.text:000000000040485C                 lea     rdx, ds:0[rax*4]
.text:0000000000404864                 mov     rax, [rbp+var_80]
.text:0000000000404868                 add     rax, rdx
.text:000000000040486B                 mov     edx, [rax]
.text:000000000040486D                 mov     rax, [rbp+var_88]
.text:0000000000404874                 shr     rax, 20h
.text:0000000000404878                 mov     esi, eax
.text:000000000040487A                 mov     rax, [rbp+var_98]
.text:0000000000404881                 movzx   eax, byte ptr [rax]
.text:0000000000404884                 movzx   eax, al
.text:0000000000404887                 mov     ecx, [rbp+var_8C]
.text:000000000040488D                 mov     edi, ecx
.text:000000000040488F                 sar     edi, 2
.text:0000000000404892                 xor     esi, edx
.text:0000000000404894                 mov     rcx, [rbp+var_98]
.text:000000000040489B                 movsxd  rdi, edi
.text:000000000040489E                 movsxd  rdx, eax
.text:00000000004048A1                 mov     rax, rdx
.text:00000000004048A4                 shl     rax, 3
.text:00000000004048A8                 add     rax, rdx
.text:00000000004048AB                 add     rax, rdi
.text:00000000004048AE                 mov     [rcx+rax*4+4], esi
.text:00000000004048B2                 sub     [rbp+var_8C], 4
.text:00000000004048B9                 jmp     loc_404824
.text:00000000004048BE ; ---------------------------------------------------------------------------
.text:00000000004048BE
.text:00000000004048BE loc_4048BE:                             ; CODE XREF: sub_404398+493↑j
.text:00000000004048BE                 mov     rax, [rbp+var_98]
.text:00000000004048C5                 movzx   eax, byte ptr [rax]
.text:00000000004048C8                 movzx   eax, al
.text:00000000004048CB                 movsxd  rdx, eax
.text:00000000004048CE                 mov     rax, rdx
.text:00000000004048D1                 shl     rax, 3
.text:00000000004048D5                 add     rax, rdx
.text:00000000004048D8                 shl     rax, 2
.text:00000000004048DC                 mov     rdx, [rbp+var_98]
.text:00000000004048E3                 add     rax, rdx
.text:00000000004048E6                 add     rax, 4
.text:00000000004048EA                 mov     rdi, rax
.text:00000000004048ED                 mov     eax, 0
.text:00000000004048F2                 call    sub_40A07C
.text:00000000004048F7                 mov     eax, [rax]
.text:00000000004048F9                 cmp     eax, 4
.text:00000000004048FC                 jnz     short loc_404905
.text:00000000004048FE
.text:00000000004048FE loc_4048FE:                             ; CODE XREF: sub_404398+40A↑j
.text:00000000004048FE                 mov     eax, 1
.text:0000000000404903                 jmp     short loc_40490A
.text:0000000000404905 ; ---------------------------------------------------------------------------
.text:0000000000404905
.text:0000000000404905 loc_404905:                             ; CODE XREF: sub_404398+414↑j
.text:0000000000404905                                         ; sub_404398+564↑j
.text:0000000000404905                 mov     eax, 0
.text:000000000040490A
.text:000000000040490A loc_40490A:                             ; CODE XREF: sub_404398+56B↑j
.text:000000000040490A                 test    al, al
.text:000000000040490C                 jz      loc_404520
.text:0000000000404912                 jmp     loc_404681
.text:0000000000404917 ; ---------------------------------------------------------------------------
.text:0000000000404917
.text:0000000000404917 loc_404917:                             ; CODE XREF: sub_404398+2B3↑j
.text:0000000000404917                 lea     rax, unk_40B0E4
.text:000000000040491E                 mov     [rbp+var_A0], rax
.text:0000000000404925                 mov     rax, 4189439E8F243582h
.text:000000000040492F                 mov     [rbp+var_A8], rax
.text:0000000000404936                 mov     [rbp+var_AC], 6
.text:0000000000404940                 call    getMem
.text:0000000000404945                 mov     [rbp+var_B8], rax
.text:000000000040494C                 mov     rax, [rbp+var_B8]
.text:0000000000404953                 movzx   eax, byte ptr [rax]
.text:0000000000404956                 movzx   eax, al
.text:0000000000404959                 lea     ecx, [rax+3]
.text:000000000040495C                 mov     edx, 66666667h
.text:0000000000404961                 mov     eax, ecx
.text:0000000000404963                 imul    edx
.text:0000000000404965                 sar     edx, 2
.text:0000000000404968                 mov     eax, ecx
.text:000000000040496A                 sar     eax, 1Fh
.text:000000000040496D                 sub     edx, eax
.text:000000000040496F                 mov     eax, edx
.text:0000000000404971                 shl     eax, 2
.text:0000000000404974                 add     eax, edx
.text:0000000000404976                 add     eax, eax
.text:0000000000404978                 sub     ecx, eax
.text:000000000040497A                 mov     edx, ecx
.text:000000000040497C                 mov     rax, [rbp+var_B8]
.text:0000000000404983                 mov     [rax], dl
.text:0000000000404985                 sub     [rbp+var_AC], 1
.text:000000000040498C
.text:000000000040498C loc_40498C:                             ; CODE XREF: sub_404398+68C↓j
.text:000000000040498C                 cmp     [rbp+var_AC], 0
.text:0000000000404993                 js      loc_404A29
.text:0000000000404999                 mov     rdx, [rbp+var_A8]
.text:00000000004049A0                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004049AA                 imul    rax, rdx
.text:00000000004049AE                 add     rax, 1
.text:00000000004049B2                 mov     [rbp+var_A8], rax
.text:00000000004049B9                 mov     eax, [rbp+var_AC]
.text:00000000004049BF                 sar     eax, 2
.text:00000000004049C2                 cdqe
.text:00000000004049C4                 lea     rdx, ds:0[rax*4]
.text:00000000004049CC                 mov     rax, [rbp+var_A0]
.text:00000000004049D3                 add     rax, rdx
.text:00000000004049D6                 mov     edx, [rax]
.text:00000000004049D8                 mov     rax, [rbp+var_A8]
.text:00000000004049DF                 shr     rax, 20h
.text:00000000004049E3                 mov     esi, eax
.text:00000000004049E5                 mov     rax, [rbp+var_B8]
.text:00000000004049EC                 movzx   eax, byte ptr [rax]
.text:00000000004049EF                 movzx   eax, al
.text:00000000004049F2                 mov     ecx, [rbp+var_AC]
.text:00000000004049F8                 mov     edi, ecx
.text:00000000004049FA                 sar     edi, 2
.text:00000000004049FD                 xor     esi, edx
.text:00000000004049FF                 mov     rcx, [rbp+var_B8]
.text:0000000000404A06                 movsxd  rdi, edi
.text:0000000000404A09                 movsxd  rdx, eax
.text:0000000000404A0C                 mov     rax, rdx
.text:0000000000404A0F                 shl     rax, 3
.text:0000000000404A13                 add     rax, rdx
.text:0000000000404A16                 add     rax, rdi
.text:0000000000404A19                 mov     [rcx+rax*4+4], esi
.text:0000000000404A1D                 sub     [rbp+var_AC], 4
.text:0000000000404A24                 jmp     loc_40498C
.text:0000000000404A29 ; ---------------------------------------------------------------------------
.text:0000000000404A29
.text:0000000000404A29 loc_404A29:                             ; CODE XREF: sub_404398+5FB↑j
.text:0000000000404A29                 mov     rax, [rbp+var_B8]
.text:0000000000404A30                 movzx   eax, byte ptr [rax]
.text:0000000000404A33                 movzx   eax, al
.text:0000000000404A36                 movsxd  rdx, eax
.text:0000000000404A39                 mov     rax, rdx
.text:0000000000404A3C                 shl     rax, 3
.text:0000000000404A40                 add     rax, rdx
.text:0000000000404A43                 shl     rax, 2
.text:0000000000404A47                 mov     rdx, [rbp+var_B8]
.text:0000000000404A4E                 add     rax, rdx
.text:0000000000404A51                 lea     rdx, [rax+4]
.text:0000000000404A55                 mov     eax, [rbp+var_164]
.text:0000000000404A5B                 mov     esi, eax
.text:0000000000404A5D                 mov     rdi, rdx
.text:0000000000404A60                 mov     eax, 0
.text:0000000000404A65                 call    sub_40A07C
.text:0000000000404A6A                 lea     rax, unk_40B0ED
.text:0000000000404A71                 mov     [rbp+var_C0], rax
.text:0000000000404A78                 mov     rax, 45744FABDF8E931Ah
.text:0000000000404A82                 mov     [rbp+var_C8], rax
.text:0000000000404A89                 mov     [rbp+var_CC], 8
.text:0000000000404A93                 call    getMem
.text:0000000000404A98                 mov     [rbp+var_D8], rax
.text:0000000000404A9F                 mov     rax, [rbp+var_D8]
.text:0000000000404AA6                 movzx   eax, byte ptr [rax]
.text:0000000000404AA9                 movzx   eax, al
.text:0000000000404AAC                 lea     ecx, [rax+3]
.text:0000000000404AAF                 mov     edx, 66666667h
.text:0000000000404AB4                 mov     eax, ecx
.text:0000000000404AB6                 imul    edx
.text:0000000000404AB8                 sar     edx, 2
.text:0000000000404ABB                 mov     eax, ecx
.text:0000000000404ABD                 sar     eax, 1Fh
.text:0000000000404AC0                 sub     edx, eax
.text:0000000000404AC2                 mov     eax, edx
.text:0000000000404AC4                 shl     eax, 2
.text:0000000000404AC7                 add     eax, edx
.text:0000000000404AC9                 add     eax, eax
.text:0000000000404ACB                 sub     ecx, eax
.text:0000000000404ACD                 mov     edx, ecx
.text:0000000000404ACF                 mov     rax, [rbp+var_D8]
.text:0000000000404AD6                 mov     [rax], dl
.text:0000000000404AD8                 sub     [rbp+var_CC], 1
.text:0000000000404ADF
.text:0000000000404ADF loc_404ADF:                             ; CODE XREF: sub_404398+7DF↓j
.text:0000000000404ADF                 cmp     [rbp+var_CC], 0
.text:0000000000404AE6                 js      loc_404B7C
.text:0000000000404AEC                 mov     rdx, [rbp+var_C8]
.text:0000000000404AF3                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000404AFD                 imul    rax, rdx
.text:0000000000404B01                 add     rax, 1
.text:0000000000404B05                 mov     [rbp+var_C8], rax
.text:0000000000404B0C                 mov     eax, [rbp+var_CC]
.text:0000000000404B12                 sar     eax, 2
.text:0000000000404B15                 cdqe
.text:0000000000404B17                 lea     rdx, ds:0[rax*4]
.text:0000000000404B1F                 mov     rax, [rbp+var_C0]
.text:0000000000404B26                 add     rax, rdx
.text:0000000000404B29                 mov     edx, [rax]
.text:0000000000404B2B                 mov     rax, [rbp+var_C8]
.text:0000000000404B32                 shr     rax, 20h
.text:0000000000404B36                 mov     esi, eax
.text:0000000000404B38                 mov     rax, [rbp+var_D8]
.text:0000000000404B3F                 movzx   eax, byte ptr [rax]
.text:0000000000404B42                 movzx   eax, al
.text:0000000000404B45                 mov     ecx, [rbp+var_CC]
.text:0000000000404B4B                 mov     edi, ecx
.text:0000000000404B4D                 sar     edi, 2
.text:0000000000404B50                 xor     esi, edx
.text:0000000000404B52                 mov     rcx, [rbp+var_D8]
.text:0000000000404B59                 movsxd  rdi, edi
.text:0000000000404B5C                 movsxd  rdx, eax
.text:0000000000404B5F                 mov     rax, rdx
.text:0000000000404B62                 shl     rax, 3
.text:0000000000404B66                 add     rax, rdx
.text:0000000000404B69                 add     rax, rdi
.text:0000000000404B6C                 mov     [rcx+rax*4+4], esi
.text:0000000000404B70                 sub     [rbp+var_CC], 4
.text:0000000000404B77                 jmp     loc_404ADF
.text:0000000000404B7C ; ---------------------------------------------------------------------------
.text:0000000000404B7C
.text:0000000000404B7C loc_404B7C:                             ; CODE XREF: sub_404398+74E↑j
.text:0000000000404B7C                 mov     rax, [rbp+var_D8]
.text:0000000000404B83                 movzx   eax, byte ptr [rax]
.text:0000000000404B86                 movzx   eax, al
.text:0000000000404B89                 movsxd  rdx, eax
.text:0000000000404B8C                 mov     rax, rdx
.text:0000000000404B8F                 shl     rax, 3
.text:0000000000404B93                 add     rax, rdx
.text:0000000000404B96                 shl     rax, 2
.text:0000000000404B9A                 mov     rdx, [rbp+var_D8]
.text:0000000000404BA1                 add     rax, rdx
.text:0000000000404BA4                 add     rax, 4
.text:0000000000404BA8                 mov     edx, 1
.text:0000000000404BAD                 mov     esi, 3Ch
.text:0000000000404BB2                 mov     rdi, rax
.text:0000000000404BB5                 mov     eax, 0
.text:0000000000404BBA                 call    sub_40A07C
.text:0000000000404BBF
.text:0000000000404BBF loc_404BBF:                             ; CODE XREF: sub_404398+182↑j
.text:0000000000404BBF                 lea     rax, unk_40B0F6
.text:0000000000404BC6                 mov     [rbp+var_E0], rax
.text:0000000000404BCD                 mov     rax, 8A51E0097109C652h
.text:0000000000404BD7                 mov     [rbp+var_E8], rax
.text:0000000000404BDE                 mov     [rbp+var_EC], 6
.text:0000000000404BE8                 call    getMem
.text:0000000000404BED                 mov     [rbp+var_F8], rax
.text:0000000000404BF4                 mov     rax, [rbp+var_F8]
.text:0000000000404BFB                 movzx   eax, byte ptr [rax]
.text:0000000000404BFE                 movzx   eax, al
.text:0000000000404C01                 lea     ecx, [rax+3]
.text:0000000000404C04                 mov     edx, 66666667h
.text:0000000000404C09                 mov     eax, ecx
.text:0000000000404C0B                 imul    edx
.text:0000000000404C0D                 sar     edx, 2
.text:0000000000404C10                 mov     eax, ecx
.text:0000000000404C12                 sar     eax, 1Fh
.text:0000000000404C15                 sub     edx, eax
.text:0000000000404C17                 mov     eax, edx
.text:0000000000404C19                 shl     eax, 2
.text:0000000000404C1C                 add     eax, edx
.text:0000000000404C1E                 add     eax, eax
.text:0000000000404C20                 sub     ecx, eax
.text:0000000000404C22                 mov     edx, ecx
.text:0000000000404C24                 mov     rax, [rbp+var_F8]
.text:0000000000404C2B                 mov     [rax], dl
.text:0000000000404C2D                 sub     [rbp+var_EC], 1
.text:0000000000404C34
.text:0000000000404C34 loc_404C34:                             ; CODE XREF: sub_404398+934↓j
.text:0000000000404C34                 cmp     [rbp+var_EC], 0
.text:0000000000404C3B                 js      loc_404CD1
.text:0000000000404C41                 mov     rdx, [rbp+var_E8]
.text:0000000000404C48                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000404C52                 imul    rax, rdx
.text:0000000000404C56                 add     rax, 1
.text:0000000000404C5A                 mov     [rbp+var_E8], rax
.text:0000000000404C61                 mov     eax, [rbp+var_EC]
.text:0000000000404C67                 sar     eax, 2
.text:0000000000404C6A                 cdqe
.text:0000000000404C6C                 lea     rdx, ds:0[rax*4]
.text:0000000000404C74                 mov     rax, [rbp+var_E0]
.text:0000000000404C7B                 add     rax, rdx
.text:0000000000404C7E                 mov     edx, [rax]
.text:0000000000404C80                 mov     rax, [rbp+var_E8]
.text:0000000000404C87                 shr     rax, 20h
.text:0000000000404C8B                 mov     esi, eax
.text:0000000000404C8D                 mov     rax, [rbp+var_F8]
.text:0000000000404C94                 movzx   eax, byte ptr [rax]
.text:0000000000404C97                 movzx   eax, al
.text:0000000000404C9A                 mov     ecx, [rbp+var_EC]
.text:0000000000404CA0                 mov     edi, ecx
.text:0000000000404CA2                 sar     edi, 2
.text:0000000000404CA5                 xor     esi, edx
.text:0000000000404CA7                 mov     rcx, [rbp+var_F8]
.text:0000000000404CAE                 movsxd  rdi, edi
.text:0000000000404CB1                 movsxd  rdx, eax
.text:0000000000404CB4                 mov     rax, rdx
.text:0000000000404CB7                 shl     rax, 3
.text:0000000000404CBB                 add     rax, rdx
.text:0000000000404CBE                 add     rax, rdi
.text:0000000000404CC1                 mov     [rcx+rax*4+4], esi
.text:0000000000404CC5                 sub     [rbp+var_EC], 4
.text:0000000000404CCC                 jmp     loc_404C34
.text:0000000000404CD1 ; ---------------------------------------------------------------------------
.text:0000000000404CD1
.text:0000000000404CD1 loc_404CD1:                             ; CODE XREF: sub_404398+8A3↑j
.text:0000000000404CD1                 mov     rax, [rbp+var_F8]
.text:0000000000404CD8                 movzx   eax, byte ptr [rax]
.text:0000000000404CDB                 movzx   eax, al
.text:0000000000404CDE                 movsxd  rdx, eax
.text:0000000000404CE1                 mov     rax, rdx
.text:0000000000404CE4                 shl     rax, 3
.text:0000000000404CE8                 add     rax, rdx
.text:0000000000404CEB                 shl     rax, 2
.text:0000000000404CEF                 mov     rdx, [rbp+var_F8]
.text:0000000000404CF6                 add     rax, rdx
.text:0000000000404CF9                 lea     rdx, [rax+4]
.text:0000000000404CFD                 mov     eax, [rbp+var_164]
.text:0000000000404D03                 mov     esi, eax
.text:0000000000404D05                 mov     rdi, rdx
.text:0000000000404D08                 mov     eax, 0
.text:0000000000404D0D                 call    sub_40A07C
.text:0000000000404D12
.text:0000000000404D12 loc_404D12:                             ; CODE XREF: sub_404398+C42↓j
.text:0000000000404D12                 mov     ebx, cs:dword_60C398
.text:0000000000404D18                 lea     rax, unk_40B0FF
.text:0000000000404D1F                 mov     [rbp+var_100], rax
.text:0000000000404D26                 mov     rax, 0EE8E653BDDBC0DB8h
.text:0000000000404D30                 mov     [rbp+var_108], rax
.text:0000000000404D37                 mov     [rbp+var_10C], 8
.text:0000000000404D41                 call    getMem
.text:0000000000404D46                 mov     [rbp+var_118], rax
.text:0000000000404D4D                 mov     rax, [rbp+var_118]
.text:0000000000404D54                 movzx   eax, byte ptr [rax]
.text:0000000000404D57                 movzx   eax, al
.text:0000000000404D5A                 lea     ecx, [rax+3]
.text:0000000000404D5D                 mov     edx, 66666667h
.text:0000000000404D62                 mov     eax, ecx
.text:0000000000404D64                 imul    edx
.text:0000000000404D66                 sar     edx, 2
.text:0000000000404D69                 mov     eax, ecx
.text:0000000000404D6B                 sar     eax, 1Fh
.text:0000000000404D6E                 sub     edx, eax
.text:0000000000404D70                 mov     eax, edx
.text:0000000000404D72                 shl     eax, 2
.text:0000000000404D75                 add     eax, edx
.text:0000000000404D77                 add     eax, eax
.text:0000000000404D79                 sub     ecx, eax
.text:0000000000404D7B                 mov     edx, ecx
.text:0000000000404D7D                 mov     rax, [rbp+var_118]
.text:0000000000404D84                 mov     [rax], dl
.text:0000000000404D86                 sub     [rbp+var_10C], 1
.text:0000000000404D8D
.text:0000000000404D8D loc_404D8D:                             ; CODE XREF: sub_404398+A8D↓j
.text:0000000000404D8D                 cmp     [rbp+var_10C], 0
.text:0000000000404D94                 js      loc_404E2A
.text:0000000000404D9A                 mov     rdx, [rbp+var_108]
.text:0000000000404DA1                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000404DAB                 imul    rax, rdx
.text:0000000000404DAF                 add     rax, 1
.text:0000000000404DB3                 mov     [rbp+var_108], rax
.text:0000000000404DBA                 mov     eax, [rbp+var_10C]
.text:0000000000404DC0                 sar     eax, 2
.text:0000000000404DC3                 cdqe
.text:0000000000404DC5                 lea     rdx, ds:0[rax*4]
.text:0000000000404DCD                 mov     rax, [rbp+var_100]
.text:0000000000404DD4                 add     rax, rdx
.text:0000000000404DD7                 mov     edx, [rax]
.text:0000000000404DD9                 mov     rax, [rbp+var_108]
.text:0000000000404DE0                 shr     rax, 20h
.text:0000000000404DE4                 mov     esi, eax
.text:0000000000404DE6                 mov     rax, [rbp+var_118]
.text:0000000000404DED                 movzx   eax, byte ptr [rax]
.text:0000000000404DF0                 movzx   eax, al
.text:0000000000404DF3                 mov     ecx, [rbp+var_10C]
.text:0000000000404DF9                 mov     edi, ecx
.text:0000000000404DFB                 sar     edi, 2
.text:0000000000404DFE                 xor     esi, edx
.text:0000000000404E00                 mov     rcx, [rbp+var_118]
.text:0000000000404E07                 movsxd  rdi, edi
.text:0000000000404E0A                 movsxd  rdx, eax
.text:0000000000404E0D                 mov     rax, rdx
.text:0000000000404E10                 shl     rax, 3
.text:0000000000404E14                 add     rax, rdx
.text:0000000000404E17                 add     rax, rdi
.text:0000000000404E1A                 mov     [rcx+rax*4+4], esi
.text:0000000000404E1E                 sub     [rbp+var_10C], 4
.text:0000000000404E25                 jmp     loc_404D8D
.text:0000000000404E2A ; ---------------------------------------------------------------------------
.text:0000000000404E2A
.text:0000000000404E2A loc_404E2A:                             ; CODE XREF: sub_404398+9FC↑j
.text:0000000000404E2A                 mov     rax, [rbp+var_118]
.text:0000000000404E31                 movzx   eax, byte ptr [rax]
.text:0000000000404E34                 movzx   eax, al
.text:0000000000404E37                 movsxd  rdx, eax
.text:0000000000404E3A                 mov     rax, rdx
.text:0000000000404E3D                 shl     rax, 3
.text:0000000000404E41                 add     rax, rdx
.text:0000000000404E44                 shl     rax, 2
.text:0000000000404E48                 mov     rdx, [rbp+var_118]
.text:0000000000404E4F                 add     rax, rdx
.text:0000000000404E52                 add     rax, 4
.text:0000000000404E56                 mov     ecx, 0
.text:0000000000404E5B                 mov     edx, 0
.text:0000000000404E60                 mov     esi, ebx
.text:0000000000404E62                 mov     rdi, rax
.text:0000000000404E65                 mov     eax, 0
.text:0000000000404E6A                 call    sub_40A07C
.text:0000000000404E6F                 cmp     eax, 0FFFFFFFFh
.text:0000000000404E72                 jnz     loc_404FD1
.text:0000000000404E78                 lea     rax, unk_40B108
.text:0000000000404E7F                 mov     [rbp+var_120], rax
.text:0000000000404E86                 mov     rax, 49F8F4DD8315BF1Ah
.text:0000000000404E90                 mov     [rbp+var_128], rax
.text:0000000000404E97                 mov     [rbp+var_12C], 11h
.text:0000000000404EA1                 call    getMem
.text:0000000000404EA6                 mov     [rbp+var_138], rax
.text:0000000000404EAD                 mov     rax, [rbp+var_138]
.text:0000000000404EB4                 movzx   eax, byte ptr [rax]
.text:0000000000404EB7                 movzx   eax, al
.text:0000000000404EBA                 lea     ecx, [rax+3]
.text:0000000000404EBD                 mov     edx, 66666667h
.text:0000000000404EC2                 mov     eax, ecx
.text:0000000000404EC4                 imul    edx
.text:0000000000404EC6                 sar     edx, 2
.text:0000000000404EC9                 mov     eax, ecx
.text:0000000000404ECB                 sar     eax, 1Fh
.text:0000000000404ECE                 sub     edx, eax
.text:0000000000404ED0                 mov     eax, edx
.text:0000000000404ED2                 shl     eax, 2
.text:0000000000404ED5                 add     eax, edx
.text:0000000000404ED7                 add     eax, eax
.text:0000000000404ED9                 sub     ecx, eax
.text:0000000000404EDB                 mov     edx, ecx
.text:0000000000404EDD                 mov     rax, [rbp+var_138]
.text:0000000000404EE4                 mov     [rax], dl
.text:0000000000404EE6                 sub     [rbp+var_12C], 1
.text:0000000000404EED
.text:0000000000404EED loc_404EED:                             ; CODE XREF: sub_404398+BED↓j
.text:0000000000404EED                 cmp     [rbp+var_12C], 0
.text:0000000000404EF4                 js      loc_404F8A
.text:0000000000404EFA                 mov     rdx, [rbp+var_128]
.text:0000000000404F01                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000404F0B                 imul    rax, rdx
.text:0000000000404F0F                 add     rax, 1
.text:0000000000404F13                 mov     [rbp+var_128], rax
.text:0000000000404F1A                 mov     eax, [rbp+var_12C]
.text:0000000000404F20                 sar     eax, 2
.text:0000000000404F23                 cdqe
.text:0000000000404F25                 lea     rdx, ds:0[rax*4]
.text:0000000000404F2D                 mov     rax, [rbp+var_120]
.text:0000000000404F34                 add     rax, rdx
.text:0000000000404F37                 mov     edx, [rax]
.text:0000000000404F39                 mov     rax, [rbp+var_128]
.text:0000000000404F40                 shr     rax, 20h
.text:0000000000404F44                 mov     esi, eax
.text:0000000000404F46                 mov     rax, [rbp+var_138]
.text:0000000000404F4D                 movzx   eax, byte ptr [rax]
.text:0000000000404F50                 movzx   eax, al
.text:0000000000404F53                 mov     ecx, [rbp+var_12C]
.text:0000000000404F59                 mov     edi, ecx
.text:0000000000404F5B                 sar     edi, 2
.text:0000000000404F5E                 xor     esi, edx
.text:0000000000404F60                 mov     rcx, [rbp+var_138]
.text:0000000000404F67                 movsxd  rdi, edi
.text:0000000000404F6A                 movsxd  rdx, eax
.text:0000000000404F6D                 mov     rax, rdx
.text:0000000000404F70                 shl     rax, 3
.text:0000000000404F74                 add     rax, rdx
.text:0000000000404F77                 add     rax, rdi
.text:0000000000404F7A                 mov     [rcx+rax*4+4], esi
.text:0000000000404F7E                 sub     [rbp+var_12C], 4
.text:0000000000404F85                 jmp     loc_404EED
.text:0000000000404F8A ; ---------------------------------------------------------------------------
.text:0000000000404F8A
.text:0000000000404F8A loc_404F8A:                             ; CODE XREF: sub_404398+B5C↑j
.text:0000000000404F8A                 mov     rax, [rbp+var_138]
.text:0000000000404F91                 movzx   eax, byte ptr [rax]
.text:0000000000404F94                 movzx   eax, al
.text:0000000000404F97                 movsxd  rdx, eax
.text:0000000000404F9A                 mov     rax, rdx
.text:0000000000404F9D                 shl     rax, 3
.text:0000000000404FA1                 add     rax, rdx
.text:0000000000404FA4                 shl     rax, 2
.text:0000000000404FA8                 mov     rdx, [rbp+var_138]
.text:0000000000404FAF                 add     rax, rdx
.text:0000000000404FB2                 add     rax, 4
.text:0000000000404FB6                 mov     rdi, rax
.text:0000000000404FB9                 mov     eax, 0
.text:0000000000404FBE                 call    sub_40A07C
.text:0000000000404FC3                 mov     eax, [rax]
.text:0000000000404FC5                 cmp     eax, 0Ah
.text:0000000000404FC8                 jz      short loc_404FD1
.text:0000000000404FCA                 mov     eax, 1
.text:0000000000404FCF                 jmp     short loc_404FD6
.text:0000000000404FD1 ; ---------------------------------------------------------------------------
.text:0000000000404FD1
.text:0000000000404FD1 loc_404FD1:                             ; CODE XREF: sub_404398+ADA↑j
.text:0000000000404FD1                                         ; sub_404398+C30↑j
.text:0000000000404FD1                 mov     eax, 0
.text:0000000000404FD6
.text:0000000000404FD6 loc_404FD6:                             ; CODE XREF: sub_404398+C37↑j
.text:0000000000404FD6                 test    al, al
.text:0000000000404FD8                 jz      short loc_404FDF
.text:0000000000404FDA                 jmp     loc_404D12
.text:0000000000404FDF ; ---------------------------------------------------------------------------
.text:0000000000404FDF
.text:0000000000404FDF loc_404FDF:                             ; CODE XREF: sub_404398+C40↑j
.text:0000000000404FDF                 call    sub_401FD3
.text:0000000000404FE4                 mov     [rbp+var_164], eax
.text:0000000000404FEA                 cmp     [rbp+var_164], 0FFFFFFFFh
.text:0000000000404FF1                 setnz   al
.text:0000000000404FF4                 test    al, al
.text:0000000000404FF6                 jz      short loc_404FFD
.text:0000000000404FF8                 jmp     loc_4043DF
.text:0000000000404FFD ; ---------------------------------------------------------------------------
.text:0000000000404FFD
.text:0000000000404FFD loc_404FFD:                             ; CODE XREF: sub_404398+175↑j
.text:0000000000404FFD                                         ; sub_404398+C5E↑j
.text:0000000000404FFD                 nop
.text:0000000000404FFE                 add     rsp, 168h
.text:0000000000405005                 pop     rbx
.text:0000000000405006                 pop     rbp
.text:0000000000405007                 retn
.text:0000000000405007 ; } // starts at 404398
.text:0000000000405007 sub_404398      endp
.text:0000000000405007
.text:0000000000405008
.text:0000000000405008 ; =============== S U B R O U T I N E =======================================
.text:0000000000405008
.text:0000000000405008 ; Attributes: bp-based frame
.text:0000000000405008
.text:0000000000405008 sub_405008      proc near               ; CODE XREF: sub_408CE3+3D↓p
.text:0000000000405008
.text:0000000000405008 var_1A74        = dword ptr -1A74h
.text:0000000000405008 var_1A70        = qword ptr -1A70h
.text:0000000000405008 var_1A68        = qword ptr -1A68h
.text:0000000000405008 var_1A60        = qword ptr -1A60h
.text:0000000000405008 var_1A58        = qword ptr -1A58h
.text:0000000000405008 anonymous_0     = byte ptr -0A70h
.text:0000000000405008 var_A60         = byte ptr -0A60h
.text:0000000000405008 var_678         = qword ptr -678h
.text:0000000000405008 var_66C         = dword ptr -66Ch
.text:0000000000405008 var_668         = qword ptr -668h
.text:0000000000405008 var_660         = qword ptr -660h
.text:0000000000405008 var_658         = qword ptr -658h
.text:0000000000405008 var_64C         = dword ptr -64Ch
.text:0000000000405008 var_648         = qword ptr -648h
.text:0000000000405008 var_640         = qword ptr -640h
.text:0000000000405008 var_638         = qword ptr -638h
.text:0000000000405008 var_62C         = dword ptr -62Ch
.text:0000000000405008 var_628         = qword ptr -628h
.text:0000000000405008 var_620         = qword ptr -620h
.text:0000000000405008 var_612         = byte ptr -612h
.text:0000000000405008 var_611         = byte ptr -611h
.text:0000000000405008 var_610         = qword ptr -610h
.text:0000000000405008 var_608         = qword ptr -608h
.text:0000000000405008 var_600         = qword ptr -600h
.text:0000000000405008 var_5F8         = qword ptr -5F8h
.text:0000000000405008 var_5F0         = qword ptr -5F0h
.text:0000000000405008 var_5E4         = dword ptr -5E4h
.text:0000000000405008 var_5E0         = qword ptr -5E0h
.text:0000000000405008 var_5D8         = qword ptr -5D8h
.text:0000000000405008 var_5D0         = qword ptr -5D0h
.text:0000000000405008 var_5C4         = dword ptr -5C4h
.text:0000000000405008 var_5C0         = qword ptr -5C0h
.text:0000000000405008 var_5B8         = qword ptr -5B8h
.text:0000000000405008 var_5B0         = qword ptr -5B0h
.text:0000000000405008 var_5A4         = dword ptr -5A4h
.text:0000000000405008 var_5A0         = qword ptr -5A0h
.text:0000000000405008 var_598         = qword ptr -598h
.text:0000000000405008 var_590         = qword ptr -590h
.text:0000000000405008 var_584         = dword ptr -584h
.text:0000000000405008 var_580         = qword ptr -580h
.text:0000000000405008 var_578         = qword ptr -578h
.text:0000000000405008 var_56A         = byte ptr -56Ah
.text:0000000000405008 var_569         = byte ptr -569h
.text:0000000000405008 var_568         = qword ptr -568h
.text:0000000000405008 var_560         = qword ptr -560h
.text:0000000000405008 var_558         = qword ptr -558h
.text:0000000000405008 var_550         = qword ptr -550h
.text:0000000000405008 var_548         = qword ptr -548h
.text:0000000000405008 var_53C         = dword ptr -53Ch
.text:0000000000405008 var_538         = qword ptr -538h
.text:0000000000405008 var_530         = qword ptr -530h
.text:0000000000405008 var_528         = qword ptr -528h
.text:0000000000405008 var_51C         = dword ptr -51Ch
.text:0000000000405008 var_518         = qword ptr -518h
.text:0000000000405008 var_510         = qword ptr -510h
.text:0000000000405008 var_508         = qword ptr -508h
.text:0000000000405008 var_4FC         = dword ptr -4FCh
.text:0000000000405008 var_4F8         = qword ptr -4F8h
.text:0000000000405008 var_4F0         = qword ptr -4F0h
.text:0000000000405008 var_4E8         = qword ptr -4E8h
.text:0000000000405008 var_4DC         = dword ptr -4DCh
.text:0000000000405008 var_4D8         = qword ptr -4D8h
.text:0000000000405008 var_4D0         = qword ptr -4D0h
.text:0000000000405008 var_4C8         = qword ptr -4C8h
.text:0000000000405008 var_4BC         = dword ptr -4BCh
.text:0000000000405008 var_4B8         = qword ptr -4B8h
.text:0000000000405008 var_4B0         = qword ptr -4B0h
.text:0000000000405008 var_4A8         = qword ptr -4A8h
.text:0000000000405008 var_49C         = dword ptr -49Ch
.text:0000000000405008 var_498         = qword ptr -498h
.text:0000000000405008 var_490         = qword ptr -490h
.text:0000000000405008 var_488         = qword ptr -488h
.text:0000000000405008 var_47C         = dword ptr -47Ch
.text:0000000000405008 var_478         = qword ptr -478h
.text:0000000000405008 var_470         = qword ptr -470h
.text:0000000000405008 var_468         = qword ptr -468h
.text:0000000000405008 var_45C         = dword ptr -45Ch
.text:0000000000405008 var_458         = qword ptr -458h
.text:0000000000405008 var_450         = qword ptr -450h
.text:0000000000405008 var_442         = byte ptr -442h
.text:0000000000405008 var_441         = byte ptr -441h
.text:0000000000405008 var_440         = qword ptr -440h
.text:0000000000405008 var_438         = qword ptr -438h
.text:0000000000405008 var_430         = qword ptr -430h
.text:0000000000405008 var_428         = qword ptr -428h
.text:0000000000405008 var_420         = qword ptr -420h
.text:0000000000405008 var_414         = dword ptr -414h
.text:0000000000405008 var_410         = qword ptr -410h
.text:0000000000405008 var_408         = qword ptr -408h
.text:0000000000405008 var_400         = qword ptr -400h
.text:0000000000405008 var_3F4         = dword ptr -3F4h
.text:0000000000405008 var_3F0         = qword ptr -3F0h
.text:0000000000405008 var_3E8         = qword ptr -3E8h
.text:0000000000405008 var_3E0         = qword ptr -3E0h
.text:0000000000405008 var_3D4         = dword ptr -3D4h
.text:0000000000405008 var_3D0         = qword ptr -3D0h
.text:0000000000405008 var_3C8         = qword ptr -3C8h
.text:0000000000405008 var_3C0         = qword ptr -3C0h
.text:0000000000405008 var_3B4         = dword ptr -3B4h
.text:0000000000405008 var_3B0         = qword ptr -3B0h
.text:0000000000405008 var_3A8         = qword ptr -3A8h
.text:0000000000405008 var_3A0         = qword ptr -3A0h
.text:0000000000405008 var_394         = dword ptr -394h
.text:0000000000405008 var_390         = qword ptr -390h
.text:0000000000405008 var_388         = qword ptr -388h
.text:0000000000405008 var_380         = qword ptr -380h
.text:0000000000405008 var_374         = dword ptr -374h
.text:0000000000405008 var_370         = qword ptr -370h
.text:0000000000405008 var_368         = qword ptr -368h
.text:0000000000405008 var_35A         = byte ptr -35Ah
.text:0000000000405008 var_359         = byte ptr -359h
.text:0000000000405008 var_358         = qword ptr -358h
.text:0000000000405008 var_350         = qword ptr -350h
.text:0000000000405008 var_348         = qword ptr -348h
.text:0000000000405008 var_340         = qword ptr -340h
.text:0000000000405008 var_338         = qword ptr -338h
.text:0000000000405008 var_32C         = dword ptr -32Ch
.text:0000000000405008 var_328         = qword ptr -328h
.text:0000000000405008 var_320         = qword ptr -320h
.text:0000000000405008 var_318         = qword ptr -318h
.text:0000000000405008 var_30C         = dword ptr -30Ch
.text:0000000000405008 var_308         = qword ptr -308h
.text:0000000000405008 var_300         = qword ptr -300h
.text:0000000000405008 var_2F8         = qword ptr -2F8h
.text:0000000000405008 var_2EC         = dword ptr -2ECh
.text:0000000000405008 var_2E8         = qword ptr -2E8h
.text:0000000000405008 var_2E0         = qword ptr -2E0h
.text:0000000000405008 var_2D8         = qword ptr -2D8h
.text:0000000000405008 var_2CC         = dword ptr -2CCh
.text:0000000000405008 var_2C8         = qword ptr -2C8h
.text:0000000000405008 var_2C0         = qword ptr -2C0h
.text:0000000000405008 var_2B8         = qword ptr -2B8h
.text:0000000000405008 var_2AC         = dword ptr -2ACh
.text:0000000000405008 var_2A8         = qword ptr -2A8h
.text:0000000000405008 var_2A0         = qword ptr -2A0h
.text:0000000000405008 var_298         = qword ptr -298h
.text:0000000000405008 var_28C         = dword ptr -28Ch
.text:0000000000405008 var_288         = qword ptr -288h
.text:0000000000405008 var_280         = qword ptr -280h
.text:0000000000405008 var_278         = qword ptr -278h
.text:0000000000405008 var_26C         = dword ptr -26Ch
.text:0000000000405008 var_268         = qword ptr -268h
.text:0000000000405008 var_260         = qword ptr -260h
.text:0000000000405008 var_258         = qword ptr -258h
.text:0000000000405008 var_24C         = dword ptr -24Ch
.text:0000000000405008 var_248         = qword ptr -248h
.text:0000000000405008 var_240         = qword ptr -240h
.text:0000000000405008 var_238         = qword ptr -238h
.text:0000000000405008 var_22C         = dword ptr -22Ch
.text:0000000000405008 var_228         = qword ptr -228h
.text:0000000000405008 var_220         = qword ptr -220h
.text:0000000000405008 var_218         = qword ptr -218h
.text:0000000000405008 var_20C         = dword ptr -20Ch
.text:0000000000405008 var_208         = qword ptr -208h
.text:0000000000405008 var_200         = qword ptr -200h
.text:0000000000405008 var_1F8         = qword ptr -1F8h
.text:0000000000405008 var_1EC         = dword ptr -1ECh
.text:0000000000405008 var_1E8         = qword ptr -1E8h
.text:0000000000405008 var_1E0         = qword ptr -1E0h
.text:0000000000405008 var_1D8         = qword ptr -1D8h
.text:0000000000405008 var_1CC         = dword ptr -1CCh
.text:0000000000405008 var_1C8         = qword ptr -1C8h
.text:0000000000405008 var_1C0         = qword ptr -1C0h
.text:0000000000405008 var_1B8         = qword ptr -1B8h
.text:0000000000405008 var_1AC         = dword ptr -1ACh
.text:0000000000405008 var_1A8         = qword ptr -1A8h
.text:0000000000405008 var_1A0         = qword ptr -1A0h
.text:0000000000405008 var_198         = qword ptr -198h
.text:0000000000405008 var_18C         = dword ptr -18Ch
.text:0000000000405008 var_188         = qword ptr -188h
.text:0000000000405008 var_180         = qword ptr -180h
.text:0000000000405008 var_178         = qword ptr -178h
.text:0000000000405008 var_16C         = dword ptr -16Ch
.text:0000000000405008 var_168         = qword ptr -168h
.text:0000000000405008 var_160         = qword ptr -160h
.text:0000000000405008 var_158         = qword ptr -158h
.text:0000000000405008 var_14C         = dword ptr -14Ch
.text:0000000000405008 var_148         = qword ptr -148h
.text:0000000000405008 var_140         = qword ptr -140h
.text:0000000000405008 var_138         = qword ptr -138h
.text:0000000000405008 var_12C         = dword ptr -12Ch
.text:0000000000405008 var_128         = qword ptr -128h
.text:0000000000405008 var_120         = qword ptr -120h
.text:0000000000405008 var_118         = qword ptr -118h
.text:0000000000405008 var_10C         = dword ptr -10Ch
.text:0000000000405008 var_108         = qword ptr -108h
.text:0000000000405008 var_100         = qword ptr -100h
.text:0000000000405008 var_F8          = qword ptr -0F8h
.text:0000000000405008 var_EC          = dword ptr -0ECh
.text:0000000000405008 var_E8          = qword ptr -0E8h
.text:0000000000405008 var_E0          = qword ptr -0E0h
.text:0000000000405008 var_D8          = qword ptr -0D8h
.text:0000000000405008 var_CC          = dword ptr -0CCh
.text:0000000000405008 var_C8          = qword ptr -0C8h
.text:0000000000405008 var_C0          = qword ptr -0C0h
.text:0000000000405008 var_B2          = byte ptr -0B2h
.text:0000000000405008 var_B1          = byte ptr -0B1h
.text:0000000000405008 var_B0          = qword ptr -0B0h
.text:0000000000405008 var_A8          = qword ptr -0A8h
.text:0000000000405008 var_A0          = qword ptr -0A0h
.text:0000000000405008 var_98          = qword ptr -98h
.text:0000000000405008 var_90          = qword ptr -90h
.text:0000000000405008 var_84          = dword ptr -84h
.text:0000000000405008 var_80          = qword ptr -80h
.text:0000000000405008 var_78          = qword ptr -78h
.text:0000000000405008 var_70          = qword ptr -70h
.text:0000000000405008 var_64          = dword ptr -64h
.text:0000000000405008 var_60          = qword ptr -60h
.text:0000000000405008 var_58          = qword ptr -58h
.text:0000000000405008 var_4C          = dword ptr -4Ch
.text:0000000000405008 var_48          = qword ptr -48h
.text:0000000000405008 var_3C          = dword ptr -3Ch
.text:0000000000405008 var_38          = qword ptr -38h
.text:0000000000405008 var_30          = dword ptr -30h
.text:0000000000405008 var_2C          = dword ptr -2Ch
.text:0000000000405008 var_28          = qword ptr -28h
.text:0000000000405008
.text:0000000000405008 ; __unwind {
.text:0000000000405008                 push    rbp
.text:0000000000405009                 mov     rbp, rsp
.text:000000000040500C                 push    r13
.text:000000000040500E                 push    r12
.text:0000000000405010                 push    rbx
.text:0000000000405011                 sub     rsp, 1A68h
.text:0000000000405018                 mov     [rbp+var_1A74], edi
.text:000000000040501E                 nop
.text:000000000040501F                 nop
.text:0000000000405020                 nop
.text:0000000000405021                 nop
.text:0000000000405022                 nop
.text:0000000000405023                 nop
.text:0000000000405024                 nop
.text:0000000000405025                 nop
.text:0000000000405026                 nop
.text:0000000000405027                 nop
.text:0000000000405028                 nop
.text:0000000000405029                 nop
.text:000000000040502A                 nop
.text:000000000040502B                 nop
.text:000000000040502C                 nop
.text:000000000040502D                 nop
.text:000000000040502E                 nop
.text:000000000040502F                 nop
.text:0000000000405030                 nop
.text:0000000000405031                 nop
.text:0000000000405032                 nop
.text:0000000000405033                 lea     rdx, [rbp+var_A60]
.text:000000000040503A                 mov     eax, 0
.text:000000000040503F                 mov     ecx, 7Dh
.text:0000000000405044                 mov     rdi, rdx
.text:0000000000405047                 rep stosq
.text:000000000040504A                 mov     rax, fs:28h
.text:0000000000405053                 mov     rbx, rax
.text:0000000000405056                 mov     rax, rbx
.text:0000000000405059                 mov     [rbp+var_28], rax
.text:000000000040505D                 lea     rax, unk_40B053
.text:0000000000405064                 mov     [rbp+var_58], rax
.text:0000000000405068                 mov     rax, 60E14E6DC0B1E60Eh
.text:0000000000405072                 mov     [rbp+var_60], rax
.text:0000000000405076                 mov     [rbp+var_64], 6
.text:000000000040507D                 call    getMem
.text:0000000000405082                 mov     [rbp+var_70], rax
.text:0000000000405086                 mov     rax, [rbp+var_70]
.text:000000000040508A                 movzx   eax, byte ptr [rax]
.text:000000000040508D                 movzx   eax, al
.text:0000000000405090                 lea     ecx, [rax+3]
.text:0000000000405093                 mov     edx, 66666667h
.text:0000000000405098                 mov     eax, ecx
.text:000000000040509A                 imul    edx
.text:000000000040509C                 sar     edx, 2
.text:000000000040509F                 mov     eax, ecx
.text:00000000004050A1                 sar     eax, 1Fh
.text:00000000004050A4                 sub     edx, eax
.text:00000000004050A6                 mov     eax, edx
.text:00000000004050A8                 shl     eax, 2
.text:00000000004050AB                 add     eax, edx
.text:00000000004050AD                 add     eax, eax
.text:00000000004050AF                 sub     ecx, eax
.text:00000000004050B1                 mov     edx, ecx
.text:00000000004050B3                 mov     rax, [rbp+var_70]
.text:00000000004050B7                 mov     [rax], dl
.text:00000000004050B9                 sub     [rbp+var_64], 1
.text:00000000004050BD
.text:00000000004050BD loc_4050BD:                             ; CODE XREF: sub_405008+12B↓j
.text:00000000004050BD                 cmp     [rbp+var_64], 0
.text:00000000004050C1                 js      short loc_405135
.text:00000000004050C3                 mov     rdx, [rbp+var_60]
.text:00000000004050C7                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004050D1                 imul    rax, rdx
.text:00000000004050D5                 add     rax, 1
.text:00000000004050D9                 mov     [rbp+var_60], rax
.text:00000000004050DD                 mov     eax, [rbp+var_64]
.text:00000000004050E0                 sar     eax, 2
.text:00000000004050E3                 cdqe
.text:00000000004050E5                 lea     rdx, ds:0[rax*4]
.text:00000000004050ED                 mov     rax, [rbp+var_58]
.text:00000000004050F1                 add     rax, rdx
.text:00000000004050F4                 mov     edx, [rax]
.text:00000000004050F6                 mov     rax, [rbp+var_60]
.text:00000000004050FA                 shr     rax, 20h
.text:00000000004050FE                 mov     esi, eax
.text:0000000000405100                 mov     rax, [rbp+var_70]
.text:0000000000405104                 movzx   eax, byte ptr [rax]
.text:0000000000405107                 movzx   eax, al
.text:000000000040510A                 mov     ecx, [rbp+var_64]
.text:000000000040510D                 mov     edi, ecx
.text:000000000040510F                 sar     edi, 2
.text:0000000000405112                 xor     esi, edx
.text:0000000000405114                 mov     rcx, [rbp+var_70]
.text:0000000000405118                 movsxd  rdi, edi
.text:000000000040511B                 movsxd  rdx, eax
.text:000000000040511E                 mov     rax, rdx
.text:0000000000405121                 shl     rax, 3
.text:0000000000405125                 add     rax, rdx
.text:0000000000405128                 add     rax, rdi
.text:000000000040512B                 mov     [rcx+rax*4+4], esi
.text:000000000040512F                 sub     [rbp+var_64], 4
.text:0000000000405133                 jmp     short loc_4050BD
.text:0000000000405135 ; ---------------------------------------------------------------------------
.text:0000000000405135
.text:0000000000405135 loc_405135:                             ; CODE XREF: sub_405008+B9↑j
.text:0000000000405135                 mov     rax, [rbp+var_70]
.text:0000000000405139                 movzx   eax, byte ptr [rax]
.text:000000000040513C                 movzx   eax, al
.text:000000000040513F                 movsxd  rdx, eax
.text:0000000000405142                 mov     rax, rdx
.text:0000000000405145                 shl     rax, 3
.text:0000000000405149                 add     rax, rdx
.text:000000000040514C                 shl     rax, 2
.text:0000000000405150                 mov     rdx, [rbp+var_70]
.text:0000000000405154                 add     rax, rdx
.text:0000000000405157                 lea     rdx, [rax+4]
.text:000000000040515B                 mov     eax, [rbp+var_1A74]
.text:0000000000405161                 mov     rsi, rdx
.text:0000000000405164                 mov     edi, eax
.text:0000000000405166                 call    sub_402D64
.text:000000000040516B                 xor     eax, 1
.text:000000000040516E                 test    al, al
.text:0000000000405170                 jnz     short loc_405195
.text:0000000000405172                 lea     rcx, [rbp+var_A60]
.text:0000000000405179                 mov     eax, [rbp+var_1A74]
.text:000000000040517F                 mov     edx, 3E8h
.text:0000000000405184                 mov     rsi, rcx
.text:0000000000405187                 mov     edi, eax
.text:0000000000405189                 call    sub_4034B7
.text:000000000040518E                 xor     eax, 1
.text:0000000000405191                 test    al, al
.text:0000000000405193                 jz      short loc_40519C
.text:0000000000405195
.text:0000000000405195 loc_405195:                             ; CODE XREF: sub_405008+168↑j
.text:0000000000405195                 mov     eax, 1
.text:000000000040519A                 jmp     short loc_4051A1
.text:000000000040519C ; ---------------------------------------------------------------------------
.text:000000000040519C
.text:000000000040519C loc_40519C:                             ; CODE XREF: sub_405008+18B↑j
.text:000000000040519C                 mov     eax, 0
.text:00000000004051A1
.text:00000000004051A1 loc_4051A1:                             ; CODE XREF: sub_405008+192↑j
.text:00000000004051A1                 test    al, al
.text:00000000004051A3                 jnz     loc_408B64
.text:00000000004051A9                 lea     rax, unk_40B11D
.text:00000000004051B0                 mov     [rbp+var_78], rax
.text:00000000004051B4                 mov     rax, 0C2D97044BCF189E7h
.text:00000000004051BE                 mov     [rbp+var_80], rax
.text:00000000004051C2                 mov     [rbp+var_84], 5
.text:00000000004051CC                 call    getMem
.text:00000000004051D1                 mov     [rbp+var_90], rax
.text:00000000004051D8                 mov     rax, [rbp+var_90]
.text:00000000004051DF                 movzx   eax, byte ptr [rax]
.text:00000000004051E2                 movzx   eax, al
.text:00000000004051E5                 lea     ecx, [rax+3]
.text:00000000004051E8                 mov     edx, 66666667h
.text:00000000004051ED                 mov     eax, ecx
.text:00000000004051EF                 imul    edx
.text:00000000004051F1                 sar     edx, 2
.text:00000000004051F4                 mov     eax, ecx
.text:00000000004051F6                 sar     eax, 1Fh
.text:00000000004051F9                 sub     edx, eax
.text:00000000004051FB                 mov     eax, edx
.text:00000000004051FD                 shl     eax, 2
.text:0000000000405200                 add     eax, edx
.text:0000000000405202                 add     eax, eax
.text:0000000000405204                 sub     ecx, eax
.text:0000000000405206                 mov     edx, ecx
.text:0000000000405208                 mov     rax, [rbp+var_90]
.text:000000000040520F                 mov     [rax], dl
.text:0000000000405211                 sub     [rbp+var_84], 1
.text:0000000000405218
.text:0000000000405218 loc_405218:                             ; CODE XREF: sub_405008+29C↓j
.text:0000000000405218                 cmp     [rbp+var_84], 0
.text:000000000040521F                 js      loc_4052A9
.text:0000000000405225                 mov     rdx, [rbp+var_80]
.text:0000000000405229                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000405233                 imul    rax, rdx
.text:0000000000405237                 add     rax, 1
.text:000000000040523B                 mov     [rbp+var_80], rax
.text:000000000040523F                 mov     eax, [rbp+var_84]
.text:0000000000405245                 sar     eax, 2
.text:0000000000405248                 cdqe
.text:000000000040524A                 lea     rdx, ds:0[rax*4]
.text:0000000000405252                 mov     rax, [rbp+var_78]
.text:0000000000405256                 add     rax, rdx
.text:0000000000405259                 mov     edx, [rax]
.text:000000000040525B                 mov     rax, [rbp+var_80]
.text:000000000040525F                 shr     rax, 20h
.text:0000000000405263                 mov     esi, eax
.text:0000000000405265                 mov     rax, [rbp+var_90]
.text:000000000040526C                 movzx   eax, byte ptr [rax]
.text:000000000040526F                 movzx   eax, al
.text:0000000000405272                 mov     ecx, [rbp+var_84]
.text:0000000000405278                 mov     edi, ecx
.text:000000000040527A                 sar     edi, 2
.text:000000000040527D                 xor     esi, edx
.text:000000000040527F                 mov     rcx, [rbp+var_90]
.text:0000000000405286                 movsxd  rdi, edi
.text:0000000000405289                 movsxd  rdx, eax
.text:000000000040528C                 mov     rax, rdx
.text:000000000040528F                 shl     rax, 3
.text:0000000000405293                 add     rax, rdx
.text:0000000000405296                 add     rax, rdi
.text:0000000000405299                 mov     [rcx+rax*4+4], esi
.text:000000000040529D                 sub     [rbp+var_84], 4
.text:00000000004052A4                 jmp     loc_405218
.text:00000000004052A9 ; ---------------------------------------------------------------------------
.text:00000000004052A9
.text:00000000004052A9 loc_4052A9:                             ; CODE XREF: sub_405008+217↑j
.text:00000000004052A9                 mov     rax, [rbp+var_90]
.text:00000000004052B0                 movzx   eax, byte ptr [rax]
.text:00000000004052B3                 movzx   eax, al
.text:00000000004052B6                 movsxd  rdx, eax
.text:00000000004052B9                 mov     rax, rdx
.text:00000000004052BC                 shl     rax, 3
.text:00000000004052C0                 add     rax, rdx
.text:00000000004052C3                 shl     rax, 2
.text:00000000004052C7                 mov     rdx, [rbp+var_90]
.text:00000000004052CE                 add     rax, rdx
.text:00000000004052D1                 lea     rdx, [rax+4]
.text:00000000004052D5                 lea     rax, [rbp+var_A60]
.text:00000000004052DC                 mov     [rbp+var_98], rax
.text:00000000004052E3                 mov     [rbp+var_A0], rdx
.text:00000000004052EA                 mov     rax, [rbp+var_98]
.text:00000000004052F1                 mov     [rbp+var_A8], rax
.text:00000000004052F8                 mov     rax, [rbp+var_A0]
.text:00000000004052FF                 mov     [rbp+var_B0], rax
.text:0000000000405306
.text:0000000000405306 loc_405306:                             ; CODE XREF: sub_405008+34A↓j
.text:0000000000405306                 mov     rax, [rbp+var_A8]
.text:000000000040530D                 lea     rdx, [rax+1]
.text:0000000000405311                 mov     [rbp+var_A8], rdx
.text:0000000000405318                 movzx   eax, byte ptr [rax]
.text:000000000040531B                 mov     [rbp+var_B1], al
.text:0000000000405321                 mov     rax, [rbp+var_B0]
.text:0000000000405328                 lea     rdx, [rax+1]
.text:000000000040532C                 mov     [rbp+var_B0], rdx
.text:0000000000405333                 movzx   eax, byte ptr [rax]
.text:0000000000405336                 mov     [rbp+var_B2], al
.text:000000000040533C                 cmp     [rbp+var_B1], 0
.text:0000000000405343                 jz      short loc_405354
.text:0000000000405345                 movzx   eax, [rbp+var_B1]
.text:000000000040534C                 cmp     al, [rbp+var_B2]
.text:0000000000405352                 jz      short loc_405306
.text:0000000000405354
.text:0000000000405354 loc_405354:                             ; CODE XREF: sub_405008+33B↑j
.text:0000000000405354                 movzx   eax, [rbp+var_B1]
.text:000000000040535B                 cmp     al, [rbp+var_B2]
.text:0000000000405361                 setz    al
.text:0000000000405364                 movzx   eax, al
.text:0000000000405367                 test    eax, eax
.text:0000000000405369                 setnz   al
.text:000000000040536C                 test    al, al
.text:000000000040536E                 jz      loc_406CEB
.text:0000000000405374                 lea     rax, unk_40B11D
.text:000000000040537B                 mov     [rbp+var_C0], rax
.text:0000000000405382                 mov     rax, 0C2D97044BCF189E7h
.text:000000000040538C                 mov     [rbp+var_C8], rax
.text:0000000000405393                 mov     [rbp+var_CC], 5
.text:000000000040539D                 call    getMem
.text:00000000004053A2                 mov     [rbp+var_D8], rax
.text:00000000004053A9                 mov     rax, [rbp+var_D8]
.text:00000000004053B0                 movzx   eax, byte ptr [rax]
.text:00000000004053B3                 movzx   eax, al
.text:00000000004053B6                 lea     ecx, [rax+3]
.text:00000000004053B9                 mov     edx, 66666667h
.text:00000000004053BE                 mov     eax, ecx
.text:00000000004053C0                 imul    edx
.text:00000000004053C2                 sar     edx, 2
.text:00000000004053C5                 mov     eax, ecx
.text:00000000004053C7                 sar     eax, 1Fh
.text:00000000004053CA                 sub     edx, eax
.text:00000000004053CC                 mov     eax, edx
.text:00000000004053CE                 shl     eax, 2
.text:00000000004053D1                 add     eax, edx
.text:00000000004053D3                 add     eax, eax
.text:00000000004053D5                 sub     ecx, eax
.text:00000000004053D7                 mov     edx, ecx
.text:00000000004053D9                 mov     rax, [rbp+var_D8]
.text:00000000004053E0                 mov     [rax], dl
.text:00000000004053E2                 sub     [rbp+var_CC], 1
.text:00000000004053E9
.text:00000000004053E9 loc_4053E9:                             ; CODE XREF: sub_405008+479↓j
.text:00000000004053E9                 cmp     [rbp+var_CC], 0
.text:00000000004053F0                 js      loc_405486
.text:00000000004053F6                 mov     rdx, [rbp+var_C8]
.text:00000000004053FD                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000405407                 imul    rax, rdx
.text:000000000040540B                 add     rax, 1
.text:000000000040540F                 mov     [rbp+var_C8], rax
.text:0000000000405416                 mov     eax, [rbp+var_CC]
.text:000000000040541C                 sar     eax, 2
.text:000000000040541F                 cdqe
.text:0000000000405421                 lea     rdx, ds:0[rax*4]
.text:0000000000405429                 mov     rax, [rbp+var_C0]
.text:0000000000405430                 add     rax, rdx
.text:0000000000405433                 mov     edx, [rax]
.text:0000000000405435                 mov     rax, [rbp+var_C8]
.text:000000000040543C                 shr     rax, 20h
.text:0000000000405440                 mov     esi, eax
.text:0000000000405442                 mov     rax, [rbp+var_D8]
.text:0000000000405449                 movzx   eax, byte ptr [rax]
.text:000000000040544C                 movzx   eax, al
.text:000000000040544F                 mov     ecx, [rbp+var_CC]
.text:0000000000405455                 mov     edi, ecx
.text:0000000000405457                 sar     edi, 2
.text:000000000040545A                 xor     esi, edx
.text:000000000040545C                 mov     rcx, [rbp+var_D8]
.text:0000000000405463                 movsxd  rdi, edi
.text:0000000000405466                 movsxd  rdx, eax
.text:0000000000405469                 mov     rax, rdx
.text:000000000040546C                 shl     rax, 3
.text:0000000000405470                 add     rax, rdx
.text:0000000000405473                 add     rax, rdi
.text:0000000000405476                 mov     [rcx+rax*4+4], esi
.text:000000000040547A                 sub     [rbp+var_CC], 4
.text:0000000000405481                 jmp     loc_4053E9
.text:0000000000405486 ; ---------------------------------------------------------------------------
.text:0000000000405486
.text:0000000000405486 loc_405486:                             ; CODE XREF: sub_405008+3E8↑j
.text:0000000000405486                 mov     rax, [rbp+var_D8]
.text:000000000040548D                 movzx   eax, byte ptr [rax]
.text:0000000000405490                 movzx   eax, al
.text:0000000000405493                 movsxd  rdx, eax
.text:0000000000405496                 mov     rax, rdx
.text:0000000000405499                 shl     rax, 3
.text:000000000040549D                 add     rax, rdx
.text:00000000004054A0                 shl     rax, 2
.text:00000000004054A4                 mov     rdx, [rbp+var_D8]
.text:00000000004054AB                 add     rax, rdx
.text:00000000004054AE                 lea     rbx, [rax+4]
.text:00000000004054B2                 lea     rax, unk_40B126
.text:00000000004054B9                 mov     [rbp+var_E0], rax
.text:00000000004054C0                 mov     rax, 65236B6AAA341D41h
.text:00000000004054CA                 mov     [rbp+var_E8], rax
.text:00000000004054D1                 mov     [rbp+var_EC], 7
.text:00000000004054DB                 call    getMem
.text:00000000004054E0                 mov     [rbp+var_F8], rax
.text:00000000004054E7                 mov     rax, [rbp+var_F8]
.text:00000000004054EE                 movzx   eax, byte ptr [rax]
.text:00000000004054F1                 movzx   eax, al
.text:00000000004054F4                 lea     ecx, [rax+3]
.text:00000000004054F7                 mov     edx, 66666667h
.text:00000000004054FC                 mov     eax, ecx
.text:00000000004054FE                 imul    edx
.text:0000000000405500                 sar     edx, 2
.text:0000000000405503                 mov     eax, ecx
.text:0000000000405505                 sar     eax, 1Fh
.text:0000000000405508                 sub     edx, eax
.text:000000000040550A                 mov     eax, edx
.text:000000000040550C                 shl     eax, 2
.text:000000000040550F                 add     eax, edx
.text:0000000000405511                 add     eax, eax
.text:0000000000405513                 sub     ecx, eax
.text:0000000000405515                 mov     edx, ecx
.text:0000000000405517                 mov     rax, [rbp+var_F8]
.text:000000000040551E                 mov     [rax], dl
.text:0000000000405520                 sub     [rbp+var_EC], 1
.text:0000000000405527
.text:0000000000405527 loc_405527:                             ; CODE XREF: sub_405008+5B7↓j
.text:0000000000405527                 cmp     [rbp+var_EC], 0
.text:000000000040552E                 js      loc_4055C4
.text:0000000000405534                 mov     rdx, [rbp+var_E8]
.text:000000000040553B                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000405545                 imul    rax, rdx
.text:0000000000405549                 add     rax, 1
.text:000000000040554D                 mov     [rbp+var_E8], rax
.text:0000000000405554                 mov     eax, [rbp+var_EC]
.text:000000000040555A                 sar     eax, 2
.text:000000000040555D                 cdqe
.text:000000000040555F                 lea     rdx, ds:0[rax*4]
.text:0000000000405567                 mov     rax, [rbp+var_E0]
.text:000000000040556E                 add     rax, rdx
.text:0000000000405571                 mov     edx, [rax]
.text:0000000000405573                 mov     rax, [rbp+var_E8]
.text:000000000040557A                 shr     rax, 20h
.text:000000000040557E                 mov     esi, eax
.text:0000000000405580                 mov     rax, [rbp+var_F8]
.text:0000000000405587                 movzx   eax, byte ptr [rax]
.text:000000000040558A                 movzx   eax, al
.text:000000000040558D                 mov     ecx, [rbp+var_EC]
.text:0000000000405593                 mov     edi, ecx
.text:0000000000405595                 sar     edi, 2
.text:0000000000405598                 xor     esi, edx
.text:000000000040559A                 mov     rcx, [rbp+var_F8]
.text:00000000004055A1                 movsxd  rdi, edi
.text:00000000004055A4                 movsxd  rdx, eax
.text:00000000004055A7                 mov     rax, rdx
.text:00000000004055AA                 shl     rax, 3
.text:00000000004055AE                 add     rax, rdx
.text:00000000004055B1                 add     rax, rdi
.text:00000000004055B4                 mov     [rcx+rax*4+4], esi
.text:00000000004055B8                 sub     [rbp+var_EC], 4
.text:00000000004055BF                 jmp     loc_405527
.text:00000000004055C4 ; ---------------------------------------------------------------------------
.text:00000000004055C4
.text:00000000004055C4 loc_4055C4:                             ; CODE XREF: sub_405008+526↑j
.text:00000000004055C4                 mov     rax, [rbp+var_F8]
.text:00000000004055CB                 movzx   eax, byte ptr [rax]
.text:00000000004055CE                 movzx   eax, al
.text:00000000004055D1                 movsxd  rdx, eax
.text:00000000004055D4                 mov     rax, rdx
.text:00000000004055D7                 shl     rax, 3
.text:00000000004055DB                 add     rax, rdx
.text:00000000004055DE                 shl     rax, 2
.text:00000000004055E2                 mov     rdx, [rbp+var_F8]
.text:00000000004055E9                 add     rax, rdx
.text:00000000004055EC                 add     rax, 4
.text:00000000004055F0                 mov     rsi, rbx
.text:00000000004055F3                 mov     rdi, rax
.text:00000000004055F6                 mov     eax, 0
.text:00000000004055FB                 call    sub_40A07C
.text:0000000000405600                 add     eax, 1
.text:0000000000405603                 mov     [rbp+var_3C], eax
.text:0000000000405606                 mov     eax, [rbp+var_3C]
.text:0000000000405609                 cdqe
.text:000000000040560B                 lea     rdx, [rbp+var_A60]
.text:0000000000405612                 add     rax, rdx
.text:0000000000405615                 mov     [rbp+var_48], rax
.text:0000000000405619                 mov     eax, [rbp+var_3C]
.text:000000000040561C                 add     eax, 1
.text:000000000040561F                 movsxd  rbx, eax
.text:0000000000405622                 lea     rax, unk_40B12F
.text:0000000000405629                 mov     [rbp+var_100], rax
.text:0000000000405630                 mov     rax, 7B4EBE0EAEE7B9E8h
.text:000000000040563A                 mov     [rbp+var_108], rax
.text:0000000000405641                 mov     [rbp+var_10C], 7
.text:000000000040564B                 call    getMem
.text:0000000000405650                 mov     [rbp+var_118], rax
.text:0000000000405657                 mov     rax, [rbp+var_118]
.text:000000000040565E                 movzx   eax, byte ptr [rax]
.text:0000000000405661                 movzx   eax, al
.text:0000000000405664                 lea     ecx, [rax+3]
.text:0000000000405667                 mov     edx, 66666667h
.text:000000000040566C                 mov     eax, ecx
.text:000000000040566E                 imul    edx
.text:0000000000405670                 sar     edx, 2
.text:0000000000405673                 mov     eax, ecx
.text:0000000000405675                 sar     eax, 1Fh
.text:0000000000405678                 sub     edx, eax
.text:000000000040567A                 mov     eax, edx
.text:000000000040567C                 shl     eax, 2
.text:000000000040567F                 add     eax, edx
.text:0000000000405681                 add     eax, eax
.text:0000000000405683                 sub     ecx, eax
.text:0000000000405685                 mov     edx, ecx
.text:0000000000405687                 mov     rax, [rbp+var_118]
.text:000000000040568E                 mov     [rax], dl
.text:0000000000405690                 sub     [rbp+var_10C], 1
.text:0000000000405697
.text:0000000000405697 loc_405697:                             ; CODE XREF: sub_405008+727↓j
.text:0000000000405697                 cmp     [rbp+var_10C], 0
.text:000000000040569E                 js      loc_405734
.text:00000000004056A4                 mov     rdx, [rbp+var_108]
.text:00000000004056AB                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004056B5                 imul    rax, rdx
.text:00000000004056B9                 add     rax, 1
.text:00000000004056BD                 mov     [rbp+var_108], rax
.text:00000000004056C4                 mov     eax, [rbp+var_10C]
.text:00000000004056CA                 sar     eax, 2
.text:00000000004056CD                 cdqe
.text:00000000004056CF                 lea     rdx, ds:0[rax*4]
.text:00000000004056D7                 mov     rax, [rbp+var_100]
.text:00000000004056DE                 add     rax, rdx
.text:00000000004056E1                 mov     edx, [rax]
.text:00000000004056E3                 mov     rax, [rbp+var_108]
.text:00000000004056EA                 shr     rax, 20h
.text:00000000004056EE                 mov     esi, eax
.text:00000000004056F0                 mov     rax, [rbp+var_118]
.text:00000000004056F7                 movzx   eax, byte ptr [rax]
.text:00000000004056FA                 movzx   eax, al
.text:00000000004056FD                 mov     ecx, [rbp+var_10C]
.text:0000000000405703                 mov     edi, ecx
.text:0000000000405705                 sar     edi, 2
.text:0000000000405708                 xor     esi, edx
.text:000000000040570A                 mov     rcx, [rbp+var_118]
.text:0000000000405711                 movsxd  rdi, edi
.text:0000000000405714                 movsxd  rdx, eax
.text:0000000000405717                 mov     rax, rdx
.text:000000000040571A                 shl     rax, 3
.text:000000000040571E                 add     rax, rdx
.text:0000000000405721                 add     rax, rdi
.text:0000000000405724                 mov     [rcx+rax*4+4], esi
.text:0000000000405728                 sub     [rbp+var_10C], 4
.text:000000000040572F                 jmp     loc_405697
.text:0000000000405734 ; ---------------------------------------------------------------------------
.text:0000000000405734
.text:0000000000405734 loc_405734:                             ; CODE XREF: sub_405008+696↑j
.text:0000000000405734                 mov     rax, [rbp+var_118]
.text:000000000040573B                 movzx   eax, byte ptr [rax]
.text:000000000040573E                 movzx   eax, al
.text:0000000000405741                 movsxd  rdx, eax
.text:0000000000405744                 mov     rax, rdx
.text:0000000000405747                 shl     rax, 3
.text:000000000040574B                 add     rax, rdx
.text:000000000040574E                 shl     rax, 2
.text:0000000000405752                 mov     rdx, [rbp+var_118]
.text:0000000000405759                 add     rax, rdx
.text:000000000040575C                 lea     rdx, [rax+4]
.text:0000000000405760                 lea     rax, [rbp+var_A60]
.text:0000000000405767                 mov     rsi, rax
.text:000000000040576A                 mov     rdi, rdx
.text:000000000040576D                 mov     eax, 0
.text:0000000000405772                 call    sub_40A07C
.text:0000000000405777                 add     rax, rbx
.text:000000000040577A                 cmp     rax, 3E8h
.text:0000000000405780                 setnbe  al
.text:0000000000405783                 test    al, al
.text:0000000000405785                 jnz     loc_408B67
.text:000000000040578B                 lea     rax, unk_40B138
.text:0000000000405792                 mov     [rbp+var_120], rax
.text:0000000000405799                 mov     rax, 809C461C7B1A2824h
.text:00000000004057A3                 mov     [rbp+var_128], rax
.text:00000000004057AA                 mov     [rbp+var_12C], 8
.text:00000000004057B4                 call    getMem
.text:00000000004057B9                 mov     [rbp+var_138], rax
.text:00000000004057C0                 mov     rax, [rbp+var_138]
.text:00000000004057C7                 movzx   eax, byte ptr [rax]
.text:00000000004057CA                 movzx   eax, al
.text:00000000004057CD                 lea     ecx, [rax+3]
.text:00000000004057D0                 mov     edx, 66666667h
.text:00000000004057D5                 mov     eax, ecx
.text:00000000004057D7                 imul    edx
.text:00000000004057D9                 sar     edx, 2
.text:00000000004057DC                 mov     eax, ecx
.text:00000000004057DE                 sar     eax, 1Fh
.text:00000000004057E1                 sub     edx, eax
.text:00000000004057E3                 mov     eax, edx
.text:00000000004057E5                 shl     eax, 2
.text:00000000004057E8                 add     eax, edx
.text:00000000004057EA                 add     eax, eax
.text:00000000004057EC                 sub     ecx, eax
.text:00000000004057EE                 mov     edx, ecx
.text:00000000004057F0                 mov     rax, [rbp+var_138]
.text:00000000004057F7                 mov     [rax], dl
.text:00000000004057F9                 sub     [rbp+var_12C], 1
.text:0000000000405800
.text:0000000000405800 loc_405800:                             ; CODE XREF: sub_405008+890↓j
.text:0000000000405800                 cmp     [rbp+var_12C], 0
.text:0000000000405807                 js      loc_40589D
.text:000000000040580D                 mov     rdx, [rbp+var_128]
.text:0000000000405814                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040581E                 imul    rax, rdx
.text:0000000000405822                 add     rax, 1
.text:0000000000405826                 mov     [rbp+var_128], rax
.text:000000000040582D                 mov     eax, [rbp+var_12C]
.text:0000000000405833                 sar     eax, 2
.text:0000000000405836                 cdqe
.text:0000000000405838                 lea     rdx, ds:0[rax*4]
.text:0000000000405840                 mov     rax, [rbp+var_120]
.text:0000000000405847                 add     rax, rdx
.text:000000000040584A                 mov     edx, [rax]
.text:000000000040584C                 mov     rax, [rbp+var_128]
.text:0000000000405853                 shr     rax, 20h
.text:0000000000405857                 mov     esi, eax
.text:0000000000405859                 mov     rax, [rbp+var_138]
.text:0000000000405860                 movzx   eax, byte ptr [rax]
.text:0000000000405863                 movzx   eax, al
.text:0000000000405866                 mov     ecx, [rbp+var_12C]
.text:000000000040586C                 mov     edi, ecx
.text:000000000040586E                 sar     edi, 2
.text:0000000000405871                 xor     esi, edx
.text:0000000000405873                 mov     rcx, [rbp+var_138]
.text:000000000040587A                 movsxd  rdi, edi
.text:000000000040587D                 movsxd  rdx, eax
.text:0000000000405880                 mov     rax, rdx
.text:0000000000405883                 shl     rax, 3
.text:0000000000405887                 add     rax, rdx
.text:000000000040588A                 add     rax, rdi
.text:000000000040588D                 mov     [rcx+rax*4+4], esi
.text:0000000000405891                 sub     [rbp+var_12C], 4
.text:0000000000405898                 jmp     loc_405800
.text:000000000040589D ; ---------------------------------------------------------------------------
.text:000000000040589D
.text:000000000040589D loc_40589D:                             ; CODE XREF: sub_405008+7FF↑j
.text:000000000040589D                 mov     rax, [rbp+var_138]
.text:00000000004058A4                 movzx   eax, byte ptr [rax]
.text:00000000004058A7                 movzx   eax, al
.text:00000000004058AA                 movsxd  rdx, eax
.text:00000000004058AD                 mov     rax, rdx
.text:00000000004058B0                 shl     rax, 3
.text:00000000004058B4                 add     rax, rdx
.text:00000000004058B7                 shl     rax, 2
.text:00000000004058BB                 mov     rdx, [rbp+var_138]
.text:00000000004058C2                 add     rax, rdx
.text:00000000004058C5                 add     rax, 4
.text:00000000004058C9                 mov     esi, 39h
.text:00000000004058CE                 mov     rdi, rax
.text:00000000004058D1                 mov     eax, 0
.text:00000000004058D6                 call    sub_40A07C
.text:00000000004058DB                 mov     [rbp+var_4C], eax
.text:00000000004058DE                 cmp     [rbp+var_4C], 0FFFFFFFFh
.text:00000000004058E2                 jnz     loc_405A3B
.text:00000000004058E8                 lea     rax, unk_40B141
.text:00000000004058EF                 mov     [rbp+var_140], rax
.text:00000000004058F6                 mov     rax, 4F0BB9E75EB58B89h
.text:0000000000405900                 mov     [rbp+var_148], rax
.text:0000000000405907                 mov     [rbp+var_14C], 6
.text:0000000000405911                 call    getMem
.text:0000000000405916                 mov     [rbp+var_158], rax
.text:000000000040591D                 mov     rax, [rbp+var_158]
.text:0000000000405924                 movzx   eax, byte ptr [rax]
.text:0000000000405927                 movzx   eax, al
.text:000000000040592A                 lea     ecx, [rax+3]
.text:000000000040592D                 mov     edx, 66666667h
.text:0000000000405932                 mov     eax, ecx
.text:0000000000405934                 imul    edx
.text:0000000000405936                 sar     edx, 2
.text:0000000000405939                 mov     eax, ecx
.text:000000000040593B                 sar     eax, 1Fh
.text:000000000040593E                 sub     edx, eax
.text:0000000000405940                 mov     eax, edx
.text:0000000000405942                 shl     eax, 2
.text:0000000000405945                 add     eax, edx
.text:0000000000405947                 add     eax, eax
.text:0000000000405949                 sub     ecx, eax
.text:000000000040594B                 mov     edx, ecx
.text:000000000040594D                 mov     rax, [rbp+var_158]
.text:0000000000405954                 mov     [rax], dl
.text:0000000000405956                 sub     [rbp+var_14C], 1
.text:000000000040595D
.text:000000000040595D loc_40595D:                             ; CODE XREF: sub_405008+9ED↓j
.text:000000000040595D                 cmp     [rbp+var_14C], 0
.text:0000000000405964                 js      loc_4059FA
.text:000000000040596A                 mov     rdx, [rbp+var_148]
.text:0000000000405971                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040597B                 imul    rax, rdx
.text:000000000040597F                 add     rax, 1
.text:0000000000405983                 mov     [rbp+var_148], rax
.text:000000000040598A                 mov     eax, [rbp+var_14C]
.text:0000000000405990                 sar     eax, 2
.text:0000000000405993                 cdqe
.text:0000000000405995                 lea     rdx, ds:0[rax*4]
.text:000000000040599D                 mov     rax, [rbp+var_140]
.text:00000000004059A4                 add     rax, rdx
.text:00000000004059A7                 mov     edx, [rax]
.text:00000000004059A9                 mov     rax, [rbp+var_148]
.text:00000000004059B0                 shr     rax, 20h
.text:00000000004059B4                 mov     esi, eax
.text:00000000004059B6                 mov     rax, [rbp+var_158]
.text:00000000004059BD                 movzx   eax, byte ptr [rax]
.text:00000000004059C0                 movzx   eax, al
.text:00000000004059C3                 mov     ecx, [rbp+var_14C]
.text:00000000004059C9                 mov     edi, ecx
.text:00000000004059CB                 sar     edi, 2
.text:00000000004059CE                 xor     esi, edx
.text:00000000004059D0                 mov     rcx, [rbp+var_158]
.text:00000000004059D7                 movsxd  rdi, edi
.text:00000000004059DA                 movsxd  rdx, eax
.text:00000000004059DD                 mov     rax, rdx
.text:00000000004059E0                 shl     rax, 3
.text:00000000004059E4                 add     rax, rdx
.text:00000000004059E7                 add     rax, rdi
.text:00000000004059EA                 mov     [rcx+rax*4+4], esi
.text:00000000004059EE                 sub     [rbp+var_14C], 4
.text:00000000004059F5                 jmp     loc_40595D
.text:00000000004059FA ; ---------------------------------------------------------------------------
.text:00000000004059FA
.text:00000000004059FA loc_4059FA:                             ; CODE XREF: sub_405008+95C↑j
.text:00000000004059FA                 mov     rax, [rbp+var_158]
.text:0000000000405A01                 movzx   eax, byte ptr [rax]
.text:0000000000405A04                 movzx   eax, al
.text:0000000000405A07                 movsxd  rdx, eax
.text:0000000000405A0A                 mov     rax, rdx
.text:0000000000405A0D                 shl     rax, 3
.text:0000000000405A11                 add     rax, rdx
.text:0000000000405A14                 shl     rax, 2
.text:0000000000405A18                 mov     rdx, [rbp+var_158]
.text:0000000000405A1F                 add     rax, rdx
.text:0000000000405A22                 lea     rdx, [rax+4]
.text:0000000000405A26                 mov     eax, [rbp+var_1A74]
.text:0000000000405A2C                 mov     rsi, rdx
.text:0000000000405A2F                 mov     edi, eax
.text:0000000000405A31                 call    sub_402D64
.text:0000000000405A36                 jmp     loc_408B6B
.text:0000000000405A3B ; ---------------------------------------------------------------------------
.text:0000000000405A3B
.text:0000000000405A3B loc_405A3B:                             ; CODE XREF: sub_405008+8DA↑j
.text:0000000000405A3B                 cmp     [rbp+var_4C], 0
.text:0000000000405A3F                 jnz     loc_4068D1
.text:0000000000405A45                 mov     [rbp+var_1A70], 0
.text:0000000000405A50                 mov     [rbp+var_1A68], 0
.text:0000000000405A5B                 mov     [rbp+var_1A60], 0
.text:0000000000405A66                 mov     [rbp+var_1A58], 0
.text:0000000000405A71                 lea     rax, unk_40B14A
.text:0000000000405A78                 mov     [rbp+var_160], rax
.text:0000000000405A7F                 mov     rax, 58E5C9EB90550891h
.text:0000000000405A89                 mov     [rbp+var_168], rax
.text:0000000000405A90                 mov     [rbp+var_16C], 3
.text:0000000000405A9A                 call    getMem
.text:0000000000405A9F                 mov     [rbp+var_178], rax
.text:0000000000405AA6                 mov     rax, [rbp+var_178]
.text:0000000000405AAD                 movzx   eax, byte ptr [rax]
.text:0000000000405AB0                 movzx   eax, al
.text:0000000000405AB3                 lea     ecx, [rax+3]
.text:0000000000405AB6                 mov     edx, 66666667h
.text:0000000000405ABB                 mov     eax, ecx
.text:0000000000405ABD                 imul    edx
.text:0000000000405ABF                 sar     edx, 2
.text:0000000000405AC2                 mov     eax, ecx
.text:0000000000405AC4                 sar     eax, 1Fh
.text:0000000000405AC7                 sub     edx, eax
.text:0000000000405AC9                 mov     eax, edx
.text:0000000000405ACB                 shl     eax, 2
.text:0000000000405ACE                 add     eax, edx
.text:0000000000405AD0                 add     eax, eax
.text:0000000000405AD2                 sub     ecx, eax
.text:0000000000405AD4                 mov     edx, ecx
.text:0000000000405AD6                 mov     rax, [rbp+var_178]
.text:0000000000405ADD                 mov     [rax], dl
.text:0000000000405ADF                 sub     [rbp+var_16C], 1
.text:0000000000405AE6
.text:0000000000405AE6 loc_405AE6:                             ; CODE XREF: sub_405008+B76↓j
.text:0000000000405AE6                 cmp     [rbp+var_16C], 0
.text:0000000000405AED                 js      loc_405B83
.text:0000000000405AF3                 mov     rdx, [rbp+var_168]
.text:0000000000405AFA                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000405B04                 imul    rax, rdx
.text:0000000000405B08                 add     rax, 1
.text:0000000000405B0C                 mov     [rbp+var_168], rax
.text:0000000000405B13                 mov     eax, [rbp+var_16C]
.text:0000000000405B19                 sar     eax, 2
.text:0000000000405B1C                 cdqe
.text:0000000000405B1E                 lea     rdx, ds:0[rax*4]
.text:0000000000405B26                 mov     rax, [rbp+var_160]
.text:0000000000405B2D                 add     rax, rdx
.text:0000000000405B30                 mov     edx, [rax]
.text:0000000000405B32                 mov     rax, [rbp+var_168]
.text:0000000000405B39                 shr     rax, 20h
.text:0000000000405B3D                 mov     esi, eax
.text:0000000000405B3F                 mov     rax, [rbp+var_178]
.text:0000000000405B46                 movzx   eax, byte ptr [rax]
.text:0000000000405B49                 movzx   eax, al
.text:0000000000405B4C                 mov     ecx, [rbp+var_16C]
.text:0000000000405B52                 mov     edi, ecx
.text:0000000000405B54                 sar     edi, 2
.text:0000000000405B57                 xor     esi, edx
.text:0000000000405B59                 mov     rcx, [rbp+var_178]
.text:0000000000405B60                 movsxd  rdi, edi
.text:0000000000405B63                 movsxd  rdx, eax
.text:0000000000405B66                 mov     rax, rdx
.text:0000000000405B69                 shl     rax, 3
.text:0000000000405B6D                 add     rax, rdx
.text:0000000000405B70                 add     rax, rdi
.text:0000000000405B73                 mov     [rcx+rax*4+4], esi
.text:0000000000405B77                 sub     [rbp+var_16C], 4
.text:0000000000405B7E                 jmp     loc_405AE6
.text:0000000000405B83 ; ---------------------------------------------------------------------------
.text:0000000000405B83
.text:0000000000405B83 loc_405B83:                             ; CODE XREF: sub_405008+AE5↑j
.text:0000000000405B83                 mov     rax, [rbp+var_178]
.text:0000000000405B8A                 movzx   eax, byte ptr [rax]
.text:0000000000405B8D                 movzx   eax, al
.text:0000000000405B90                 movsxd  rdx, eax
.text:0000000000405B93                 mov     rax, rdx
.text:0000000000405B96                 shl     rax, 3
.text:0000000000405B9A                 add     rax, rdx
.text:0000000000405B9D                 shl     rax, 2
.text:0000000000405BA1                 mov     rdx, [rbp+var_178]
.text:0000000000405BA8                 add     rax, rdx
.text:0000000000405BAB                 add     rax, 4
.text:0000000000405BAF                 mov     [rbp+var_1A70], rax
.text:0000000000405BB6                 lea     rax, unk_40B14F
.text:0000000000405BBD                 mov     [rbp+var_180], rax
.text:0000000000405BC4                 mov     rax, 1FF989F64A9BC6BDh
.text:0000000000405BCE                 mov     [rbp+var_188], rax
.text:0000000000405BD5                 mov     [rbp+var_18C], 3
.text:0000000000405BDF                 call    getMem
.text:0000000000405BE4                 mov     [rbp+var_198], rax
.text:0000000000405BEB                 mov     rax, [rbp+var_198]
.text:0000000000405BF2                 movzx   eax, byte ptr [rax]
.text:0000000000405BF5                 movzx   eax, al
.text:0000000000405BF8                 lea     ecx, [rax+3]
.text:0000000000405BFB                 mov     edx, 66666667h
.text:0000000000405C00                 mov     eax, ecx
.text:0000000000405C02                 imul    edx
.text:0000000000405C04                 sar     edx, 2
.text:0000000000405C07                 mov     eax, ecx
.text:0000000000405C09                 sar     eax, 1Fh
.text:0000000000405C0C                 sub     edx, eax
.text:0000000000405C0E                 mov     eax, edx
.text:0000000000405C10                 shl     eax, 2
.text:0000000000405C13                 add     eax, edx
.text:0000000000405C15                 add     eax, eax
.text:0000000000405C17                 sub     ecx, eax
.text:0000000000405C19                 mov     edx, ecx
.text:0000000000405C1B                 mov     rax, [rbp+var_198]
.text:0000000000405C22                 mov     [rax], dl
.text:0000000000405C24                 sub     [rbp+var_18C], 1
.text:0000000000405C2B
.text:0000000000405C2B loc_405C2B:                             ; CODE XREF: sub_405008+CBB↓j
.text:0000000000405C2B                 cmp     [rbp+var_18C], 0
.text:0000000000405C32                 js      loc_405CC8
.text:0000000000405C38                 mov     rdx, [rbp+var_188]
.text:0000000000405C3F                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000405C49                 imul    rax, rdx
.text:0000000000405C4D                 add     rax, 1
.text:0000000000405C51                 mov     [rbp+var_188], rax
.text:0000000000405C58                 mov     eax, [rbp+var_18C]
.text:0000000000405C5E                 sar     eax, 2
.text:0000000000405C61                 cdqe
.text:0000000000405C63                 lea     rdx, ds:0[rax*4]
.text:0000000000405C6B                 mov     rax, [rbp+var_180]
.text:0000000000405C72                 add     rax, rdx
.text:0000000000405C75                 mov     edx, [rax]
.text:0000000000405C77                 mov     rax, [rbp+var_188]
.text:0000000000405C7E                 shr     rax, 20h
.text:0000000000405C82                 mov     esi, eax
.text:0000000000405C84                 mov     rax, [rbp+var_198]
.text:0000000000405C8B                 movzx   eax, byte ptr [rax]
.text:0000000000405C8E                 movzx   eax, al
.text:0000000000405C91                 mov     ecx, [rbp+var_18C]
.text:0000000000405C97                 mov     edi, ecx
.text:0000000000405C99                 sar     edi, 2
.text:0000000000405C9C                 xor     esi, edx
.text:0000000000405C9E                 mov     rcx, [rbp+var_198]
.text:0000000000405CA5                 movsxd  rdi, edi
.text:0000000000405CA8                 movsxd  rdx, eax
.text:0000000000405CAB                 mov     rax, rdx
.text:0000000000405CAE                 shl     rax, 3
.text:0000000000405CB2                 add     rax, rdx
.text:0000000000405CB5                 add     rax, rdi
.text:0000000000405CB8                 mov     [rcx+rax*4+4], esi
.text:0000000000405CBC                 sub     [rbp+var_18C], 4
.text:0000000000405CC3                 jmp     loc_405C2B
.text:0000000000405CC8 ; ---------------------------------------------------------------------------
.text:0000000000405CC8
.text:0000000000405CC8 loc_405CC8:                             ; CODE XREF: sub_405008+C2A↑j
.text:0000000000405CC8                 mov     rax, [rbp+var_198]
.text:0000000000405CCF                 movzx   eax, byte ptr [rax]
.text:0000000000405CD2                 movzx   eax, al
.text:0000000000405CD5                 movsxd  rdx, eax
.text:0000000000405CD8                 mov     rax, rdx
.text:0000000000405CDB                 shl     rax, 3
.text:0000000000405CDF                 add     rax, rdx
.text:0000000000405CE2                 shl     rax, 2
.text:0000000000405CE6                 mov     rdx, [rbp+var_198]
.text:0000000000405CED                 add     rax, rdx
.text:0000000000405CF0                 add     rax, 4
.text:0000000000405CF4                 mov     [rbp+var_1A68], rax
.text:0000000000405CFB                 mov     rax, [rbp+var_48]
.text:0000000000405CFF                 mov     [rbp+var_1A60], rax
.text:0000000000405D06                 lea     rax, unk_40B069
.text:0000000000405D0D                 mov     [rbp+var_1A0], rax
.text:0000000000405D14                 mov     rax, 0FB78568FA475B304h
.text:0000000000405D1E                 mov     [rbp+var_1A8], rax
.text:0000000000405D25                 mov     [rbp+var_1AC], 7
.text:0000000000405D2F                 call    getMem
.text:0000000000405D34                 mov     [rbp+var_1B8], rax
.text:0000000000405D3B                 mov     rax, [rbp+var_1B8]
.text:0000000000405D42                 movzx   eax, byte ptr [rax]
.text:0000000000405D45                 movzx   eax, al
.text:0000000000405D48                 lea     ecx, [rax+3]
.text:0000000000405D4B                 mov     edx, 66666667h
.text:0000000000405D50                 mov     eax, ecx
.text:0000000000405D52                 imul    edx
.text:0000000000405D54                 sar     edx, 2
.text:0000000000405D57                 mov     eax, ecx
.text:0000000000405D59                 sar     eax, 1Fh
.text:0000000000405D5C                 sub     edx, eax
.text:0000000000405D5E                 mov     eax, edx
.text:0000000000405D60                 shl     eax, 2
.text:0000000000405D63                 add     eax, edx
.text:0000000000405D65                 add     eax, eax
.text:0000000000405D67                 sub     ecx, eax
.text:0000000000405D69                 mov     edx, ecx
.text:0000000000405D6B                 mov     rax, [rbp+var_1B8]
.text:0000000000405D72                 mov     [rax], dl
.text:0000000000405D74                 sub     [rbp+var_1AC], 1
.text:0000000000405D7B
.text:0000000000405D7B loc_405D7B:                             ; CODE XREF: sub_405008+E0B↓j
.text:0000000000405D7B                 cmp     [rbp+var_1AC], 0
.text:0000000000405D82                 js      loc_405E18
.text:0000000000405D88                 mov     rdx, [rbp+var_1A8]
.text:0000000000405D8F                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000405D99                 imul    rax, rdx
.text:0000000000405D9D                 add     rax, 1
.text:0000000000405DA1                 mov     [rbp+var_1A8], rax
.text:0000000000405DA8                 mov     eax, [rbp+var_1AC]
.text:0000000000405DAE                 sar     eax, 2
.text:0000000000405DB1                 cdqe
.text:0000000000405DB3                 lea     rdx, ds:0[rax*4]
.text:0000000000405DBB                 mov     rax, [rbp+var_1A0]
.text:0000000000405DC2                 add     rax, rdx
.text:0000000000405DC5                 mov     edx, [rax]
.text:0000000000405DC7                 mov     rax, [rbp+var_1A8]
.text:0000000000405DCE                 shr     rax, 20h
.text:0000000000405DD2                 mov     esi, eax
.text:0000000000405DD4                 mov     rax, [rbp+var_1B8]
.text:0000000000405DDB                 movzx   eax, byte ptr [rax]
.text:0000000000405DDE                 movzx   eax, al
.text:0000000000405DE1                 mov     ecx, [rbp+var_1AC]
.text:0000000000405DE7                 mov     edi, ecx
.text:0000000000405DE9                 sar     edi, 2
.text:0000000000405DEC                 xor     esi, edx
.text:0000000000405DEE                 mov     rcx, [rbp+var_1B8]
.text:0000000000405DF5                 movsxd  rdi, edi
.text:0000000000405DF8                 movsxd  rdx, eax
.text:0000000000405DFB                 mov     rax, rdx
.text:0000000000405DFE                 shl     rax, 3
.text:0000000000405E02                 add     rax, rdx
.text:0000000000405E05                 add     rax, rdi
.text:0000000000405E08                 mov     [rcx+rax*4+4], esi
.text:0000000000405E0C                 sub     [rbp+var_1AC], 4
.text:0000000000405E13                 jmp     loc_405D7B
.text:0000000000405E18 ; ---------------------------------------------------------------------------
.text:0000000000405E18
.text:0000000000405E18 loc_405E18:                             ; CODE XREF: sub_405008+D7A↑j
.text:0000000000405E18                 mov     rax, [rbp+var_1B8]
.text:0000000000405E1F                 movzx   eax, byte ptr [rax]
.text:0000000000405E22                 movzx   eax, al
.text:0000000000405E25                 movsxd  rdx, eax
.text:0000000000405E28                 mov     rax, rdx
.text:0000000000405E2B                 shl     rax, 3
.text:0000000000405E2F                 add     rax, rdx
.text:0000000000405E32                 shl     rax, 2
.text:0000000000405E36                 mov     rdx, [rbp+var_1B8]
.text:0000000000405E3D                 add     rax, rdx
.text:0000000000405E40                 lea     rdx, [rax+4]
.text:0000000000405E44                 mov     eax, [rbp+var_1A74]
.text:0000000000405E4A                 mov     rsi, rdx
.text:0000000000405E4D                 mov     edi, eax
.text:0000000000405E4F                 call    sub_402D64
.text:0000000000405E54                 lea     rax, unk_40B154
.text:0000000000405E5B                 mov     [rbp+var_1C0], rax
.text:0000000000405E62                 mov     rax, 6EC6D5A7BA6A5A8Eh
.text:0000000000405E6C                 mov     [rbp+var_1C8], rax
.text:0000000000405E73                 mov     [rbp+var_1CC], 5
.text:0000000000405E7D                 call    getMem
.text:0000000000405E82                 mov     [rbp+var_1D8], rax
.text:0000000000405E89                 mov     rax, [rbp+var_1D8]
.text:0000000000405E90                 movzx   eax, byte ptr [rax]
.text:0000000000405E93                 movzx   eax, al
.text:0000000000405E96                 lea     ecx, [rax+3]
.text:0000000000405E99                 mov     edx, 66666667h
.text:0000000000405E9E                 mov     eax, ecx
.text:0000000000405EA0                 imul    edx
.text:0000000000405EA2                 sar     edx, 2
.text:0000000000405EA5                 mov     eax, ecx
.text:0000000000405EA7                 sar     eax, 1Fh
.text:0000000000405EAA                 sub     edx, eax
.text:0000000000405EAC                 mov     eax, edx
.text:0000000000405EAE                 shl     eax, 2
.text:0000000000405EB1                 add     eax, edx
.text:0000000000405EB3                 add     eax, eax
.text:0000000000405EB5                 sub     ecx, eax
.text:0000000000405EB7                 mov     edx, ecx
.text:0000000000405EB9                 mov     rax, [rbp+var_1D8]
.text:0000000000405EC0                 mov     [rax], dl
.text:0000000000405EC2                 sub     [rbp+var_1CC], 1
.text:0000000000405EC9
.text:0000000000405EC9 loc_405EC9:                             ; CODE XREF: sub_405008+F59↓j
.text:0000000000405EC9                 cmp     [rbp+var_1CC], 0
.text:0000000000405ED0                 js      loc_405F66
.text:0000000000405ED6                 mov     rdx, [rbp+var_1C8]
.text:0000000000405EDD                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000405EE7                 imul    rax, rdx
.text:0000000000405EEB                 add     rax, 1
.text:0000000000405EEF                 mov     [rbp+var_1C8], rax
.text:0000000000405EF6                 mov     eax, [rbp+var_1CC]
.text:0000000000405EFC                 sar     eax, 2
.text:0000000000405EFF                 cdqe
.text:0000000000405F01                 lea     rdx, ds:0[rax*4]
.text:0000000000405F09                 mov     rax, [rbp+var_1C0]
.text:0000000000405F10                 add     rax, rdx
.text:0000000000405F13                 mov     edx, [rax]
.text:0000000000405F15                 mov     rax, [rbp+var_1C8]
.text:0000000000405F1C                 shr     rax, 20h
.text:0000000000405F20                 mov     esi, eax
.text:0000000000405F22                 mov     rax, [rbp+var_1D8]
.text:0000000000405F29                 movzx   eax, byte ptr [rax]
.text:0000000000405F2C                 movzx   eax, al
.text:0000000000405F2F                 mov     ecx, [rbp+var_1CC]
.text:0000000000405F35                 mov     edi, ecx
.text:0000000000405F37                 sar     edi, 2
.text:0000000000405F3A                 xor     esi, edx
.text:0000000000405F3C                 mov     rcx, [rbp+var_1D8]
.text:0000000000405F43                 movsxd  rdi, edi
.text:0000000000405F46                 movsxd  rdx, eax
.text:0000000000405F49                 mov     rax, rdx
.text:0000000000405F4C                 shl     rax, 3
.text:0000000000405F50                 add     rax, rdx
.text:0000000000405F53                 add     rax, rdi
.text:0000000000405F56                 mov     [rcx+rax*4+4], esi
.text:0000000000405F5A                 sub     [rbp+var_1CC], 4
.text:0000000000405F61                 jmp     loc_405EC9
.text:0000000000405F66 ; ---------------------------------------------------------------------------
.text:0000000000405F66
.text:0000000000405F66 loc_405F66:                             ; CODE XREF: sub_405008+EC8↑j
.text:0000000000405F66                 mov     rax, [rbp+var_1D8]
.text:0000000000405F6D                 movzx   eax, byte ptr [rax]
.text:0000000000405F70                 movzx   eax, al
.text:0000000000405F73                 movsxd  rdx, eax
.text:0000000000405F76                 mov     rax, rdx
.text:0000000000405F79                 shl     rax, 3
.text:0000000000405F7D                 add     rax, rdx
.text:0000000000405F80                 shl     rax, 2
.text:0000000000405F84                 mov     rdx, [rbp+var_1D8]
.text:0000000000405F8B                 add     rax, rdx
.text:0000000000405F8E                 lea     rcx, [rax+4]
.text:0000000000405F92                 mov     eax, [rbp+var_1A74]
.text:0000000000405F98                 mov     edx, 0
.text:0000000000405F9D                 mov     esi, eax
.text:0000000000405F9F                 mov     rdi, rcx
.text:0000000000405FA2                 mov     eax, 0
.text:0000000000405FA7                 call    sub_40A07C
.text:0000000000405FAC                 lea     rax, unk_40B15D
.text:0000000000405FB3                 mov     [rbp+var_1E0], rax
.text:0000000000405FBA                 mov     rax, 0BA43C745C7C957EAh
.text:0000000000405FC4                 mov     [rbp+var_1E8], rax
.text:0000000000405FCB                 mov     [rbp+var_1EC], 5
.text:0000000000405FD5                 call    getMem
.text:0000000000405FDA                 mov     [rbp+var_1F8], rax
.text:0000000000405FE1                 mov     rax, [rbp+var_1F8]
.text:0000000000405FE8                 movzx   eax, byte ptr [rax]
.text:0000000000405FEB                 movzx   eax, al
.text:0000000000405FEE                 lea     ecx, [rax+3]
.text:0000000000405FF1                 mov     edx, 66666667h
.text:0000000000405FF6                 mov     eax, ecx
.text:0000000000405FF8                 imul    edx
.text:0000000000405FFA                 sar     edx, 2
.text:0000000000405FFD                 mov     eax, ecx
.text:0000000000405FFF                 sar     eax, 1Fh
.text:0000000000406002                 sub     edx, eax
.text:0000000000406004                 mov     eax, edx
.text:0000000000406006                 shl     eax, 2
.text:0000000000406009                 add     eax, edx
.text:000000000040600B                 add     eax, eax
.text:000000000040600D                 sub     ecx, eax
.text:000000000040600F                 mov     edx, ecx
.text:0000000000406011                 mov     rax, [rbp+var_1F8]
.text:0000000000406018                 mov     [rax], dl
.text:000000000040601A                 sub     [rbp+var_1EC], 1
.text:0000000000406021
.text:0000000000406021 loc_406021:                             ; CODE XREF: sub_405008+10B1↓j
.text:0000000000406021                 cmp     [rbp+var_1EC], 0
.text:0000000000406028                 js      loc_4060BE
.text:000000000040602E                 mov     rdx, [rbp+var_1E8]
.text:0000000000406035                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040603F                 imul    rax, rdx
.text:0000000000406043                 add     rax, 1
.text:0000000000406047                 mov     [rbp+var_1E8], rax
.text:000000000040604E                 mov     eax, [rbp+var_1EC]
.text:0000000000406054                 sar     eax, 2
.text:0000000000406057                 cdqe
.text:0000000000406059                 lea     rdx, ds:0[rax*4]
.text:0000000000406061                 mov     rax, [rbp+var_1E0]
.text:0000000000406068                 add     rax, rdx
.text:000000000040606B                 mov     edx, [rax]
.text:000000000040606D                 mov     rax, [rbp+var_1E8]
.text:0000000000406074                 shr     rax, 20h
.text:0000000000406078                 mov     esi, eax
.text:000000000040607A                 mov     rax, [rbp+var_1F8]
.text:0000000000406081                 movzx   eax, byte ptr [rax]
.text:0000000000406084                 movzx   eax, al
.text:0000000000406087                 mov     ecx, [rbp+var_1EC]
.text:000000000040608D                 mov     edi, ecx
.text:000000000040608F                 sar     edi, 2
.text:0000000000406092                 xor     esi, edx
.text:0000000000406094                 mov     rcx, [rbp+var_1F8]
.text:000000000040609B                 movsxd  rdi, edi
.text:000000000040609E                 movsxd  rdx, eax
.text:00000000004060A1                 mov     rax, rdx
.text:00000000004060A4                 shl     rax, 3
.text:00000000004060A8                 add     rax, rdx
.text:00000000004060AB                 add     rax, rdi
.text:00000000004060AE                 mov     [rcx+rax*4+4], esi
.text:00000000004060B2                 sub     [rbp+var_1EC], 4
.text:00000000004060B9                 jmp     loc_406021
.text:00000000004060BE ; ---------------------------------------------------------------------------
.text:00000000004060BE
.text:00000000004060BE loc_4060BE:                             ; CODE XREF: sub_405008+1020↑j
.text:00000000004060BE                 mov     rax, [rbp+var_1F8]
.text:00000000004060C5                 movzx   eax, byte ptr [rax]
.text:00000000004060C8                 movzx   eax, al
.text:00000000004060CB                 movsxd  rdx, eax
.text:00000000004060CE                 mov     rax, rdx
.text:00000000004060D1                 shl     rax, 3
.text:00000000004060D5                 add     rax, rdx
.text:00000000004060D8                 shl     rax, 2
.text:00000000004060DC                 mov     rdx, [rbp+var_1F8]
.text:00000000004060E3                 add     rax, rdx
.text:00000000004060E6                 lea     rcx, [rax+4]
.text:00000000004060EA                 mov     eax, [rbp+var_1A74]
.text:00000000004060F0                 mov     edx, 1
.text:00000000004060F5                 mov     esi, eax
.text:00000000004060F7                 mov     rdi, rcx
.text:00000000004060FA                 mov     eax, 0
.text:00000000004060FF                 call    sub_40A07C
.text:0000000000406104                 lea     rax, unk_40B166
.text:000000000040610B                 mov     [rbp+var_200], rax
.text:0000000000406112                 mov     rax, 0E4227CF526A6A094h
.text:000000000040611C                 mov     [rbp+var_208], rax
.text:0000000000406123                 mov     [rbp+var_20C], 5
.text:000000000040612D                 call    getMem
.text:0000000000406132                 mov     [rbp+var_218], rax
.text:0000000000406139                 mov     rax, [rbp+var_218]
.text:0000000000406140                 movzx   eax, byte ptr [rax]
.text:0000000000406143                 movzx   eax, al
.text:0000000000406146                 lea     ecx, [rax+3]
.text:0000000000406149                 mov     edx, 66666667h
.text:000000000040614E                 mov     eax, ecx
.text:0000000000406150                 imul    edx
.text:0000000000406152                 sar     edx, 2
.text:0000000000406155                 mov     eax, ecx
.text:0000000000406157                 sar     eax, 1Fh
.text:000000000040615A                 sub     edx, eax
.text:000000000040615C                 mov     eax, edx
.text:000000000040615E                 shl     eax, 2
.text:0000000000406161                 add     eax, edx
.text:0000000000406163                 add     eax, eax
.text:0000000000406165                 sub     ecx, eax
.text:0000000000406167                 mov     edx, ecx
.text:0000000000406169                 mov     rax, [rbp+var_218]
.text:0000000000406170                 mov     [rax], dl
.text:0000000000406172                 sub     [rbp+var_20C], 1
.text:0000000000406179
.text:0000000000406179 loc_406179:                             ; CODE XREF: sub_405008+1209↓j
.text:0000000000406179                 cmp     [rbp+var_20C], 0
.text:0000000000406180                 js      loc_406216
.text:0000000000406186                 mov     rdx, [rbp+var_208]
.text:000000000040618D                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000406197                 imul    rax, rdx
.text:000000000040619B                 add     rax, 1
.text:000000000040619F                 mov     [rbp+var_208], rax
.text:00000000004061A6                 mov     eax, [rbp+var_20C]
.text:00000000004061AC                 sar     eax, 2
.text:00000000004061AF                 cdqe
.text:00000000004061B1                 lea     rdx, ds:0[rax*4]
.text:00000000004061B9                 mov     rax, [rbp+var_200]
.text:00000000004061C0                 add     rax, rdx
.text:00000000004061C3                 mov     edx, [rax]
.text:00000000004061C5                 mov     rax, [rbp+var_208]
.text:00000000004061CC                 shr     rax, 20h
.text:00000000004061D0                 mov     esi, eax
.text:00000000004061D2                 mov     rax, [rbp+var_218]
.text:00000000004061D9                 movzx   eax, byte ptr [rax]
.text:00000000004061DC                 movzx   eax, al
.text:00000000004061DF                 mov     ecx, [rbp+var_20C]
.text:00000000004061E5                 mov     edi, ecx
.text:00000000004061E7                 sar     edi, 2
.text:00000000004061EA                 xor     esi, edx
.text:00000000004061EC                 mov     rcx, [rbp+var_218]
.text:00000000004061F3                 movsxd  rdi, edi
.text:00000000004061F6                 movsxd  rdx, eax
.text:00000000004061F9                 mov     rax, rdx
.text:00000000004061FC                 shl     rax, 3
.text:0000000000406200                 add     rax, rdx
.text:0000000000406203                 add     rax, rdi
.text:0000000000406206                 mov     [rcx+rax*4+4], esi
.text:000000000040620A                 sub     [rbp+var_20C], 4
.text:0000000000406211                 jmp     loc_406179
.text:0000000000406216 ; ---------------------------------------------------------------------------
.text:0000000000406216
.text:0000000000406216 loc_406216:                             ; CODE XREF: sub_405008+1178↑j
.text:0000000000406216                 mov     rax, [rbp+var_218]
.text:000000000040621D                 movzx   eax, byte ptr [rax]
.text:0000000000406220                 movzx   eax, al
.text:0000000000406223                 movsxd  rdx, eax
.text:0000000000406226                 mov     rax, rdx
.text:0000000000406229                 shl     rax, 3
.text:000000000040622D                 add     rax, rdx
.text:0000000000406230                 shl     rax, 2
.text:0000000000406234                 mov     rdx, [rbp+var_218]
.text:000000000040623B                 add     rax, rdx
.text:000000000040623E                 lea     rcx, [rax+4]
.text:0000000000406242                 mov     eax, [rbp+var_1A74]
.text:0000000000406248                 mov     edx, 2
.text:000000000040624D                 mov     esi, eax
.text:000000000040624F                 mov     rdi, rcx
.text:0000000000406252                 mov     eax, 0
.text:0000000000406257                 call    sub_40A07C
.text:000000000040625C                 lea     rax, unk_40B16F
.text:0000000000406263                 mov     [rbp+var_220], rax
.text:000000000040626A                 mov     rax, 2D13C085EBB768D4h
.text:0000000000406274                 mov     [rbp+var_228], rax
.text:000000000040627B                 mov     [rbp+var_22C], 3
.text:0000000000406285                 call    getMem
.text:000000000040628A                 mov     [rbp+var_238], rax
.text:0000000000406291                 mov     rax, [rbp+var_238]
.text:0000000000406298                 movzx   eax, byte ptr [rax]
.text:000000000040629B                 movzx   eax, al
.text:000000000040629E                 lea     ecx, [rax+3]
.text:00000000004062A1                 mov     edx, 66666667h
.text:00000000004062A6                 mov     eax, ecx
.text:00000000004062A8                 imul    edx
.text:00000000004062AA                 sar     edx, 2
.text:00000000004062AD                 mov     eax, ecx
.text:00000000004062AF                 sar     eax, 1Fh
.text:00000000004062B2                 sub     edx, eax
.text:00000000004062B4                 mov     eax, edx
.text:00000000004062B6                 shl     eax, 2
.text:00000000004062B9                 add     eax, edx
.text:00000000004062BB                 add     eax, eax
.text:00000000004062BD                 sub     ecx, eax
.text:00000000004062BF                 mov     edx, ecx
.text:00000000004062C1                 mov     rax, [rbp+var_238]
.text:00000000004062C8                 mov     [rax], dl
.text:00000000004062CA                 sub     [rbp+var_22C], 1
.text:00000000004062D1
.text:00000000004062D1 loc_4062D1:                             ; CODE XREF: sub_405008+1361↓j
.text:00000000004062D1                 cmp     [rbp+var_22C], 0
.text:00000000004062D8                 js      loc_40636E
.text:00000000004062DE                 mov     rdx, [rbp+var_228]
.text:00000000004062E5                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004062EF                 imul    rax, rdx
.text:00000000004062F3                 add     rax, 1
.text:00000000004062F7                 mov     [rbp+var_228], rax
.text:00000000004062FE                 mov     eax, [rbp+var_22C]
.text:0000000000406304                 sar     eax, 2
.text:0000000000406307                 cdqe
.text:0000000000406309                 lea     rdx, ds:0[rax*4]
.text:0000000000406311                 mov     rax, [rbp+var_220]
.text:0000000000406318                 add     rax, rdx
.text:000000000040631B                 mov     edx, [rax]
.text:000000000040631D                 mov     rax, [rbp+var_228]
.text:0000000000406324                 shr     rax, 20h
.text:0000000000406328                 mov     esi, eax
.text:000000000040632A                 mov     rax, [rbp+var_238]
.text:0000000000406331                 movzx   eax, byte ptr [rax]
.text:0000000000406334                 movzx   eax, al
.text:0000000000406337                 mov     ecx, [rbp+var_22C]
.text:000000000040633D                 mov     edi, ecx
.text:000000000040633F                 sar     edi, 2
.text:0000000000406342                 xor     esi, edx
.text:0000000000406344                 mov     rcx, [rbp+var_238]
.text:000000000040634B                 movsxd  rdi, edi
.text:000000000040634E                 movsxd  rdx, eax
.text:0000000000406351                 mov     rax, rdx
.text:0000000000406354                 shl     rax, 3
.text:0000000000406358                 add     rax, rdx
.text:000000000040635B                 add     rax, rdi
.text:000000000040635E                 mov     [rcx+rax*4+4], esi
.text:0000000000406362                 sub     [rbp+var_22C], 4
.text:0000000000406369                 jmp     loc_4062D1
.text:000000000040636E ; ---------------------------------------------------------------------------
.text:000000000040636E
.text:000000000040636E loc_40636E:                             ; CODE XREF: sub_405008+12D0↑j
.text:000000000040636E                 mov     rax, [rbp+var_238]
.text:0000000000406375                 movzx   eax, byte ptr [rax]
.text:0000000000406378                 movzx   eax, al
.text:000000000040637B                 movsxd  rdx, eax
.text:000000000040637E                 mov     rax, rdx
.text:0000000000406381                 shl     rax, 3
.text:0000000000406385                 add     rax, rdx
.text:0000000000406388                 shl     rax, 2
.text:000000000040638C                 mov     rdx, [rbp+var_238]
.text:0000000000406393                 add     rax, rdx
.text:0000000000406396                 lea     r13, [rax+4]
.text:000000000040639A                 lea     rax, unk_40B174
.text:00000000004063A1                 mov     [rbp+var_240], rax
.text:00000000004063A8                 mov     rax, 12D30B54B2E51348h
.text:00000000004063B2                 mov     [rbp+var_248], rax
.text:00000000004063B9                 mov     [rbp+var_24C], 3
.text:00000000004063C3                 call    getMem
.text:00000000004063C8                 mov     [rbp+var_258], rax
.text:00000000004063CF                 mov     rax, [rbp+var_258]
.text:00000000004063D6                 movzx   eax, byte ptr [rax]
.text:00000000004063D9                 movzx   eax, al
.text:00000000004063DC                 lea     ecx, [rax+3]
.text:00000000004063DF                 mov     edx, 66666667h
.text:00000000004063E4                 mov     eax, ecx
.text:00000000004063E6                 imul    edx
.text:00000000004063E8                 sar     edx, 2
.text:00000000004063EB                 mov     eax, ecx
.text:00000000004063ED                 sar     eax, 1Fh
.text:00000000004063F0                 sub     edx, eax
.text:00000000004063F2                 mov     eax, edx
.text:00000000004063F4                 shl     eax, 2
.text:00000000004063F7                 add     eax, edx
.text:00000000004063F9                 add     eax, eax
.text:00000000004063FB                 sub     ecx, eax
.text:00000000004063FD                 mov     edx, ecx
.text:00000000004063FF                 mov     rax, [rbp+var_258]
.text:0000000000406406                 mov     [rax], dl
.text:0000000000406408                 sub     [rbp+var_24C], 1
.text:000000000040640F
.text:000000000040640F loc_40640F:                             ; CODE XREF: sub_405008+149F↓j
.text:000000000040640F                 cmp     [rbp+var_24C], 0
.text:0000000000406416                 js      loc_4064AC
.text:000000000040641C                 mov     rdx, [rbp+var_248]
.text:0000000000406423                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040642D                 imul    rax, rdx
.text:0000000000406431                 add     rax, 1
.text:0000000000406435                 mov     [rbp+var_248], rax
.text:000000000040643C                 mov     eax, [rbp+var_24C]
.text:0000000000406442                 sar     eax, 2
.text:0000000000406445                 cdqe
.text:0000000000406447                 lea     rdx, ds:0[rax*4]
.text:000000000040644F                 mov     rax, [rbp+var_240]
.text:0000000000406456                 add     rax, rdx
.text:0000000000406459                 mov     edx, [rax]
.text:000000000040645B                 mov     rax, [rbp+var_248]
.text:0000000000406462                 shr     rax, 20h
.text:0000000000406466                 mov     esi, eax
.text:0000000000406468                 mov     rax, [rbp+var_258]
.text:000000000040646F                 movzx   eax, byte ptr [rax]
.text:0000000000406472                 movzx   eax, al
.text:0000000000406475                 mov     ecx, [rbp+var_24C]
.text:000000000040647B                 mov     edi, ecx
.text:000000000040647D                 sar     edi, 2
.text:0000000000406480                 xor     esi, edx
.text:0000000000406482                 mov     rcx, [rbp+var_258]
.text:0000000000406489                 movsxd  rdi, edi
.text:000000000040648C                 movsxd  rdx, eax
.text:000000000040648F                 mov     rax, rdx
.text:0000000000406492                 shl     rax, 3
.text:0000000000406496                 add     rax, rdx
.text:0000000000406499                 add     rax, rdi
.text:000000000040649C                 mov     [rcx+rax*4+4], esi
.text:00000000004064A0                 sub     [rbp+var_24C], 4
.text:00000000004064A7                 jmp     loc_40640F
.text:00000000004064AC ; ---------------------------------------------------------------------------
.text:00000000004064AC
.text:00000000004064AC loc_4064AC:                             ; CODE XREF: sub_405008+140E↑j
.text:00000000004064AC                 mov     rax, [rbp+var_258]
.text:00000000004064B3                 movzx   eax, byte ptr [rax]
.text:00000000004064B6                 movzx   eax, al
.text:00000000004064B9                 movsxd  rdx, eax
.text:00000000004064BC                 mov     rax, rdx
.text:00000000004064BF                 shl     rax, 3
.text:00000000004064C3                 add     rax, rdx
.text:00000000004064C6                 shl     rax, 2
.text:00000000004064CA                 mov     rdx, [rbp+var_258]
.text:00000000004064D1                 add     rax, rdx
.text:00000000004064D4                 lea     r12, [rax+4]
.text:00000000004064D8                 lea     rax, unk_40B179
.text:00000000004064DF                 mov     [rbp+var_260], rax
.text:00000000004064E6                 mov     rax, 14FD7BFC21B17C49h
.text:00000000004064F0                 mov     [rbp+var_268], rax
.text:00000000004064F7                 mov     [rbp+var_26C], 8
.text:0000000000406501                 call    getMem
.text:0000000000406506                 mov     [rbp+var_278], rax
.text:000000000040650D                 mov     rax, [rbp+var_278]
.text:0000000000406514                 movzx   eax, byte ptr [rax]
.text:0000000000406517                 movzx   eax, al
.text:000000000040651A                 lea     ecx, [rax+3]
.text:000000000040651D                 mov     edx, 66666667h
.text:0000000000406522                 mov     eax, ecx
.text:0000000000406524                 imul    edx
.text:0000000000406526                 sar     edx, 2
.text:0000000000406529                 mov     eax, ecx
.text:000000000040652B                 sar     eax, 1Fh
.text:000000000040652E                 sub     edx, eax
.text:0000000000406530                 mov     eax, edx
.text:0000000000406532                 shl     eax, 2
.text:0000000000406535                 add     eax, edx
.text:0000000000406537                 add     eax, eax
.text:0000000000406539                 sub     ecx, eax
.text:000000000040653B                 mov     edx, ecx
.text:000000000040653D                 mov     rax, [rbp+var_278]
.text:0000000000406544                 mov     [rax], dl
.text:0000000000406546                 sub     [rbp+var_26C], 1
.text:000000000040654D
.text:000000000040654D loc_40654D:                             ; CODE XREF: sub_405008+15DD↓j
.text:000000000040654D                 cmp     [rbp+var_26C], 0
.text:0000000000406554                 js      loc_4065EA
.text:000000000040655A                 mov     rdx, [rbp+var_268]
.text:0000000000406561                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040656B                 imul    rax, rdx
.text:000000000040656F                 add     rax, 1
.text:0000000000406573                 mov     [rbp+var_268], rax
.text:000000000040657A                 mov     eax, [rbp+var_26C]
.text:0000000000406580                 sar     eax, 2
.text:0000000000406583                 cdqe
.text:0000000000406585                 lea     rdx, ds:0[rax*4]
.text:000000000040658D                 mov     rax, [rbp+var_260]
.text:0000000000406594                 add     rax, rdx
.text:0000000000406597                 mov     edx, [rax]
.text:0000000000406599                 mov     rax, [rbp+var_268]
.text:00000000004065A0                 shr     rax, 20h
.text:00000000004065A4                 mov     esi, eax
.text:00000000004065A6                 mov     rax, [rbp+var_278]
.text:00000000004065AD                 movzx   eax, byte ptr [rax]
.text:00000000004065B0                 movzx   eax, al
.text:00000000004065B3                 mov     ecx, [rbp+var_26C]
.text:00000000004065B9                 mov     edi, ecx
.text:00000000004065BB                 sar     edi, 2
.text:00000000004065BE                 xor     esi, edx
.text:00000000004065C0                 mov     rcx, [rbp+var_278]
.text:00000000004065C7                 movsxd  rdi, edi
.text:00000000004065CA                 movsxd  rdx, eax
.text:00000000004065CD                 mov     rax, rdx
.text:00000000004065D0                 shl     rax, 3
.text:00000000004065D4                 add     rax, rdx
.text:00000000004065D7                 add     rax, rdi
.text:00000000004065DA                 mov     [rcx+rax*4+4], esi
.text:00000000004065DE                 sub     [rbp+var_26C], 4
.text:00000000004065E5                 jmp     loc_40654D
.text:00000000004065EA ; ---------------------------------------------------------------------------
.text:00000000004065EA
.text:00000000004065EA loc_4065EA:                             ; CODE XREF: sub_405008+154C↑j
.text:00000000004065EA                 mov     rax, [rbp+var_278]
.text:00000000004065F1                 movzx   eax, byte ptr [rax]
.text:00000000004065F4                 movzx   eax, al
.text:00000000004065F7                 movsxd  rdx, eax
.text:00000000004065FA                 mov     rax, rdx
.text:00000000004065FD                 shl     rax, 3
.text:0000000000406601                 add     rax, rdx
.text:0000000000406604                 shl     rax, 2
.text:0000000000406608                 mov     rdx, [rbp+var_278]
.text:000000000040660F                 add     rax, rdx
.text:0000000000406612                 lea     rbx, [rax+4]
.text:0000000000406616                 lea     rax, unk_40B182
.text:000000000040661D                 mov     [rbp+var_280], rax
.text:0000000000406624                 mov     rax, 5EB01D86012C5E82h
.text:000000000040662E                 mov     [rbp+var_288], rax
.text:0000000000406635                 mov     [rbp+var_28C], 6
.text:000000000040663F                 call    getMem
.text:0000000000406644                 mov     [rbp+var_298], rax
.text:000000000040664B                 mov     rax, [rbp+var_298]
.text:0000000000406652                 movzx   eax, byte ptr [rax]
.text:0000000000406655                 movzx   eax, al
.text:0000000000406658                 lea     ecx, [rax+3]
.text:000000000040665B                 mov     edx, 66666667h
.text:0000000000406660                 mov     eax, ecx
.text:0000000000406662                 imul    edx
.text:0000000000406664                 sar     edx, 2
.text:0000000000406667                 mov     eax, ecx
.text:0000000000406669                 sar     eax, 1Fh
.text:000000000040666C                 sub     edx, eax
.text:000000000040666E                 mov     eax, edx
.text:0000000000406670                 shl     eax, 2
.text:0000000000406673                 add     eax, edx
.text:0000000000406675                 add     eax, eax
.text:0000000000406677                 sub     ecx, eax
.text:0000000000406679                 mov     edx, ecx
.text:000000000040667B                 mov     rax, [rbp+var_298]
.text:0000000000406682                 mov     [rax], dl
.text:0000000000406684                 sub     [rbp+var_28C], 1
.text:000000000040668B
.text:000000000040668B loc_40668B:                             ; CODE XREF: sub_405008+171B↓j
.text:000000000040668B                 cmp     [rbp+var_28C], 0
.text:0000000000406692                 js      loc_406728
.text:0000000000406698                 mov     rdx, [rbp+var_288]
.text:000000000040669F                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004066A9                 imul    rax, rdx
.text:00000000004066AD                 add     rax, 1
.text:00000000004066B1                 mov     [rbp+var_288], rax
.text:00000000004066B8                 mov     eax, [rbp+var_28C]
.text:00000000004066BE                 sar     eax, 2
.text:00000000004066C1                 cdqe
.text:00000000004066C3                 lea     rdx, ds:0[rax*4]
.text:00000000004066CB                 mov     rax, [rbp+var_280]
.text:00000000004066D2                 add     rax, rdx
.text:00000000004066D5                 mov     edx, [rax]
.text:00000000004066D7                 mov     rax, [rbp+var_288]
.text:00000000004066DE                 shr     rax, 20h
.text:00000000004066E2                 mov     esi, eax
.text:00000000004066E4                 mov     rax, [rbp+var_298]
.text:00000000004066EB                 movzx   eax, byte ptr [rax]
.text:00000000004066EE                 movzx   eax, al
.text:00000000004066F1                 mov     ecx, [rbp+var_28C]
.text:00000000004066F7                 mov     edi, ecx
.text:00000000004066F9                 sar     edi, 2
.text:00000000004066FC                 xor     esi, edx
.text:00000000004066FE                 mov     rcx, [rbp+var_298]
.text:0000000000406705                 movsxd  rdi, edi
.text:0000000000406708                 movsxd  rdx, eax
.text:000000000040670B                 mov     rax, rdx
.text:000000000040670E                 shl     rax, 3
.text:0000000000406712                 add     rax, rdx
.text:0000000000406715                 add     rax, rdi
.text:0000000000406718                 mov     [rcx+rax*4+4], esi
.text:000000000040671C                 sub     [rbp+var_28C], 4
.text:0000000000406723                 jmp     loc_40668B
.text:0000000000406728 ; ---------------------------------------------------------------------------
.text:0000000000406728
.text:0000000000406728 loc_406728:                             ; CODE XREF: sub_405008+168A↑j
.text:0000000000406728                 mov     rax, [rbp+var_298]
.text:000000000040672F                 movzx   eax, byte ptr [rax]
.text:0000000000406732                 movzx   eax, al
.text:0000000000406735                 movsxd  rdx, eax
.text:0000000000406738                 mov     rax, rdx
.text:000000000040673B                 shl     rax, 3
.text:000000000040673F                 add     rax, rdx
.text:0000000000406742                 shl     rax, 2
.text:0000000000406746                 mov     rdx, [rbp+var_298]
.text:000000000040674D                 add     rax, rdx
.text:0000000000406750                 add     rax, 4
.text:0000000000406754                 mov     rdx, [rbp+var_48]
.text:0000000000406758                 mov     r9d, 0
.text:000000000040675E                 mov     r8, rdx
.text:0000000000406761                 mov     rcx, r13
.text:0000000000406764                 mov     rdx, r12
.text:0000000000406767                 mov     rsi, rbx
.text:000000000040676A                 mov     rdi, rax
.text:000000000040676D                 mov     eax, 0
.text:0000000000406772                 call    sub_40A07C
.text:0000000000406777                 lea     rax, unk_40B18B
.text:000000000040677E                 mov     [rbp+var_2A0], rax
.text:0000000000406785                 mov     rax, 0FCCE30B04A429D6Ch
.text:000000000040678F                 mov     [rbp+var_2A8], rax
.text:0000000000406796                 mov     [rbp+var_2AC], 8
.text:00000000004067A0                 call    getMem
.text:00000000004067A5                 mov     [rbp+var_2B8], rax
.text:00000000004067AC                 mov     rax, [rbp+var_2B8]
.text:00000000004067B3                 movzx   eax, byte ptr [rax]
.text:00000000004067B6                 movzx   eax, al
.text:00000000004067B9                 lea     ecx, [rax+3]
.text:00000000004067BC                 mov     edx, 66666667h
.text:00000000004067C1                 mov     eax, ecx
.text:00000000004067C3                 imul    edx
.text:00000000004067C5                 sar     edx, 2
.text:00000000004067C8                 mov     eax, ecx
.text:00000000004067CA                 sar     eax, 1Fh
.text:00000000004067CD                 sub     edx, eax
.text:00000000004067CF                 mov     eax, edx
.text:00000000004067D1                 shl     eax, 2
.text:00000000004067D4                 add     eax, edx
.text:00000000004067D6                 add     eax, eax
.text:00000000004067D8                 sub     ecx, eax
.text:00000000004067DA                 mov     edx, ecx
.text:00000000004067DC                 mov     rax, [rbp+var_2B8]
.text:00000000004067E3                 mov     [rax], dl
.text:00000000004067E5                 sub     [rbp+var_2AC], 1
.text:00000000004067EC
.text:00000000004067EC loc_4067EC:                             ; CODE XREF: sub_405008+187C↓j
.text:00000000004067EC                 cmp     [rbp+var_2AC], 0
.text:00000000004067F3                 js      loc_406889
.text:00000000004067F9                 mov     rdx, [rbp+var_2A8]
.text:0000000000406800                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040680A                 imul    rax, rdx
.text:000000000040680E                 add     rax, 1
.text:0000000000406812                 mov     [rbp+var_2A8], rax
.text:0000000000406819                 mov     eax, [rbp+var_2AC]
.text:000000000040681F                 sar     eax, 2
.text:0000000000406822                 cdqe
.text:0000000000406824                 lea     rdx, ds:0[rax*4]
.text:000000000040682C                 mov     rax, [rbp+var_2A0]
.text:0000000000406833                 add     rax, rdx
.text:0000000000406836                 mov     edx, [rax]
.text:0000000000406838                 mov     rax, [rbp+var_2A8]
.text:000000000040683F                 shr     rax, 20h
.text:0000000000406843                 mov     esi, eax
.text:0000000000406845                 mov     rax, [rbp+var_2B8]
.text:000000000040684C                 movzx   eax, byte ptr [rax]
.text:000000000040684F                 movzx   eax, al
.text:0000000000406852                 mov     ecx, [rbp+var_2AC]
.text:0000000000406858                 mov     edi, ecx
.text:000000000040685A                 sar     edi, 2
.text:000000000040685D                 xor     esi, edx
.text:000000000040685F                 mov     rcx, [rbp+var_2B8]
.text:0000000000406866                 movsxd  rdi, edi
.text:0000000000406869                 movsxd  rdx, eax
.text:000000000040686C                 mov     rax, rdx
.text:000000000040686F                 shl     rax, 3
.text:0000000000406873                 add     rax, rdx
.text:0000000000406876                 add     rax, rdi
.text:0000000000406879                 mov     [rcx+rax*4+4], esi
.text:000000000040687D                 sub     [rbp+var_2AC], 4
.text:0000000000406884                 jmp     loc_4067EC
.text:0000000000406889 ; ---------------------------------------------------------------------------
.text:0000000000406889
.text:0000000000406889 loc_406889:                             ; CODE XREF: sub_405008+17EB↑j
.text:0000000000406889                 mov     rax, [rbp+var_2B8]
.text:0000000000406890                 movzx   eax, byte ptr [rax]
.text:0000000000406893                 movzx   eax, al
.text:0000000000406896                 movsxd  rdx, eax
.text:0000000000406899                 mov     rax, rdx
.text:000000000040689C                 shl     rax, 3
.text:00000000004068A0                 add     rax, rdx
.text:00000000004068A3                 shl     rax, 2
.text:00000000004068A7                 mov     rdx, [rbp+var_2B8]
.text:00000000004068AE                 add     rax, rdx
.text:00000000004068B1                 add     rax, 4
.text:00000000004068B5                 mov     edx, 1
.text:00000000004068BA                 mov     esi, 3Ch
.text:00000000004068BF                 mov     rdi, rax
.text:00000000004068C2                 mov     eax, 0
.text:00000000004068C7                 call    sub_40A07C
.text:00000000004068CC                 jmp     loc_408B6B
.text:00000000004068D1 ; ---------------------------------------------------------------------------
.text:00000000004068D1
.text:00000000004068D1 loc_4068D1:                             ; CODE XREF: sub_405008+A37↑j
.text:00000000004068D1                                         ; sub_405008+1B8B↓j
.text:00000000004068D1                 lea     rax, unk_40B194
.text:00000000004068D8                 mov     [rbp+var_2C0], rax
.text:00000000004068DF                 mov     rax, 0A22DC4E11579169Eh
.text:00000000004068E9                 mov     [rbp+var_2C8], rax
.text:00000000004068F0                 mov     [rbp+var_2CC], 8
.text:00000000004068FA                 call    getMem
.text:00000000004068FF                 mov     [rbp+var_2D8], rax
.text:0000000000406906                 mov     rax, [rbp+var_2D8]
.text:000000000040690D                 movzx   eax, byte ptr [rax]
.text:0000000000406910                 movzx   eax, al
.text:0000000000406913                 lea     ecx, [rax+3]
.text:0000000000406916                 mov     edx, 66666667h
.text:000000000040691B                 mov     eax, ecx
.text:000000000040691D                 imul    edx
.text:000000000040691F                 sar     edx, 2
.text:0000000000406922                 mov     eax, ecx
.text:0000000000406924                 sar     eax, 1Fh
.text:0000000000406927                 sub     edx, eax
.text:0000000000406929                 mov     eax, edx
.text:000000000040692B                 shl     eax, 2
.text:000000000040692E                 add     eax, edx
.text:0000000000406930                 add     eax, eax
.text:0000000000406932                 sub     ecx, eax
.text:0000000000406934                 mov     edx, ecx
.text:0000000000406936                 mov     rax, [rbp+var_2D8]
.text:000000000040693D                 mov     [rax], dl
.text:000000000040693F                 sub     [rbp+var_2CC], 1
.text:0000000000406946
.text:0000000000406946 loc_406946:                             ; CODE XREF: sub_405008+19D6↓j
.text:0000000000406946                 cmp     [rbp+var_2CC], 0
.text:000000000040694D                 js      loc_4069E3
.text:0000000000406953                 mov     rdx, [rbp+var_2C8]
.text:000000000040695A                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000406964                 imul    rax, rdx
.text:0000000000406968                 add     rax, 1
.text:000000000040696C                 mov     [rbp+var_2C8], rax
.text:0000000000406973                 mov     eax, [rbp+var_2CC]
.text:0000000000406979                 sar     eax, 2
.text:000000000040697C                 cdqe
.text:000000000040697E                 lea     rdx, ds:0[rax*4]
.text:0000000000406986                 mov     rax, [rbp+var_2C0]
.text:000000000040698D                 add     rax, rdx
.text:0000000000406990                 mov     edx, [rax]
.text:0000000000406992                 mov     rax, [rbp+var_2C8]
.text:0000000000406999                 shr     rax, 20h
.text:000000000040699D                 mov     esi, eax
.text:000000000040699F                 mov     rax, [rbp+var_2D8]
.text:00000000004069A6                 movzx   eax, byte ptr [rax]
.text:00000000004069A9                 movzx   eax, al
.text:00000000004069AC                 mov     ecx, [rbp+var_2CC]
.text:00000000004069B2                 mov     edi, ecx
.text:00000000004069B4                 sar     edi, 2
.text:00000000004069B7                 xor     esi, edx
.text:00000000004069B9                 mov     rcx, [rbp+var_2D8]
.text:00000000004069C0                 movsxd  rdi, edi
.text:00000000004069C3                 movsxd  rdx, eax
.text:00000000004069C6                 mov     rax, rdx
.text:00000000004069C9                 shl     rax, 3
.text:00000000004069CD                 add     rax, rdx
.text:00000000004069D0                 add     rax, rdi
.text:00000000004069D3                 mov     [rcx+rax*4+4], esi
.text:00000000004069D7                 sub     [rbp+var_2CC], 4
.text:00000000004069DE                 jmp     loc_406946
.text:00000000004069E3 ; ---------------------------------------------------------------------------
.text:00000000004069E3
.text:00000000004069E3 loc_4069E3:                             ; CODE XREF: sub_405008+1945↑j
.text:00000000004069E3                 mov     rax, [rbp+var_2D8]
.text:00000000004069EA                 movzx   eax, byte ptr [rax]
.text:00000000004069ED                 movzx   eax, al
.text:00000000004069F0                 movsxd  rdx, eax
.text:00000000004069F3                 mov     rax, rdx
.text:00000000004069F6                 shl     rax, 3
.text:00000000004069FA                 add     rax, rdx
.text:00000000004069FD                 shl     rax, 2
.text:0000000000406A01                 mov     rdx, [rbp+var_2D8]
.text:0000000000406A08                 add     rax, rdx
.text:0000000000406A0B                 lea     rdi, [rax+4]
.text:0000000000406A0F                 mov     eax, [rbp+var_4C]
.text:0000000000406A12                 mov     ecx, 0
.text:0000000000406A17                 mov     edx, 0
.text:0000000000406A1C                 mov     esi, eax
.text:0000000000406A1E                 mov     eax, 0
.text:0000000000406A23                 call    sub_40A07C
.text:0000000000406A28                 cmp     eax, 0FFFFFFFFh
.text:0000000000406A2B                 jnz     loc_406B8A
.text:0000000000406A31                 lea     rax, unk_40B19D
.text:0000000000406A38                 mov     [rbp+var_2E0], rax
.text:0000000000406A3F                 mov     rax, 0A8A4B0642A6D1D5Bh
.text:0000000000406A49                 mov     [rbp+var_2E8], rax
.text:0000000000406A50                 mov     [rbp+var_2EC], 11h
.text:0000000000406A5A                 call    getMem
.text:0000000000406A5F                 mov     [rbp+var_2F8], rax
.text:0000000000406A66                 mov     rax, [rbp+var_2F8]
.text:0000000000406A6D                 movzx   eax, byte ptr [rax]
.text:0000000000406A70                 movzx   eax, al
.text:0000000000406A73                 lea     ecx, [rax+3]
.text:0000000000406A76                 mov     edx, 66666667h
.text:0000000000406A7B                 mov     eax, ecx
.text:0000000000406A7D                 imul    edx
.text:0000000000406A7F                 sar     edx, 2
.text:0000000000406A82                 mov     eax, ecx
.text:0000000000406A84                 sar     eax, 1Fh
.text:0000000000406A87                 sub     edx, eax
.text:0000000000406A89                 mov     eax, edx
.text:0000000000406A8B                 shl     eax, 2
.text:0000000000406A8E                 add     eax, edx
.text:0000000000406A90                 add     eax, eax
.text:0000000000406A92                 sub     ecx, eax
.text:0000000000406A94                 mov     edx, ecx
.text:0000000000406A96                 mov     rax, [rbp+var_2F8]
.text:0000000000406A9D                 mov     [rax], dl
.text:0000000000406A9F                 sub     [rbp+var_2EC], 1
.text:0000000000406AA6
.text:0000000000406AA6 loc_406AA6:                             ; CODE XREF: sub_405008+1B36↓j
.text:0000000000406AA6                 cmp     [rbp+var_2EC], 0
.text:0000000000406AAD                 js      loc_406B43
.text:0000000000406AB3                 mov     rdx, [rbp+var_2E8]
.text:0000000000406ABA                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000406AC4                 imul    rax, rdx
.text:0000000000406AC8                 add     rax, 1
.text:0000000000406ACC                 mov     [rbp+var_2E8], rax
.text:0000000000406AD3                 mov     eax, [rbp+var_2EC]
.text:0000000000406AD9                 sar     eax, 2
.text:0000000000406ADC                 cdqe
.text:0000000000406ADE                 lea     rdx, ds:0[rax*4]
.text:0000000000406AE6                 mov     rax, [rbp+var_2E0]
.text:0000000000406AED                 add     rax, rdx
.text:0000000000406AF0                 mov     edx, [rax]
.text:0000000000406AF2                 mov     rax, [rbp+var_2E8]
.text:0000000000406AF9                 shr     rax, 20h
.text:0000000000406AFD                 mov     esi, eax
.text:0000000000406AFF                 mov     rax, [rbp+var_2F8]
.text:0000000000406B06                 movzx   eax, byte ptr [rax]
.text:0000000000406B09                 movzx   eax, al
.text:0000000000406B0C                 mov     ecx, [rbp+var_2EC]
.text:0000000000406B12                 mov     edi, ecx
.text:0000000000406B14                 sar     edi, 2
.text:0000000000406B17                 xor     esi, edx
.text:0000000000406B19                 mov     rcx, [rbp+var_2F8]
.text:0000000000406B20                 movsxd  rdi, edi
.text:0000000000406B23                 movsxd  rdx, eax
.text:0000000000406B26                 mov     rax, rdx
.text:0000000000406B29                 shl     rax, 3
.text:0000000000406B2D                 add     rax, rdx
.text:0000000000406B30                 add     rax, rdi
.text:0000000000406B33                 mov     [rcx+rax*4+4], esi
.text:0000000000406B37                 sub     [rbp+var_2EC], 4
.text:0000000000406B3E                 jmp     loc_406AA6
.text:0000000000406B43 ; ---------------------------------------------------------------------------
.text:0000000000406B43
.text:0000000000406B43 loc_406B43:                             ; CODE XREF: sub_405008+1AA5↑j
.text:0000000000406B43                 mov     rax, [rbp+var_2F8]
.text:0000000000406B4A                 movzx   eax, byte ptr [rax]
.text:0000000000406B4D                 movzx   eax, al
.text:0000000000406B50                 movsxd  rdx, eax
.text:0000000000406B53                 mov     rax, rdx
.text:0000000000406B56                 shl     rax, 3
.text:0000000000406B5A                 add     rax, rdx
.text:0000000000406B5D                 shl     rax, 2
.text:0000000000406B61                 mov     rdx, [rbp+var_2F8]
.text:0000000000406B68                 add     rax, rdx
.text:0000000000406B6B                 add     rax, 4
.text:0000000000406B6F                 mov     rdi, rax
.text:0000000000406B72                 mov     eax, 0
.text:0000000000406B77                 call    sub_40A07C
.text:0000000000406B7C                 mov     eax, [rax]
.text:0000000000406B7E                 cmp     eax, 0Ah
.text:0000000000406B81                 jz      short loc_406B8A
.text:0000000000406B83                 mov     eax, 1
.text:0000000000406B88                 jmp     short loc_406B8F
.text:0000000000406B8A ; ---------------------------------------------------------------------------
.text:0000000000406B8A
.text:0000000000406B8A loc_406B8A:                             ; CODE XREF: sub_405008+1A23↑j
.text:0000000000406B8A                                         ; sub_405008+1B79↑j
.text:0000000000406B8A                 mov     eax, 0
.text:0000000000406B8F
.text:0000000000406B8F loc_406B8F:                             ; CODE XREF: sub_405008+1B80↑j
.text:0000000000406B8F                 test    al, al
.text:0000000000406B91                 jz      short loc_406B98
.text:0000000000406B93                 jmp     loc_4068D1
.text:0000000000406B98 ; ---------------------------------------------------------------------------
.text:0000000000406B98
.text:0000000000406B98 loc_406B98:                             ; CODE XREF: sub_405008+1B89↑j
.text:0000000000406B98                 lea     rax, unk_40B1B2
.text:0000000000406B9F                 mov     [rbp+var_300], rax
.text:0000000000406BA6                 mov     rax, 7650B9A53BB58541h
.text:0000000000406BB0                 mov     [rbp+var_308], rax
.text:0000000000406BB7                 mov     [rbp+var_30C], 0Ch
.text:0000000000406BC1                 call    getMem
.text:0000000000406BC6                 mov     [rbp+var_318], rax
.text:0000000000406BCD                 mov     rax, [rbp+var_318]
.text:0000000000406BD4                 movzx   eax, byte ptr [rax]
.text:0000000000406BD7                 movzx   eax, al
.text:0000000000406BDA                 lea     ecx, [rax+3]
.text:0000000000406BDD                 mov     edx, 66666667h
.text:0000000000406BE2                 mov     eax, ecx
.text:0000000000406BE4                 imul    edx
.text:0000000000406BE6                 sar     edx, 2
.text:0000000000406BE9                 mov     eax, ecx
.text:0000000000406BEB                 sar     eax, 1Fh
.text:0000000000406BEE                 sub     edx, eax
.text:0000000000406BF0                 mov     eax, edx
.text:0000000000406BF2                 shl     eax, 2
.text:0000000000406BF5                 add     eax, edx
.text:0000000000406BF7                 add     eax, eax
.text:0000000000406BF9                 sub     ecx, eax
.text:0000000000406BFB                 mov     edx, ecx
.text:0000000000406BFD                 mov     rax, [rbp+var_318]
.text:0000000000406C04                 mov     [rax], dl
.text:0000000000406C06                 sub     [rbp+var_30C], 1
.text:0000000000406C0D
.text:0000000000406C0D loc_406C0D:                             ; CODE XREF: sub_405008+1C9D↓j
.text:0000000000406C0D                 cmp     [rbp+var_30C], 0
.text:0000000000406C14                 js      loc_406CAA
.text:0000000000406C1A                 mov     rdx, [rbp+var_308]
.text:0000000000406C21                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000406C2B                 imul    rax, rdx
.text:0000000000406C2F                 add     rax, 1
.text:0000000000406C33                 mov     [rbp+var_308], rax
.text:0000000000406C3A                 mov     eax, [rbp+var_30C]
.text:0000000000406C40                 sar     eax, 2
.text:0000000000406C43                 cdqe
.text:0000000000406C45                 lea     rdx, ds:0[rax*4]
.text:0000000000406C4D                 mov     rax, [rbp+var_300]
.text:0000000000406C54                 add     rax, rdx
.text:0000000000406C57                 mov     edx, [rax]
.text:0000000000406C59                 mov     rax, [rbp+var_308]
.text:0000000000406C60                 shr     rax, 20h
.text:0000000000406C64                 mov     esi, eax
.text:0000000000406C66                 mov     rax, [rbp+var_318]
.text:0000000000406C6D                 movzx   eax, byte ptr [rax]
.text:0000000000406C70                 movzx   eax, al
.text:0000000000406C73                 mov     ecx, [rbp+var_30C]
.text:0000000000406C79                 mov     edi, ecx
.text:0000000000406C7B                 sar     edi, 2
.text:0000000000406C7E                 xor     esi, edx
.text:0000000000406C80                 mov     rcx, [rbp+var_318]
.text:0000000000406C87                 movsxd  rdi, edi
.text:0000000000406C8A                 movsxd  rdx, eax
.text:0000000000406C8D                 mov     rax, rdx
.text:0000000000406C90                 shl     rax, 3
.text:0000000000406C94                 add     rax, rdx
.text:0000000000406C97                 add     rax, rdi
.text:0000000000406C9A                 mov     [rcx+rax*4+4], esi
.text:0000000000406C9E                 sub     [rbp+var_30C], 4
.text:0000000000406CA5                 jmp     loc_406C0D
.text:0000000000406CAA ; ---------------------------------------------------------------------------
.text:0000000000406CAA
.text:0000000000406CAA loc_406CAA:                             ; CODE XREF: sub_405008+1C0C↑j
.text:0000000000406CAA                 mov     rax, [rbp+var_318]
.text:0000000000406CB1                 movzx   eax, byte ptr [rax]
.text:0000000000406CB4                 movzx   eax, al
.text:0000000000406CB7                 movsxd  rdx, eax
.text:0000000000406CBA                 mov     rax, rdx
.text:0000000000406CBD                 shl     rax, 3
.text:0000000000406CC1                 add     rax, rdx
.text:0000000000406CC4                 shl     rax, 2
.text:0000000000406CC8                 mov     rdx, [rbp+var_318]
.text:0000000000406CCF                 add     rax, rdx
.text:0000000000406CD2                 lea     rdx, [rax+4]
.text:0000000000406CD6                 mov     eax, [rbp+var_1A74]
.text:0000000000406CDC                 mov     rsi, rdx
.text:0000000000406CDF                 mov     edi, eax
.text:0000000000406CE1                 call    sub_402D64
.text:0000000000406CE6                 jmp     loc_408B6B
.text:0000000000406CEB ; ---------------------------------------------------------------------------
.text:0000000000406CEB
.text:0000000000406CEB loc_406CEB:                             ; CODE XREF: sub_405008+366↑j
.text:0000000000406CEB                 lea     rax, unk_40B1BF
.text:0000000000406CF2                 mov     [rbp+var_320], rax
.text:0000000000406CF9                 mov     rax, 7E22C1E076AB4732h
.text:0000000000406D03                 mov     [rbp+var_328], rax
.text:0000000000406D0A                 mov     [rbp+var_32C], 3
.text:0000000000406D14                 call    getMem
.text:0000000000406D19                 mov     [rbp+var_338], rax
.text:0000000000406D20                 mov     rax, [rbp+var_338]
.text:0000000000406D27                 movzx   eax, byte ptr [rax]
.text:0000000000406D2A                 movzx   eax, al
.text:0000000000406D2D                 lea     ecx, [rax+3]
.text:0000000000406D30                 mov     edx, 66666667h
.text:0000000000406D35                 mov     eax, ecx
.text:0000000000406D37                 imul    edx
.text:0000000000406D39                 sar     edx, 2
.text:0000000000406D3C                 mov     eax, ecx
.text:0000000000406D3E                 sar     eax, 1Fh
.text:0000000000406D41                 sub     edx, eax
.text:0000000000406D43                 mov     eax, edx
.text:0000000000406D45                 shl     eax, 2
.text:0000000000406D48                 add     eax, edx
.text:0000000000406D4A                 add     eax, eax
.text:0000000000406D4C                 sub     ecx, eax
.text:0000000000406D4E                 mov     edx, ecx
.text:0000000000406D50                 mov     rax, [rbp+var_338]
.text:0000000000406D57                 mov     [rax], dl
.text:0000000000406D59                 sub     [rbp+var_32C], 1
.text:0000000000406D60
.text:0000000000406D60 loc_406D60:                             ; CODE XREF: sub_405008+1DF0↓j
.text:0000000000406D60                 cmp     [rbp+var_32C], 0
.text:0000000000406D67                 js      loc_406DFD
.text:0000000000406D6D                 mov     rdx, [rbp+var_328]
.text:0000000000406D74                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000406D7E                 imul    rax, rdx
.text:0000000000406D82                 add     rax, 1
.text:0000000000406D86                 mov     [rbp+var_328], rax
.text:0000000000406D8D                 mov     eax, [rbp+var_32C]
.text:0000000000406D93                 sar     eax, 2
.text:0000000000406D96                 cdqe
.text:0000000000406D98                 lea     rdx, ds:0[rax*4]
.text:0000000000406DA0                 mov     rax, [rbp+var_320]
.text:0000000000406DA7                 add     rax, rdx
.text:0000000000406DAA                 mov     edx, [rax]
.text:0000000000406DAC                 mov     rax, [rbp+var_328]
.text:0000000000406DB3                 shr     rax, 20h
.text:0000000000406DB7                 mov     esi, eax
.text:0000000000406DB9                 mov     rax, [rbp+var_338]
.text:0000000000406DC0                 movzx   eax, byte ptr [rax]
.text:0000000000406DC3                 movzx   eax, al
.text:0000000000406DC6                 mov     ecx, [rbp+var_32C]
.text:0000000000406DCC                 mov     edi, ecx
.text:0000000000406DCE                 sar     edi, 2
.text:0000000000406DD1                 xor     esi, edx
.text:0000000000406DD3                 mov     rcx, [rbp+var_338]
.text:0000000000406DDA                 movsxd  rdi, edi
.text:0000000000406DDD                 movsxd  rdx, eax
.text:0000000000406DE0                 mov     rax, rdx
.text:0000000000406DE3                 shl     rax, 3
.text:0000000000406DE7                 add     rax, rdx
.text:0000000000406DEA                 add     rax, rdi
.text:0000000000406DED                 mov     [rcx+rax*4+4], esi
.text:0000000000406DF1                 sub     [rbp+var_32C], 4
.text:0000000000406DF8                 jmp     loc_406D60
.text:0000000000406DFD ; ---------------------------------------------------------------------------
.text:0000000000406DFD
.text:0000000000406DFD loc_406DFD:                             ; CODE XREF: sub_405008+1D5F↑j
.text:0000000000406DFD                 mov     rax, [rbp+var_338]
.text:0000000000406E04                 movzx   eax, byte ptr [rax]
.text:0000000000406E07                 movzx   eax, al
.text:0000000000406E0A                 movsxd  rdx, eax
.text:0000000000406E0D                 mov     rax, rdx
.text:0000000000406E10                 shl     rax, 3
.text:0000000000406E14                 add     rax, rdx
.text:0000000000406E17                 shl     rax, 2
.text:0000000000406E1B                 mov     rdx, [rbp+var_338]
.text:0000000000406E22                 add     rax, rdx
.text:0000000000406E25                 lea     rdx, [rax+4]
.text:0000000000406E29                 lea     rax, [rbp+var_A60]
.text:0000000000406E30                 mov     [rbp+var_340], rax
.text:0000000000406E37                 mov     [rbp+var_348], rdx
.text:0000000000406E3E                 mov     rax, [rbp+var_340]
.text:0000000000406E45                 mov     [rbp+var_350], rax
.text:0000000000406E4C                 mov     rax, [rbp+var_348]
.text:0000000000406E53                 mov     [rbp+var_358], rax
.text:0000000000406E5A
.text:0000000000406E5A loc_406E5A:                             ; CODE XREF: sub_405008+1E9E↓j
.text:0000000000406E5A                 mov     rax, [rbp+var_350]
.text:0000000000406E61                 lea     rdx, [rax+1]
.text:0000000000406E65                 mov     [rbp+var_350], rdx
.text:0000000000406E6C                 movzx   eax, byte ptr [rax]
.text:0000000000406E6F                 mov     [rbp+var_359], al
.text:0000000000406E75                 mov     rax, [rbp+var_358]
.text:0000000000406E7C                 lea     rdx, [rax+1]
.text:0000000000406E80                 mov     [rbp+var_358], rdx
.text:0000000000406E87                 movzx   eax, byte ptr [rax]
.text:0000000000406E8A                 mov     [rbp+var_35A], al
.text:0000000000406E90                 cmp     [rbp+var_359], 0
.text:0000000000406E97                 jz      short loc_406EA8
.text:0000000000406E99                 movzx   eax, [rbp+var_359]
.text:0000000000406EA0                 cmp     al, [rbp+var_35A]
.text:0000000000406EA6                 jz      short loc_406E5A
.text:0000000000406EA8
.text:0000000000406EA8 loc_406EA8:                             ; CODE XREF: sub_405008+1E8F↑j
.text:0000000000406EA8                 movzx   eax, [rbp+var_359]
.text:0000000000406EAF                 cmp     al, [rbp+var_35A]
.text:0000000000406EB5                 setz    al
.text:0000000000406EB8                 movzx   eax, al
.text:0000000000406EBB                 test    eax, eax
.text:0000000000406EBD                 setnz   al
.text:0000000000406EC0                 test    al, al
.text:0000000000406EC2                 jz      loc_407584
.text:0000000000406EC8                 lea     rax, unk_40B1BF
.text:0000000000406ECF                 mov     [rbp+var_368], rax
.text:0000000000406ED6                 mov     rax, 7E22C1E076AB4732h
.text:0000000000406EE0                 mov     [rbp+var_370], rax
.text:0000000000406EE7                 mov     [rbp+var_374], 3
.text:0000000000406EF1                 call    getMem
.text:0000000000406EF6                 mov     [rbp+var_380], rax
.text:0000000000406EFD                 mov     rax, [rbp+var_380]
.text:0000000000406F04                 movzx   eax, byte ptr [rax]
.text:0000000000406F07                 movzx   eax, al
.text:0000000000406F0A                 lea     ecx, [rax+3]
.text:0000000000406F0D                 mov     edx, 66666667h
.text:0000000000406F12                 mov     eax, ecx
.text:0000000000406F14                 imul    edx
.text:0000000000406F16                 sar     edx, 2
.text:0000000000406F19                 mov     eax, ecx
.text:0000000000406F1B                 sar     eax, 1Fh
.text:0000000000406F1E                 sub     edx, eax
.text:0000000000406F20                 mov     eax, edx
.text:0000000000406F22                 shl     eax, 2
.text:0000000000406F25                 add     eax, edx
.text:0000000000406F27                 add     eax, eax
.text:0000000000406F29                 sub     ecx, eax
.text:0000000000406F2B                 mov     edx, ecx
.text:0000000000406F2D                 mov     rax, [rbp+var_380]
.text:0000000000406F34                 mov     [rax], dl
.text:0000000000406F36                 sub     [rbp+var_374], 1
.text:0000000000406F3D
.text:0000000000406F3D loc_406F3D:                             ; CODE XREF: sub_405008+1FCD↓j
.text:0000000000406F3D                 cmp     [rbp+var_374], 0
.text:0000000000406F44                 js      loc_406FDA
.text:0000000000406F4A                 mov     rdx, [rbp+var_370]
.text:0000000000406F51                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000406F5B                 imul    rax, rdx
.text:0000000000406F5F                 add     rax, 1
.text:0000000000406F63                 mov     [rbp+var_370], rax
.text:0000000000406F6A                 mov     eax, [rbp+var_374]
.text:0000000000406F70                 sar     eax, 2
.text:0000000000406F73                 cdqe
.text:0000000000406F75                 lea     rdx, ds:0[rax*4]
.text:0000000000406F7D                 mov     rax, [rbp+var_368]
.text:0000000000406F84                 add     rax, rdx
.text:0000000000406F87                 mov     edx, [rax]
.text:0000000000406F89                 mov     rax, [rbp+var_370]
.text:0000000000406F90                 shr     rax, 20h
.text:0000000000406F94                 mov     esi, eax
.text:0000000000406F96                 mov     rax, [rbp+var_380]
.text:0000000000406F9D                 movzx   eax, byte ptr [rax]
.text:0000000000406FA0                 movzx   eax, al
.text:0000000000406FA3                 mov     ecx, [rbp+var_374]
.text:0000000000406FA9                 mov     edi, ecx
.text:0000000000406FAB                 sar     edi, 2
.text:0000000000406FAE                 xor     esi, edx
.text:0000000000406FB0                 mov     rcx, [rbp+var_380]
.text:0000000000406FB7                 movsxd  rdi, edi
.text:0000000000406FBA                 movsxd  rdx, eax
.text:0000000000406FBD                 mov     rax, rdx
.text:0000000000406FC0                 shl     rax, 3
.text:0000000000406FC4                 add     rax, rdx
.text:0000000000406FC7                 add     rax, rdi
.text:0000000000406FCA                 mov     [rcx+rax*4+4], esi
.text:0000000000406FCE                 sub     [rbp+var_374], 4
.text:0000000000406FD5                 jmp     loc_406F3D
.text:0000000000406FDA ; ---------------------------------------------------------------------------
.text:0000000000406FDA
.text:0000000000406FDA loc_406FDA:                             ; CODE XREF: sub_405008+1F3C↑j
.text:0000000000406FDA                 mov     rax, [rbp+var_380]
.text:0000000000406FE1                 movzx   eax, byte ptr [rax]
.text:0000000000406FE4                 movzx   eax, al
.text:0000000000406FE7                 movsxd  rdx, eax
.text:0000000000406FEA                 mov     rax, rdx
.text:0000000000406FED                 shl     rax, 3
.text:0000000000406FF1                 add     rax, rdx
.text:0000000000406FF4                 shl     rax, 2
.text:0000000000406FF8                 mov     rdx, [rbp+var_380]
.text:0000000000406FFF                 add     rax, rdx
.text:0000000000407002                 lea     rbx, [rax+4]
.text:0000000000407006                 lea     rax, unk_40B1C4
.text:000000000040700D                 mov     [rbp+var_388], rax
.text:0000000000407014                 mov     rax, 0BFAD97DAC2D28DFCh
.text:000000000040701E                 mov     [rbp+var_390], rax
.text:0000000000407025                 mov     [rbp+var_394], 7
.text:000000000040702F                 call    getMem
.text:0000000000407034                 mov     [rbp+var_3A0], rax
.text:000000000040703B                 mov     rax, [rbp+var_3A0]
.text:0000000000407042                 movzx   eax, byte ptr [rax]
.text:0000000000407045                 movzx   eax, al
.text:0000000000407048                 lea     ecx, [rax+3]
.text:000000000040704B                 mov     edx, 66666667h
.text:0000000000407050                 mov     eax, ecx
.text:0000000000407052                 imul    edx
.text:0000000000407054                 sar     edx, 2
.text:0000000000407057                 mov     eax, ecx
.text:0000000000407059                 sar     eax, 1Fh
.text:000000000040705C                 sub     edx, eax
.text:000000000040705E                 mov     eax, edx
.text:0000000000407060                 shl     eax, 2
.text:0000000000407063                 add     eax, edx
.text:0000000000407065                 add     eax, eax
.text:0000000000407067                 sub     ecx, eax
.text:0000000000407069                 mov     edx, ecx
.text:000000000040706B                 mov     rax, [rbp+var_3A0]
.text:0000000000407072                 mov     [rax], dl
.text:0000000000407074                 sub     [rbp+var_394], 1
.text:000000000040707B
.text:000000000040707B loc_40707B:                             ; CODE XREF: sub_405008+210B↓j
.text:000000000040707B                 cmp     [rbp+var_394], 0
.text:0000000000407082                 js      loc_407118
.text:0000000000407088                 mov     rdx, [rbp+var_390]
.text:000000000040708F                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407099                 imul    rax, rdx
.text:000000000040709D                 add     rax, 1
.text:00000000004070A1                 mov     [rbp+var_390], rax
.text:00000000004070A8                 mov     eax, [rbp+var_394]
.text:00000000004070AE                 sar     eax, 2
.text:00000000004070B1                 cdqe
.text:00000000004070B3                 lea     rdx, ds:0[rax*4]
.text:00000000004070BB                 mov     rax, [rbp+var_388]
.text:00000000004070C2                 add     rax, rdx
.text:00000000004070C5                 mov     edx, [rax]
.text:00000000004070C7                 mov     rax, [rbp+var_390]
.text:00000000004070CE                 shr     rax, 20h
.text:00000000004070D2                 mov     esi, eax
.text:00000000004070D4                 mov     rax, [rbp+var_3A0]
.text:00000000004070DB                 movzx   eax, byte ptr [rax]
.text:00000000004070DE                 movzx   eax, al
.text:00000000004070E1                 mov     ecx, [rbp+var_394]
.text:00000000004070E7                 mov     edi, ecx
.text:00000000004070E9                 sar     edi, 2
.text:00000000004070EC                 xor     esi, edx
.text:00000000004070EE                 mov     rcx, [rbp+var_3A0]
.text:00000000004070F5                 movsxd  rdi, edi
.text:00000000004070F8                 movsxd  rdx, eax
.text:00000000004070FB                 mov     rax, rdx
.text:00000000004070FE                 shl     rax, 3
.text:0000000000407102                 add     rax, rdx
.text:0000000000407105                 add     rax, rdi
.text:0000000000407108                 mov     [rcx+rax*4+4], esi
.text:000000000040710C                 sub     [rbp+var_394], 4
.text:0000000000407113                 jmp     loc_40707B
.text:0000000000407118 ; ---------------------------------------------------------------------------
.text:0000000000407118
.text:0000000000407118 loc_407118:                             ; CODE XREF: sub_405008+207A↑j
.text:0000000000407118                 mov     rax, [rbp+var_3A0]
.text:000000000040711F                 movzx   eax, byte ptr [rax]
.text:0000000000407122                 movzx   eax, al
.text:0000000000407125                 movsxd  rdx, eax
.text:0000000000407128                 mov     rax, rdx
.text:000000000040712B                 shl     rax, 3
.text:000000000040712F                 add     rax, rdx
.text:0000000000407132                 shl     rax, 2
.text:0000000000407136                 mov     rdx, [rbp+var_3A0]
.text:000000000040713D                 add     rax, rdx
.text:0000000000407140                 add     rax, 4
.text:0000000000407144                 mov     rsi, rbx
.text:0000000000407147                 mov     rdi, rax
.text:000000000040714A                 mov     eax, 0
.text:000000000040714F                 call    sub_40A07C
.text:0000000000407154                 add     eax, 1
.text:0000000000407157                 mov     [rbp+var_30], eax
.text:000000000040715A                 mov     eax, [rbp+var_30]
.text:000000000040715D                 cdqe
.text:000000000040715F                 lea     rdx, [rbp+var_A60]
.text:0000000000407166                 add     rax, rdx
.text:0000000000407169                 mov     [rbp+var_38], rax
.text:000000000040716D                 mov     eax, [rbp+var_30]
.text:0000000000407170                 add     eax, 1
.text:0000000000407173                 movsxd  rbx, eax
.text:0000000000407176                 lea     rax, unk_40B1CD
.text:000000000040717D                 mov     [rbp+var_3A8], rax
.text:0000000000407184                 mov     rax, 387595357C9B070Dh
.text:000000000040718E                 mov     [rbp+var_3B0], rax
.text:0000000000407195                 mov     [rbp+var_3B4], 7
.text:000000000040719F                 call    getMem
.text:00000000004071A4                 mov     [rbp+var_3C0], rax
.text:00000000004071AB                 mov     rax, [rbp+var_3C0]
.text:00000000004071B2                 movzx   eax, byte ptr [rax]
.text:00000000004071B5                 movzx   eax, al
.text:00000000004071B8                 lea     ecx, [rax+3]
.text:00000000004071BB                 mov     edx, 66666667h
.text:00000000004071C0                 mov     eax, ecx
.text:00000000004071C2                 imul    edx
.text:00000000004071C4                 sar     edx, 2
.text:00000000004071C7                 mov     eax, ecx
.text:00000000004071C9                 sar     eax, 1Fh
.text:00000000004071CC                 sub     edx, eax
.text:00000000004071CE                 mov     eax, edx
.text:00000000004071D0                 shl     eax, 2
.text:00000000004071D3                 add     eax, edx
.text:00000000004071D5                 add     eax, eax
.text:00000000004071D7                 sub     ecx, eax
.text:00000000004071D9                 mov     edx, ecx
.text:00000000004071DB                 mov     rax, [rbp+var_3C0]
.text:00000000004071E2                 mov     [rax], dl
.text:00000000004071E4                 sub     [rbp+var_3B4], 1
.text:00000000004071EB
.text:00000000004071EB loc_4071EB:                             ; CODE XREF: sub_405008+227B↓j
.text:00000000004071EB                 cmp     [rbp+var_3B4], 0
.text:00000000004071F2                 js      loc_407288
.text:00000000004071F8                 mov     rdx, [rbp+var_3B0]
.text:00000000004071FF                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407209                 imul    rax, rdx
.text:000000000040720D                 add     rax, 1
.text:0000000000407211                 mov     [rbp+var_3B0], rax
.text:0000000000407218                 mov     eax, [rbp+var_3B4]
.text:000000000040721E                 sar     eax, 2
.text:0000000000407221                 cdqe
.text:0000000000407223                 lea     rdx, ds:0[rax*4]
.text:000000000040722B                 mov     rax, [rbp+var_3A8]
.text:0000000000407232                 add     rax, rdx
.text:0000000000407235                 mov     edx, [rax]
.text:0000000000407237                 mov     rax, [rbp+var_3B0]
.text:000000000040723E                 shr     rax, 20h
.text:0000000000407242                 mov     esi, eax
.text:0000000000407244                 mov     rax, [rbp+var_3C0]
.text:000000000040724B                 movzx   eax, byte ptr [rax]
.text:000000000040724E                 movzx   eax, al
.text:0000000000407251                 mov     ecx, [rbp+var_3B4]
.text:0000000000407257                 mov     edi, ecx
.text:0000000000407259                 sar     edi, 2
.text:000000000040725C                 xor     esi, edx
.text:000000000040725E                 mov     rcx, [rbp+var_3C0]
.text:0000000000407265                 movsxd  rdi, edi
.text:0000000000407268                 movsxd  rdx, eax
.text:000000000040726B                 mov     rax, rdx
.text:000000000040726E                 shl     rax, 3
.text:0000000000407272                 add     rax, rdx
.text:0000000000407275                 add     rax, rdi
.text:0000000000407278                 mov     [rcx+rax*4+4], esi
.text:000000000040727C                 sub     [rbp+var_3B4], 4
.text:0000000000407283                 jmp     loc_4071EB
.text:0000000000407288 ; ---------------------------------------------------------------------------
.text:0000000000407288
.text:0000000000407288 loc_407288:                             ; CODE XREF: sub_405008+21EA↑j
.text:0000000000407288                 mov     rax, [rbp+var_3C0]
.text:000000000040728F                 movzx   eax, byte ptr [rax]
.text:0000000000407292                 movzx   eax, al
.text:0000000000407295                 movsxd  rdx, eax
.text:0000000000407298                 mov     rax, rdx
.text:000000000040729B                 shl     rax, 3
.text:000000000040729F                 add     rax, rdx
.text:00000000004072A2                 shl     rax, 2
.text:00000000004072A6                 mov     rdx, [rbp+var_3C0]
.text:00000000004072AD                 add     rax, rdx
.text:00000000004072B0                 lea     rdx, [rax+4]
.text:00000000004072B4                 lea     rax, [rbp+var_A60]
.text:00000000004072BB                 mov     rsi, rax
.text:00000000004072BE                 mov     rdi, rdx
.text:00000000004072C1                 mov     eax, 0
.text:00000000004072C6                 call    sub_40A07C
.text:00000000004072CB                 add     rax, rbx
.text:00000000004072CE                 cmp     rax, 3E8h
.text:00000000004072D4                 setnbe  al
.text:00000000004072D7                 test    al, al
.text:00000000004072D9                 jnz     loc_408B6A
.text:00000000004072DF                 lea     rax, unk_40B1D6
.text:00000000004072E6                 mov     [rbp+var_3C8], rax
.text:00000000004072ED                 mov     rax, 2C5D3EF903D85A97h
.text:00000000004072F7                 mov     [rbp+var_3D0], rax
.text:00000000004072FE                 mov     [rbp+var_3D4], 7
.text:0000000000407308                 call    getMem
.text:000000000040730D                 mov     [rbp+var_3E0], rax
.text:0000000000407314                 mov     rax, [rbp+var_3E0]
.text:000000000040731B                 movzx   eax, byte ptr [rax]
.text:000000000040731E                 movzx   eax, al
.text:0000000000407321                 lea     ecx, [rax+3]
.text:0000000000407324                 mov     edx, 66666667h
.text:0000000000407329                 mov     eax, ecx
.text:000000000040732B                 imul    edx
.text:000000000040732D                 sar     edx, 2
.text:0000000000407330                 mov     eax, ecx
.text:0000000000407332                 sar     eax, 1Fh
.text:0000000000407335                 sub     edx, eax
.text:0000000000407337                 mov     eax, edx
.text:0000000000407339                 shl     eax, 2
.text:000000000040733C                 add     eax, edx
.text:000000000040733E                 add     eax, eax
.text:0000000000407340                 sub     ecx, eax
.text:0000000000407342                 mov     edx, ecx
.text:0000000000407344                 mov     rax, [rbp+var_3E0]
.text:000000000040734B                 mov     [rax], dl
.text:000000000040734D                 sub     [rbp+var_3D4], 1
.text:0000000000407354
.text:0000000000407354 loc_407354:                             ; CODE XREF: sub_405008+23E4↓j
.text:0000000000407354                 cmp     [rbp+var_3D4], 0
.text:000000000040735B                 js      loc_4073F1
.text:0000000000407361                 mov     rdx, [rbp+var_3D0]
.text:0000000000407368                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407372                 imul    rax, rdx
.text:0000000000407376                 add     rax, 1
.text:000000000040737A                 mov     [rbp+var_3D0], rax
.text:0000000000407381                 mov     eax, [rbp+var_3D4]
.text:0000000000407387                 sar     eax, 2
.text:000000000040738A                 cdqe
.text:000000000040738C                 lea     rdx, ds:0[rax*4]
.text:0000000000407394                 mov     rax, [rbp+var_3C8]
.text:000000000040739B                 add     rax, rdx
.text:000000000040739E                 mov     edx, [rax]
.text:00000000004073A0                 mov     rax, [rbp+var_3D0]
.text:00000000004073A7                 shr     rax, 20h
.text:00000000004073AB                 mov     esi, eax
.text:00000000004073AD                 mov     rax, [rbp+var_3E0]
.text:00000000004073B4                 movzx   eax, byte ptr [rax]
.text:00000000004073B7                 movzx   eax, al
.text:00000000004073BA                 mov     ecx, [rbp+var_3D4]
.text:00000000004073C0                 mov     edi, ecx
.text:00000000004073C2                 sar     edi, 2
.text:00000000004073C5                 xor     esi, edx
.text:00000000004073C7                 mov     rcx, [rbp+var_3E0]
.text:00000000004073CE                 movsxd  rdi, edi
.text:00000000004073D1                 movsxd  rdx, eax
.text:00000000004073D4                 mov     rax, rdx
.text:00000000004073D7                 shl     rax, 3
.text:00000000004073DB                 add     rax, rdx
.text:00000000004073DE                 add     rax, rdi
.text:00000000004073E1                 mov     [rcx+rax*4+4], esi
.text:00000000004073E5                 sub     [rbp+var_3D4], 4
.text:00000000004073EC                 jmp     loc_407354
.text:00000000004073F1 ; ---------------------------------------------------------------------------
.text:00000000004073F1
.text:00000000004073F1 loc_4073F1:                             ; CODE XREF: sub_405008+2353↑j
.text:00000000004073F1                 mov     rax, [rbp+var_3E0]
.text:00000000004073F8                 movzx   eax, byte ptr [rax]
.text:00000000004073FB                 movzx   eax, al
.text:00000000004073FE                 movsxd  rdx, eax
.text:0000000000407401                 mov     rax, rdx
.text:0000000000407404                 shl     rax, 3
.text:0000000000407408                 add     rax, rdx
.text:000000000040740B                 shl     rax, 2
.text:000000000040740F                 mov     rdx, [rbp+var_3E0]
.text:0000000000407416                 add     rax, rdx
.text:0000000000407419                 lea     rdx, [rax+4]
.text:000000000040741D                 mov     rax, [rbp+var_38]
.text:0000000000407421                 mov     rsi, rax
.text:0000000000407424                 mov     rdi, rdx
.text:0000000000407427                 mov     eax, 0
.text:000000000040742C                 call    sub_40A07C
.text:0000000000407431                 lea     rax, unk_40B1DF
.text:0000000000407438                 mov     [rbp+var_3E8], rax
.text:000000000040743F                 mov     rax, 0FC0128A35868855Eh
.text:0000000000407449                 mov     [rbp+var_3F0], rax
.text:0000000000407450                 mov     [rbp+var_3F4], 3
.text:000000000040745A                 call    getMem
.text:000000000040745F                 mov     [rbp+var_400], rax
.text:0000000000407466                 mov     rax, [rbp+var_400]
.text:000000000040746D                 movzx   eax, byte ptr [rax]
.text:0000000000407470                 movzx   eax, al
.text:0000000000407473                 lea     ecx, [rax+3]
.text:0000000000407476                 mov     edx, 66666667h
.text:000000000040747B                 mov     eax, ecx
.text:000000000040747D                 imul    edx
.text:000000000040747F                 sar     edx, 2
.text:0000000000407482                 mov     eax, ecx
.text:0000000000407484                 sar     eax, 1Fh
.text:0000000000407487                 sub     edx, eax
.text:0000000000407489                 mov     eax, edx
.text:000000000040748B                 shl     eax, 2
.text:000000000040748E                 add     eax, edx
.text:0000000000407490                 add     eax, eax
.text:0000000000407492                 sub     ecx, eax
.text:0000000000407494                 mov     edx, ecx
.text:0000000000407496                 mov     rax, [rbp+var_400]
.text:000000000040749D                 mov     [rax], dl
.text:000000000040749F                 sub     [rbp+var_3F4], 1
.text:00000000004074A6
.text:00000000004074A6 loc_4074A6:                             ; CODE XREF: sub_405008+2536↓j
.text:00000000004074A6                 cmp     [rbp+var_3F4], 0
.text:00000000004074AD                 js      loc_407543
.text:00000000004074B3                 mov     rdx, [rbp+var_3F0]
.text:00000000004074BA                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004074C4                 imul    rax, rdx
.text:00000000004074C8                 add     rax, 1
.text:00000000004074CC                 mov     [rbp+var_3F0], rax
.text:00000000004074D3                 mov     eax, [rbp+var_3F4]
.text:00000000004074D9                 sar     eax, 2
.text:00000000004074DC                 cdqe
.text:00000000004074DE                 lea     rdx, ds:0[rax*4]
.text:00000000004074E6                 mov     rax, [rbp+var_3E8]
.text:00000000004074ED                 add     rax, rdx
.text:00000000004074F0                 mov     edx, [rax]
.text:00000000004074F2                 mov     rax, [rbp+var_3F0]
.text:00000000004074F9                 shr     rax, 20h
.text:00000000004074FD                 mov     esi, eax
.text:00000000004074FF                 mov     rax, [rbp+var_400]
.text:0000000000407506                 movzx   eax, byte ptr [rax]
.text:0000000000407509                 movzx   eax, al
.text:000000000040750C                 mov     ecx, [rbp+var_3F4]
.text:0000000000407512                 mov     edi, ecx
.text:0000000000407514                 sar     edi, 2
.text:0000000000407517                 xor     esi, edx
.text:0000000000407519                 mov     rcx, [rbp+var_400]
.text:0000000000407520                 movsxd  rdi, edi
.text:0000000000407523                 movsxd  rdx, eax
.text:0000000000407526                 mov     rax, rdx
.text:0000000000407529                 shl     rax, 3
.text:000000000040752D                 add     rax, rdx
.text:0000000000407530                 add     rax, rdi
.text:0000000000407533                 mov     [rcx+rax*4+4], esi
.text:0000000000407537                 sub     [rbp+var_3F4], 4
.text:000000000040753E                 jmp     loc_4074A6
.text:0000000000407543 ; ---------------------------------------------------------------------------
.text:0000000000407543
.text:0000000000407543 loc_407543:                             ; CODE XREF: sub_405008+24A5↑j
.text:0000000000407543                 mov     rax, [rbp+var_400]
.text:000000000040754A                 movzx   eax, byte ptr [rax]
.text:000000000040754D                 movzx   eax, al
.text:0000000000407550                 movsxd  rdx, eax
.text:0000000000407553                 mov     rax, rdx
.text:0000000000407556                 shl     rax, 3
.text:000000000040755A                 add     rax, rdx
.text:000000000040755D                 shl     rax, 2
.text:0000000000407561                 mov     rdx, [rbp+var_400]
.text:0000000000407568                 add     rax, rdx
.text:000000000040756B                 lea     rdx, [rax+4]
.text:000000000040756F                 mov     eax, [rbp+var_1A74]
.text:0000000000407575                 mov     rsi, rdx
.text:0000000000407578                 mov     edi, eax
.text:000000000040757A                 call    sub_402D64
.text:000000000040757F                 jmp     loc_408B6B
.text:0000000000407584 ; ---------------------------------------------------------------------------
.text:0000000000407584
.text:0000000000407584 loc_407584:                             ; CODE XREF: sub_405008+1EBA↑j
.text:0000000000407584                 lea     rax, unk_40B1E4
.text:000000000040758B                 mov     [rbp+var_408], rax
.text:0000000000407592                 mov     rax, 79DB400A318E7608h
.text:000000000040759C                 mov     [rbp+var_410], rax
.text:00000000004075A3                 mov     [rbp+var_414], 3
.text:00000000004075AD                 call    getMem
.text:00000000004075B2                 mov     [rbp+var_420], rax
.text:00000000004075B9                 mov     rax, [rbp+var_420]
.text:00000000004075C0                 movzx   eax, byte ptr [rax]
.text:00000000004075C3                 movzx   eax, al
.text:00000000004075C6                 lea     ecx, [rax+3]
.text:00000000004075C9                 mov     edx, 66666667h
.text:00000000004075CE                 mov     eax, ecx
.text:00000000004075D0                 imul    edx
.text:00000000004075D2                 sar     edx, 2
.text:00000000004075D5                 mov     eax, ecx
.text:00000000004075D7                 sar     eax, 1Fh
.text:00000000004075DA                 sub     edx, eax
.text:00000000004075DC                 mov     eax, edx
.text:00000000004075DE                 shl     eax, 2
.text:00000000004075E1                 add     eax, edx
.text:00000000004075E3                 add     eax, eax
.text:00000000004075E5                 sub     ecx, eax
.text:00000000004075E7                 mov     edx, ecx
.text:00000000004075E9                 mov     rax, [rbp+var_420]
.text:00000000004075F0                 mov     [rax], dl
.text:00000000004075F2                 sub     [rbp+var_414], 1
.text:00000000004075F9
.text:00000000004075F9 loc_4075F9:                             ; CODE XREF: sub_405008+2689↓j
.text:00000000004075F9                 cmp     [rbp+var_414], 0
.text:0000000000407600                 js      loc_407696
.text:0000000000407606                 mov     rdx, [rbp+var_410]
.text:000000000040760D                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407617                 imul    rax, rdx
.text:000000000040761B                 add     rax, 1
.text:000000000040761F                 mov     [rbp+var_410], rax
.text:0000000000407626                 mov     eax, [rbp+var_414]
.text:000000000040762C                 sar     eax, 2
.text:000000000040762F                 cdqe
.text:0000000000407631                 lea     rdx, ds:0[rax*4]
.text:0000000000407639                 mov     rax, [rbp+var_408]
.text:0000000000407640                 add     rax, rdx
.text:0000000000407643                 mov     edx, [rax]
.text:0000000000407645                 mov     rax, [rbp+var_410]
.text:000000000040764C                 shr     rax, 20h
.text:0000000000407650                 mov     esi, eax
.text:0000000000407652                 mov     rax, [rbp+var_420]
.text:0000000000407659                 movzx   eax, byte ptr [rax]
.text:000000000040765C                 movzx   eax, al
.text:000000000040765F                 mov     ecx, [rbp+var_414]
.text:0000000000407665                 mov     edi, ecx
.text:0000000000407667                 sar     edi, 2
.text:000000000040766A                 xor     esi, edx
.text:000000000040766C                 mov     rcx, [rbp+var_420]
.text:0000000000407673                 movsxd  rdi, edi
.text:0000000000407676                 movsxd  rdx, eax
.text:0000000000407679                 mov     rax, rdx
.text:000000000040767C                 shl     rax, 3
.text:0000000000407680                 add     rax, rdx
.text:0000000000407683                 add     rax, rdi
.text:0000000000407686                 mov     [rcx+rax*4+4], esi
.text:000000000040768A                 sub     [rbp+var_414], 4
.text:0000000000407691                 jmp     loc_4075F9
.text:0000000000407696 ; ---------------------------------------------------------------------------
.text:0000000000407696
.text:0000000000407696 loc_407696:                             ; CODE XREF: sub_405008+25F8↑j
.text:0000000000407696                 mov     rax, [rbp+var_420]
.text:000000000040769D                 movzx   eax, byte ptr [rax]
.text:00000000004076A0                 movzx   eax, al
.text:00000000004076A3                 movsxd  rdx, eax
.text:00000000004076A6                 mov     rax, rdx
.text:00000000004076A9                 shl     rax, 3
.text:00000000004076AD                 add     rax, rdx
.text:00000000004076B0                 shl     rax, 2
.text:00000000004076B4                 mov     rdx, [rbp+var_420]
.text:00000000004076BB                 add     rax, rdx
.text:00000000004076BE                 lea     rdx, [rax+4]
.text:00000000004076C2                 lea     rax, [rbp+var_A60]
.text:00000000004076C9                 mov     [rbp+var_428], rax
.text:00000000004076D0                 mov     [rbp+var_430], rdx
.text:00000000004076D7                 mov     rax, [rbp+var_428]
.text:00000000004076DE                 mov     [rbp+var_438], rax
.text:00000000004076E5                 mov     rax, [rbp+var_430]
.text:00000000004076EC                 mov     [rbp+var_440], rax
.text:00000000004076F3
.text:00000000004076F3 loc_4076F3:                             ; CODE XREF: sub_405008+2737↓j
.text:00000000004076F3                 mov     rax, [rbp+var_438]
.text:00000000004076FA                 lea     rdx, [rax+1]
.text:00000000004076FE                 mov     [rbp+var_438], rdx
.text:0000000000407705                 movzx   eax, byte ptr [rax]
.text:0000000000407708                 mov     [rbp+var_441], al
.text:000000000040770E                 mov     rax, [rbp+var_440]
.text:0000000000407715                 lea     rdx, [rax+1]
.text:0000000000407719                 mov     [rbp+var_440], rdx
.text:0000000000407720                 movzx   eax, byte ptr [rax]
.text:0000000000407723                 mov     [rbp+var_442], al
.text:0000000000407729                 cmp     [rbp+var_441], 0
.text:0000000000407730                 jz      short loc_407741
.text:0000000000407732                 movzx   eax, [rbp+var_441]
.text:0000000000407739                 cmp     al, [rbp+var_442]
.text:000000000040773F                 jz      short loc_4076F3
.text:0000000000407741
.text:0000000000407741 loc_407741:                             ; CODE XREF: sub_405008+2728↑j
.text:0000000000407741                 movzx   eax, [rbp+var_441]
.text:0000000000407748                 cmp     al, [rbp+var_442]
.text:000000000040774E                 setz    al
.text:0000000000407751                 movzx   eax, al
.text:0000000000407754                 test    eax, eax
.text:0000000000407756                 setnz   al
.text:0000000000407759                 test    al, al
.text:000000000040775B                 jz      loc_4080F2
.text:0000000000407761                 lea     rdx, [rbp+var_1A70]
.text:0000000000407768                 mov     eax, 0
.text:000000000040776D                 mov     ecx, 200h
.text:0000000000407772                 mov     rdi, rdx
.text:0000000000407775                 rep stosq
.text:0000000000407778                 mov     rdx, rdi
.text:000000000040777B                 mov     [rdx], al
.text:000000000040777D                 add     rdx, 1
.text:0000000000407781                 lea     rax, unk_40B1E9
.text:0000000000407788                 mov     [rbp+var_450], rax
.text:000000000040778F                 mov     rax, 7AF85A2568E09D6h
.text:0000000000407799                 mov     [rbp+var_458], rax
.text:00000000004077A0                 mov     [rbp+var_45C], 0Fh
.text:00000000004077AA                 call    getMem
.text:00000000004077AF                 mov     [rbp+var_468], rax
.text:00000000004077B6                 mov     rax, [rbp+var_468]
.text:00000000004077BD                 movzx   eax, byte ptr [rax]
.text:00000000004077C0                 movzx   eax, al
.text:00000000004077C3                 lea     ecx, [rax+3]
.text:00000000004077C6                 mov     edx, 66666667h
.text:00000000004077CB                 mov     eax, ecx
.text:00000000004077CD                 imul    edx
.text:00000000004077CF                 sar     edx, 2
.text:00000000004077D2                 mov     eax, ecx
.text:00000000004077D4                 sar     eax, 1Fh
.text:00000000004077D7                 sub     edx, eax
.text:00000000004077D9                 mov     eax, edx
.text:00000000004077DB                 shl     eax, 2
.text:00000000004077DE                 add     eax, edx
.text:00000000004077E0                 add     eax, eax
.text:00000000004077E2                 sub     ecx, eax
.text:00000000004077E4                 mov     edx, ecx
.text:00000000004077E6                 mov     rax, [rbp+var_468]
.text:00000000004077ED                 mov     [rax], dl
.text:00000000004077EF                 sub     [rbp+var_45C], 1
.text:00000000004077F6
.text:00000000004077F6 loc_4077F6:                             ; CODE XREF: sub_405008+2886↓j
.text:00000000004077F6                 cmp     [rbp+var_45C], 0
.text:00000000004077FD                 js      loc_407893
.text:0000000000407803                 mov     rdx, [rbp+var_458]
.text:000000000040780A                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407814                 imul    rax, rdx
.text:0000000000407818                 add     rax, 1
.text:000000000040781C                 mov     [rbp+var_458], rax
.text:0000000000407823                 mov     eax, [rbp+var_45C]
.text:0000000000407829                 sar     eax, 2
.text:000000000040782C                 cdqe
.text:000000000040782E                 lea     rdx, ds:0[rax*4]
.text:0000000000407836                 mov     rax, [rbp+var_450]
.text:000000000040783D                 add     rax, rdx
.text:0000000000407840                 mov     edx, [rax]
.text:0000000000407842                 mov     rax, [rbp+var_458]
.text:0000000000407849                 shr     rax, 20h
.text:000000000040784D                 mov     esi, eax
.text:000000000040784F                 mov     rax, [rbp+var_468]
.text:0000000000407856                 movzx   eax, byte ptr [rax]
.text:0000000000407859                 movzx   eax, al
.text:000000000040785C                 mov     ecx, [rbp+var_45C]
.text:0000000000407862                 mov     edi, ecx
.text:0000000000407864                 sar     edi, 2
.text:0000000000407867                 xor     esi, edx
.text:0000000000407869                 mov     rcx, [rbp+var_468]
.text:0000000000407870                 movsxd  rdi, edi
.text:0000000000407873                 movsxd  rdx, eax
.text:0000000000407876                 mov     rax, rdx
.text:0000000000407879                 shl     rax, 3
.text:000000000040787D                 add     rax, rdx
.text:0000000000407880                 add     rax, rdi
.text:0000000000407883                 mov     [rcx+rax*4+4], esi
.text:0000000000407887                 sub     [rbp+var_45C], 4
.text:000000000040788E                 jmp     loc_4077F6
.text:0000000000407893 ; ---------------------------------------------------------------------------
.text:0000000000407893
.text:0000000000407893 loc_407893:                             ; CODE XREF: sub_405008+27F5↑j
.text:0000000000407893                 mov     rax, [rbp+var_468]
.text:000000000040789A                 movzx   eax, byte ptr [rax]
.text:000000000040789D                 movzx   eax, al
.text:00000000004078A0                 movsxd  rdx, eax
.text:00000000004078A3                 mov     rax, rdx
.text:00000000004078A6                 shl     rax, 3
.text:00000000004078AA                 add     rax, rdx
.text:00000000004078AD                 shl     rax, 2
.text:00000000004078B1                 mov     rdx, [rbp+var_468]
.text:00000000004078B8                 add     rax, rdx
.text:00000000004078BB                 lea     rbx, [rax+4]
.text:00000000004078BF                 lea     rax, unk_40B1FA
.text:00000000004078C6                 mov     [rbp+var_470], rax
.text:00000000004078CD                 mov     rax, 6A09197E81B3E8B2h
.text:00000000004078D7                 mov     [rbp+var_478], rax
.text:00000000004078DE                 mov     [rbp+var_47C], 9
.text:00000000004078E8                 call    getMem
.text:00000000004078ED                 mov     [rbp+var_488], rax
.text:00000000004078F4                 mov     rax, [rbp+var_488]
.text:00000000004078FB                 movzx   eax, byte ptr [rax]
.text:00000000004078FE                 movzx   eax, al
.text:0000000000407901                 lea     ecx, [rax+3]
.text:0000000000407904                 mov     edx, 66666667h
.text:0000000000407909                 mov     eax, ecx
.text:000000000040790B                 imul    edx
.text:000000000040790D                 sar     edx, 2
.text:0000000000407910                 mov     eax, ecx
.text:0000000000407912                 sar     eax, 1Fh
.text:0000000000407915                 sub     edx, eax
.text:0000000000407917                 mov     eax, edx
.text:0000000000407919                 shl     eax, 2
.text:000000000040791C                 add     eax, edx
.text:000000000040791E                 add     eax, eax
.text:0000000000407920                 sub     ecx, eax
.text:0000000000407922                 mov     edx, ecx
.text:0000000000407924                 mov     rax, [rbp+var_488]
.text:000000000040792B                 mov     [rax], dl
.text:000000000040792D                 sub     [rbp+var_47C], 1
.text:0000000000407934
.text:0000000000407934 loc_407934:                             ; CODE XREF: sub_405008+29C4↓j
.text:0000000000407934                 cmp     [rbp+var_47C], 0
.text:000000000040793B                 js      loc_4079D1
.text:0000000000407941                 mov     rdx, [rbp+var_478]
.text:0000000000407948                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407952                 imul    rax, rdx
.text:0000000000407956                 add     rax, 1
.text:000000000040795A                 mov     [rbp+var_478], rax
.text:0000000000407961                 mov     eax, [rbp+var_47C]
.text:0000000000407967                 sar     eax, 2
.text:000000000040796A                 cdqe
.text:000000000040796C                 lea     rdx, ds:0[rax*4]
.text:0000000000407974                 mov     rax, [rbp+var_470]
.text:000000000040797B                 add     rax, rdx
.text:000000000040797E                 mov     edx, [rax]
.text:0000000000407980                 mov     rax, [rbp+var_478]
.text:0000000000407987                 shr     rax, 20h
.text:000000000040798B                 mov     esi, eax
.text:000000000040798D                 mov     rax, [rbp+var_488]
.text:0000000000407994                 movzx   eax, byte ptr [rax]
.text:0000000000407997                 movzx   eax, al
.text:000000000040799A                 mov     ecx, [rbp+var_47C]
.text:00000000004079A0                 mov     edi, ecx
.text:00000000004079A2                 sar     edi, 2
.text:00000000004079A5                 xor     esi, edx
.text:00000000004079A7                 mov     rcx, [rbp+var_488]
.text:00000000004079AE                 movsxd  rdi, edi
.text:00000000004079B1                 movsxd  rdx, eax
.text:00000000004079B4                 mov     rax, rdx
.text:00000000004079B7                 shl     rax, 3
.text:00000000004079BB                 add     rax, rdx
.text:00000000004079BE                 add     rax, rdi
.text:00000000004079C1                 mov     [rcx+rax*4+4], esi
.text:00000000004079C5                 sub     [rbp+var_47C], 4
.text:00000000004079CC                 jmp     loc_407934
.text:00000000004079D1 ; ---------------------------------------------------------------------------
.text:00000000004079D1
.text:00000000004079D1 loc_4079D1:                             ; CODE XREF: sub_405008+2933↑j
.text:00000000004079D1                 mov     rax, [rbp+var_488]
.text:00000000004079D8                 movzx   eax, byte ptr [rax]
.text:00000000004079DB                 movzx   eax, al
.text:00000000004079DE                 movsxd  rdx, eax
.text:00000000004079E1                 mov     rax, rdx
.text:00000000004079E4                 shl     rax, 3
.text:00000000004079E8                 add     rax, rdx
.text:00000000004079EB                 shl     rax, 2
.text:00000000004079EF                 mov     rdx, [rbp+var_488]
.text:00000000004079F6                 add     rax, rdx
.text:00000000004079F9                 lea     rdi, [rax+4]
.text:00000000004079FD                 lea     rax, [rbp+var_1A70]
.text:0000000000407A04                 mov     ecx, 1000h
.text:0000000000407A09                 mov     rdx, rax
.text:0000000000407A0C                 mov     rsi, rbx
.text:0000000000407A0F                 mov     eax, 0
.text:0000000000407A14                 call    sub_40A07C
.text:0000000000407A19                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000407A1D                 jz      loc_407B84
.text:0000000000407A23                 lea     rax, unk_40B207
.text:0000000000407A2A                 mov     [rbp+var_490], rax
.text:0000000000407A31                 mov     rax, 0E51775D9F59B4E84h
.text:0000000000407A3B                 mov     [rbp+var_498], rax
.text:0000000000407A42                 mov     [rbp+var_49C], 7
.text:0000000000407A4C                 call    getMem
.text:0000000000407A51                 mov     [rbp+var_4A8], rax
.text:0000000000407A58                 mov     rax, [rbp+var_4A8]
.text:0000000000407A5F                 movzx   eax, byte ptr [rax]
.text:0000000000407A62                 movzx   eax, al
.text:0000000000407A65                 lea     ecx, [rax+3]
.text:0000000000407A68                 mov     edx, 66666667h
.text:0000000000407A6D                 mov     eax, ecx
.text:0000000000407A6F                 imul    edx
.text:0000000000407A71                 sar     edx, 2
.text:0000000000407A74                 mov     eax, ecx
.text:0000000000407A76                 sar     eax, 1Fh
.text:0000000000407A79                 sub     edx, eax
.text:0000000000407A7B                 mov     eax, edx
.text:0000000000407A7D                 shl     eax, 2
.text:0000000000407A80                 add     eax, edx
.text:0000000000407A82                 add     eax, eax
.text:0000000000407A84                 sub     ecx, eax
.text:0000000000407A86                 mov     edx, ecx
.text:0000000000407A88                 mov     rax, [rbp+var_4A8]
.text:0000000000407A8F                 mov     [rax], dl
.text:0000000000407A91                 sub     [rbp+var_49C], 1
.text:0000000000407A98
.text:0000000000407A98 loc_407A98:                             ; CODE XREF: sub_405008+2B28↓j
.text:0000000000407A98                 cmp     [rbp+var_49C], 0
.text:0000000000407A9F                 js      loc_407B35
.text:0000000000407AA5                 mov     rdx, [rbp+var_498]
.text:0000000000407AAC                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407AB6                 imul    rax, rdx
.text:0000000000407ABA                 add     rax, 1
.text:0000000000407ABE                 mov     [rbp+var_498], rax
.text:0000000000407AC5                 mov     eax, [rbp+var_49C]
.text:0000000000407ACB                 sar     eax, 2
.text:0000000000407ACE                 cdqe
.text:0000000000407AD0                 lea     rdx, ds:0[rax*4]
.text:0000000000407AD8                 mov     rax, [rbp+var_490]
.text:0000000000407ADF                 add     rax, rdx
.text:0000000000407AE2                 mov     edx, [rax]
.text:0000000000407AE4                 mov     rax, [rbp+var_498]
.text:0000000000407AEB                 shr     rax, 20h
.text:0000000000407AEF                 mov     esi, eax
.text:0000000000407AF1                 mov     rax, [rbp+var_4A8]
.text:0000000000407AF8                 movzx   eax, byte ptr [rax]
.text:0000000000407AFB                 movzx   eax, al
.text:0000000000407AFE                 mov     ecx, [rbp+var_49C]
.text:0000000000407B04                 mov     edi, ecx
.text:0000000000407B06                 sar     edi, 2
.text:0000000000407B09                 xor     esi, edx
.text:0000000000407B0B                 mov     rcx, [rbp+var_4A8]
.text:0000000000407B12                 movsxd  rdi, edi
.text:0000000000407B15                 movsxd  rdx, eax
.text:0000000000407B18                 mov     rax, rdx
.text:0000000000407B1B                 shl     rax, 3
.text:0000000000407B1F                 add     rax, rdx
.text:0000000000407B22                 add     rax, rdi
.text:0000000000407B25                 mov     [rcx+rax*4+4], esi
.text:0000000000407B29                 sub     [rbp+var_49C], 4
.text:0000000000407B30                 jmp     loc_407A98
.text:0000000000407B35 ; ---------------------------------------------------------------------------
.text:0000000000407B35
.text:0000000000407B35 loc_407B35:                             ; CODE XREF: sub_405008+2A97↑j
.text:0000000000407B35                 mov     rax, [rbp+var_4A8]
.text:0000000000407B3C                 movzx   eax, byte ptr [rax]
.text:0000000000407B3F                 movzx   eax, al
.text:0000000000407B42                 movsxd  rdx, eax
.text:0000000000407B45                 mov     rax, rdx
.text:0000000000407B48                 shl     rax, 3
.text:0000000000407B4C                 add     rax, rdx
.text:0000000000407B4F                 shl     rax, 2
.text:0000000000407B53                 mov     rdx, [rbp+var_4A8]
.text:0000000000407B5A                 add     rax, rdx
.text:0000000000407B5D                 lea     rdx, [rax+4]
.text:0000000000407B61                 lea     rax, [rbp+var_1A70]
.text:0000000000407B68                 mov     rsi, rax
.text:0000000000407B6B                 mov     rdi, rdx
.text:0000000000407B6E                 mov     eax, 0
.text:0000000000407B73                 call    sub_40A07C
.text:0000000000407B78                 cmp     eax, 0FFFFFFFFh
.text:0000000000407B7B                 jz      short loc_407B84
.text:0000000000407B7D                 mov     eax, 1
.text:0000000000407B82                 jmp     short loc_407B89
.text:0000000000407B84 ; ---------------------------------------------------------------------------
.text:0000000000407B84
.text:0000000000407B84 loc_407B84:                             ; CODE XREF: sub_405008+2A15↑j
.text:0000000000407B84                                         ; sub_405008+2B73↑j
.text:0000000000407B84                 mov     eax, 0
.text:0000000000407B89
.text:0000000000407B89 loc_407B89:                             ; CODE XREF: sub_405008+2B7A↑j
.text:0000000000407B89                 test    al, al
.text:0000000000407B8B                 jz      loc_407F9F
.text:0000000000407B91                 lea     rax, unk_40B1DF
.text:0000000000407B98                 mov     [rbp+var_4B0], rax
.text:0000000000407B9F                 mov     rax, 0FC0128A35868855Eh
.text:0000000000407BA9                 mov     [rbp+var_4B8], rax
.text:0000000000407BB0                 mov     [rbp+var_4BC], 3
.text:0000000000407BBA                 call    getMem
.text:0000000000407BBF                 mov     [rbp+var_4C8], rax
.text:0000000000407BC6                 mov     rax, [rbp+var_4C8]
.text:0000000000407BCD                 movzx   eax, byte ptr [rax]
.text:0000000000407BD0                 movzx   eax, al
.text:0000000000407BD3                 lea     ecx, [rax+3]
.text:0000000000407BD6                 mov     edx, 66666667h
.text:0000000000407BDB                 mov     eax, ecx
.text:0000000000407BDD                 imul    edx
.text:0000000000407BDF                 sar     edx, 2
.text:0000000000407BE2                 mov     eax, ecx
.text:0000000000407BE4                 sar     eax, 1Fh
.text:0000000000407BE7                 sub     edx, eax
.text:0000000000407BE9                 mov     eax, edx
.text:0000000000407BEB                 shl     eax, 2
.text:0000000000407BEE                 add     eax, edx
.text:0000000000407BF0                 add     eax, eax
.text:0000000000407BF2                 sub     ecx, eax
.text:0000000000407BF4                 mov     edx, ecx
.text:0000000000407BF6                 mov     rax, [rbp+var_4C8]
.text:0000000000407BFD                 mov     [rax], dl
.text:0000000000407BFF                 sub     [rbp+var_4BC], 1
.text:0000000000407C06
.text:0000000000407C06 loc_407C06:                             ; CODE XREF: sub_405008+2C96↓j
.text:0000000000407C06                 cmp     [rbp+var_4BC], 0
.text:0000000000407C0D                 js      loc_407CA3
.text:0000000000407C13                 mov     rdx, [rbp+var_4B8]
.text:0000000000407C1A                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407C24                 imul    rax, rdx
.text:0000000000407C28                 add     rax, 1
.text:0000000000407C2C                 mov     [rbp+var_4B8], rax
.text:0000000000407C33                 mov     eax, [rbp+var_4BC]
.text:0000000000407C39                 sar     eax, 2
.text:0000000000407C3C                 cdqe
.text:0000000000407C3E                 lea     rdx, ds:0[rax*4]
.text:0000000000407C46                 mov     rax, [rbp+var_4B0]
.text:0000000000407C4D                 add     rax, rdx
.text:0000000000407C50                 mov     edx, [rax]
.text:0000000000407C52                 mov     rax, [rbp+var_4B8]
.text:0000000000407C59                 shr     rax, 20h
.text:0000000000407C5D                 mov     esi, eax
.text:0000000000407C5F                 mov     rax, [rbp+var_4C8]
.text:0000000000407C66                 movzx   eax, byte ptr [rax]
.text:0000000000407C69                 movzx   eax, al
.text:0000000000407C6C                 mov     ecx, [rbp+var_4BC]
.text:0000000000407C72                 mov     edi, ecx
.text:0000000000407C74                 sar     edi, 2
.text:0000000000407C77                 xor     esi, edx
.text:0000000000407C79                 mov     rcx, [rbp+var_4C8]
.text:0000000000407C80                 movsxd  rdi, edi
.text:0000000000407C83                 movsxd  rdx, eax
.text:0000000000407C86                 mov     rax, rdx
.text:0000000000407C89                 shl     rax, 3
.text:0000000000407C8D                 add     rax, rdx
.text:0000000000407C90                 add     rax, rdi
.text:0000000000407C93                 mov     [rcx+rax*4+4], esi
.text:0000000000407C97                 sub     [rbp+var_4BC], 4
.text:0000000000407C9E                 jmp     loc_407C06
.text:0000000000407CA3 ; ---------------------------------------------------------------------------
.text:0000000000407CA3
.text:0000000000407CA3 loc_407CA3:                             ; CODE XREF: sub_405008+2C05↑j
.text:0000000000407CA3                 mov     rax, [rbp+var_4C8]
.text:0000000000407CAA                 movzx   eax, byte ptr [rax]
.text:0000000000407CAD                 movzx   eax, al
.text:0000000000407CB0                 movsxd  rdx, eax
.text:0000000000407CB3                 mov     rax, rdx
.text:0000000000407CB6                 shl     rax, 3
.text:0000000000407CBA                 add     rax, rdx
.text:0000000000407CBD                 shl     rax, 2
.text:0000000000407CC1                 mov     rdx, [rbp+var_4C8]
.text:0000000000407CC8                 add     rax, rdx
.text:0000000000407CCB                 lea     rdx, [rax+4]
.text:0000000000407CCF                 mov     eax, [rbp+var_1A74]
.text:0000000000407CD5                 mov     rsi, rdx
.text:0000000000407CD8                 mov     edi, eax
.text:0000000000407CDA                 call    sub_402D64
.text:0000000000407CDF                 mov     eax, cs:dword_60C398
.text:0000000000407CE5                 test    eax, eax
.text:0000000000407CE7                 jle     loc_407E45
.text:0000000000407CED                 mov     ebx, cs:dword_60C398
.text:0000000000407CF3                 lea     rax, unk_40B210
.text:0000000000407CFA                 mov     [rbp+var_4D0], rax
.text:0000000000407D01                 mov     rax, 0BEDCA1EF41A7B28Ah
.text:0000000000407D0B                 mov     [rbp+var_4D8], rax
.text:0000000000407D12                 mov     [rbp+var_4DC], 5
.text:0000000000407D1C                 call    getMem
.text:0000000000407D21                 mov     [rbp+var_4E8], rax
.text:0000000000407D28                 mov     rax, [rbp+var_4E8]
.text:0000000000407D2F                 movzx   eax, byte ptr [rax]
.text:0000000000407D32                 movzx   eax, al
.text:0000000000407D35                 lea     ecx, [rax+3]
.text:0000000000407D38                 mov     edx, 66666667h
.text:0000000000407D3D                 mov     eax, ecx
.text:0000000000407D3F                 imul    edx
.text:0000000000407D41                 sar     edx, 2
.text:0000000000407D44                 mov     eax, ecx
.text:0000000000407D46                 sar     eax, 1Fh
.text:0000000000407D49                 sub     edx, eax
.text:0000000000407D4B                 mov     eax, edx
.text:0000000000407D4D                 shl     eax, 2
.text:0000000000407D50                 add     eax, edx
.text:0000000000407D52                 add     eax, eax
.text:0000000000407D54                 sub     ecx, eax
.text:0000000000407D56                 mov     edx, ecx
.text:0000000000407D58                 mov     rax, [rbp+var_4E8]
.text:0000000000407D5F                 mov     [rax], dl
.text:0000000000407D61                 sub     [rbp+var_4DC], 1
.text:0000000000407D68
.text:0000000000407D68 loc_407D68:                             ; CODE XREF: sub_405008+2DF8↓j
.text:0000000000407D68                 cmp     [rbp+var_4DC], 0
.text:0000000000407D6F                 js      loc_407E05
.text:0000000000407D75                 mov     rdx, [rbp+var_4D8]
.text:0000000000407D7C                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407D86                 imul    rax, rdx
.text:0000000000407D8A                 add     rax, 1
.text:0000000000407D8E                 mov     [rbp+var_4D8], rax
.text:0000000000407D95                 mov     eax, [rbp+var_4DC]
.text:0000000000407D9B                 sar     eax, 2
.text:0000000000407D9E                 cdqe
.text:0000000000407DA0                 lea     rdx, ds:0[rax*4]
.text:0000000000407DA8                 mov     rax, [rbp+var_4D0]
.text:0000000000407DAF                 add     rax, rdx
.text:0000000000407DB2                 mov     edx, [rax]
.text:0000000000407DB4                 mov     rax, [rbp+var_4D8]
.text:0000000000407DBB                 shr     rax, 20h
.text:0000000000407DBF                 mov     esi, eax
.text:0000000000407DC1                 mov     rax, [rbp+var_4E8]
.text:0000000000407DC8                 movzx   eax, byte ptr [rax]
.text:0000000000407DCB                 movzx   eax, al
.text:0000000000407DCE                 mov     ecx, [rbp+var_4DC]
.text:0000000000407DD4                 mov     edi, ecx
.text:0000000000407DD6                 sar     edi, 2
.text:0000000000407DD9                 xor     esi, edx
.text:0000000000407DDB                 mov     rcx, [rbp+var_4E8]
.text:0000000000407DE2                 movsxd  rdi, edi
.text:0000000000407DE5                 movsxd  rdx, eax
.text:0000000000407DE8                 mov     rax, rdx
.text:0000000000407DEB                 shl     rax, 3
.text:0000000000407DEF                 add     rax, rdx
.text:0000000000407DF2                 add     rax, rdi
.text:0000000000407DF5                 mov     [rcx+rax*4+4], esi
.text:0000000000407DF9                 sub     [rbp+var_4DC], 4
.text:0000000000407E00                 jmp     loc_407D68
.text:0000000000407E05 ; ---------------------------------------------------------------------------
.text:0000000000407E05
.text:0000000000407E05 loc_407E05:                             ; CODE XREF: sub_405008+2D67↑j
.text:0000000000407E05                 mov     rax, [rbp+var_4E8]
.text:0000000000407E0C                 movzx   eax, byte ptr [rax]
.text:0000000000407E0F                 movzx   eax, al
.text:0000000000407E12                 movsxd  rdx, eax
.text:0000000000407E15                 mov     rax, rdx
.text:0000000000407E18                 shl     rax, 3
.text:0000000000407E1C                 add     rax, rdx
.text:0000000000407E1F                 shl     rax, 2
.text:0000000000407E23                 mov     rdx, [rbp+var_4E8]
.text:0000000000407E2A                 add     rax, rdx
.text:0000000000407E2D                 add     rax, 4
.text:0000000000407E31                 mov     edx, 9
.text:0000000000407E36                 mov     esi, ebx
.text:0000000000407E38                 mov     rdi, rax
.text:0000000000407E3B                 mov     eax, 0
.text:0000000000407E40                 call    sub_40A07C
.text:0000000000407E45
.text:0000000000407E45 loc_407E45:                             ; CODE XREF: sub_405008+2CDF↑j
.text:0000000000407E45                 lea     rax, unk_40B219
.text:0000000000407E4C                 mov     [rbp+var_4F0], rax
.text:0000000000407E53                 mov     rax, 5A4B84A648D0625Ch
.text:0000000000407E5D                 mov     [rbp+var_4F8], rax
.text:0000000000407E64                 mov     [rbp+var_4FC], 8
.text:0000000000407E6E                 call    getMem
.text:0000000000407E73                 mov     [rbp+var_508], rax
.text:0000000000407E7A                 mov     rax, [rbp+var_508]
.text:0000000000407E81                 movzx   eax, byte ptr [rax]
.text:0000000000407E84                 movzx   eax, al
.text:0000000000407E87                 lea     ecx, [rax+3]
.text:0000000000407E8A                 mov     edx, 66666667h
.text:0000000000407E8F                 mov     eax, ecx
.text:0000000000407E91                 imul    edx
.text:0000000000407E93                 sar     edx, 2
.text:0000000000407E96                 mov     eax, ecx
.text:0000000000407E98                 sar     eax, 1Fh
.text:0000000000407E9B                 sub     edx, eax
.text:0000000000407E9D                 mov     eax, edx
.text:0000000000407E9F                 shl     eax, 2
.text:0000000000407EA2                 add     eax, edx
.text:0000000000407EA4                 add     eax, eax
.text:0000000000407EA6                 sub     ecx, eax
.text:0000000000407EA8                 mov     edx, ecx
.text:0000000000407EAA                 mov     rax, [rbp+var_508]
.text:0000000000407EB1                 mov     [rax], dl
.text:0000000000407EB3                 sub     [rbp+var_4FC], 1
.text:0000000000407EBA
.text:0000000000407EBA loc_407EBA:                             ; CODE XREF: sub_405008+2F4A↓j
.text:0000000000407EBA                 cmp     [rbp+var_4FC], 0
.text:0000000000407EC1                 js      loc_407F57
.text:0000000000407EC7                 mov     rdx, [rbp+var_4F8]
.text:0000000000407ECE                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000407ED8                 imul    rax, rdx
.text:0000000000407EDC                 add     rax, 1
.text:0000000000407EE0                 mov     [rbp+var_4F8], rax
.text:0000000000407EE7                 mov     eax, [rbp+var_4FC]
.text:0000000000407EED                 sar     eax, 2
.text:0000000000407EF0                 cdqe
.text:0000000000407EF2                 lea     rdx, ds:0[rax*4]
.text:0000000000407EFA                 mov     rax, [rbp+var_4F0]
.text:0000000000407F01                 add     rax, rdx
.text:0000000000407F04                 mov     edx, [rax]
.text:0000000000407F06                 mov     rax, [rbp+var_4F8]
.text:0000000000407F0D                 shr     rax, 20h
.text:0000000000407F11                 mov     esi, eax
.text:0000000000407F13                 mov     rax, [rbp+var_508]
.text:0000000000407F1A                 movzx   eax, byte ptr [rax]
.text:0000000000407F1D                 movzx   eax, al
.text:0000000000407F20                 mov     ecx, [rbp+var_4FC]
.text:0000000000407F26                 mov     edi, ecx
.text:0000000000407F28                 sar     edi, 2
.text:0000000000407F2B                 xor     esi, edx
.text:0000000000407F2D                 mov     rcx, [rbp+var_508]
.text:0000000000407F34                 movsxd  rdi, edi
.text:0000000000407F37                 movsxd  rdx, eax
.text:0000000000407F3A                 mov     rax, rdx
.text:0000000000407F3D                 shl     rax, 3
.text:0000000000407F41                 add     rax, rdx
.text:0000000000407F44                 add     rax, rdi
.text:0000000000407F47                 mov     [rcx+rax*4+4], esi
.text:0000000000407F4B                 sub     [rbp+var_4FC], 4
.text:0000000000407F52                 jmp     loc_407EBA
.text:0000000000407F57 ; ---------------------------------------------------------------------------
.text:0000000000407F57
.text:0000000000407F57 loc_407F57:                             ; CODE XREF: sub_405008+2EB9↑j
.text:0000000000407F57                 mov     rax, [rbp+var_508]
.text:0000000000407F5E                 movzx   eax, byte ptr [rax]
.text:0000000000407F61                 movzx   eax, al
.text:0000000000407F64                 movsxd  rdx, eax
.text:0000000000407F67                 mov     rax, rdx
.text:0000000000407F6A                 shl     rax, 3
.text:0000000000407F6E                 add     rax, rdx
.text:0000000000407F71                 shl     rax, 2
.text:0000000000407F75                 mov     rdx, [rbp+var_508]
.text:0000000000407F7C                 add     rax, rdx
.text:0000000000407F7F                 add     rax, 4
.text:0000000000407F83                 mov     edx, 0
.text:0000000000407F88                 mov     esi, 0E7h
.text:0000000000407F8D                 mov     rdi, rax
.text:0000000000407F90                 mov     eax, 0
.text:0000000000407F95                 call    sub_40A07C
.text:0000000000407F9A                 jmp     loc_408B6B
.text:0000000000407F9F ; ---------------------------------------------------------------------------
.text:0000000000407F9F
.text:0000000000407F9F loc_407F9F:                             ; CODE XREF: sub_405008+2B83↑j
.text:0000000000407F9F                 lea     rax, unk_40B141
.text:0000000000407FA6                 mov     [rbp+var_510], rax
.text:0000000000407FAD                 mov     rax, 4F0BB9E75EB58B89h
.text:0000000000407FB7                 mov     [rbp+var_518], rax
.text:0000000000407FBE                 mov     [rbp+var_51C], 6
.text:0000000000407FC8                 call    getMem
.text:0000000000407FCD                 mov     [rbp+var_528], rax
.text:0000000000407FD4                 mov     rax, [rbp+var_528]
.text:0000000000407FDB                 movzx   eax, byte ptr [rax]
.text:0000000000407FDE                 movzx   eax, al
.text:0000000000407FE1                 lea     ecx, [rax+3]
.text:0000000000407FE4                 mov     edx, 66666667h
.text:0000000000407FE9                 mov     eax, ecx
.text:0000000000407FEB                 imul    edx
.text:0000000000407FED                 sar     edx, 2
.text:0000000000407FF0                 mov     eax, ecx
.text:0000000000407FF2                 sar     eax, 1Fh
.text:0000000000407FF5                 sub     edx, eax
.text:0000000000407FF7                 mov     eax, edx
.text:0000000000407FF9                 shl     eax, 2
.text:0000000000407FFC                 add     eax, edx
.text:0000000000407FFE                 add     eax, eax
.text:0000000000408000                 sub     ecx, eax
.text:0000000000408002                 mov     edx, ecx
.text:0000000000408004                 mov     rax, [rbp+var_528]
.text:000000000040800B                 mov     [rax], dl
.text:000000000040800D                 sub     [rbp+var_51C], 1
.text:0000000000408014
.text:0000000000408014 loc_408014:                             ; CODE XREF: sub_405008+30A4↓j
.text:0000000000408014                 cmp     [rbp+var_51C], 0
.text:000000000040801B                 js      loc_4080B1
.text:0000000000408021                 mov     rdx, [rbp+var_518]
.text:0000000000408028                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408032                 imul    rax, rdx
.text:0000000000408036                 add     rax, 1
.text:000000000040803A                 mov     [rbp+var_518], rax
.text:0000000000408041                 mov     eax, [rbp+var_51C]
.text:0000000000408047                 sar     eax, 2
.text:000000000040804A                 cdqe
.text:000000000040804C                 lea     rdx, ds:0[rax*4]
.text:0000000000408054                 mov     rax, [rbp+var_510]
.text:000000000040805B                 add     rax, rdx
.text:000000000040805E                 mov     edx, [rax]
.text:0000000000408060                 mov     rax, [rbp+var_518]
.text:0000000000408067                 shr     rax, 20h
.text:000000000040806B                 mov     esi, eax
.text:000000000040806D                 mov     rax, [rbp+var_528]
.text:0000000000408074                 movzx   eax, byte ptr [rax]
.text:0000000000408077                 movzx   eax, al
.text:000000000040807A                 mov     ecx, [rbp+var_51C]
.text:0000000000408080                 mov     edi, ecx
.text:0000000000408082                 sar     edi, 2
.text:0000000000408085                 xor     esi, edx
.text:0000000000408087                 mov     rcx, [rbp+var_528]
.text:000000000040808E                 movsxd  rdi, edi
.text:0000000000408091                 movsxd  rdx, eax
.text:0000000000408094                 mov     rax, rdx
.text:0000000000408097                 shl     rax, 3
.text:000000000040809B                 add     rax, rdx
.text:000000000040809E                 add     rax, rdi
.text:00000000004080A1                 mov     [rcx+rax*4+4], esi
.text:00000000004080A5                 sub     [rbp+var_51C], 4
.text:00000000004080AC                 jmp     loc_408014
.text:00000000004080B1 ; ---------------------------------------------------------------------------
.text:00000000004080B1
.text:00000000004080B1 loc_4080B1:                             ; CODE XREF: sub_405008+3013↑j
.text:00000000004080B1                 mov     rax, [rbp+var_528]
.text:00000000004080B8                 movzx   eax, byte ptr [rax]
.text:00000000004080BB                 movzx   eax, al
.text:00000000004080BE                 movsxd  rdx, eax
.text:00000000004080C1                 mov     rax, rdx
.text:00000000004080C4                 shl     rax, 3
.text:00000000004080C8                 add     rax, rdx
.text:00000000004080CB                 shl     rax, 2
.text:00000000004080CF                 mov     rdx, [rbp+var_528]
.text:00000000004080D6                 add     rax, rdx
.text:00000000004080D9                 lea     rdx, [rax+4]
.text:00000000004080DD                 mov     eax, [rbp+var_1A74]
.text:00000000004080E3                 mov     rsi, rdx
.text:00000000004080E6                 mov     edi, eax
.text:00000000004080E8                 call    sub_402D64
.text:00000000004080ED                 jmp     loc_408B6B
.text:00000000004080F2 ; ---------------------------------------------------------------------------
.text:00000000004080F2
.text:00000000004080F2 loc_4080F2:                             ; CODE XREF: sub_405008+2753↑j
.text:00000000004080F2                 lea     rax, unk_40B222
.text:00000000004080F9                 mov     [rbp+var_530], rax
.text:0000000000408100                 mov     rax, 0C35868E127001BC9h
.text:000000000040810A                 mov     [rbp+var_538], rax
.text:0000000000408111                 mov     [rbp+var_53C], 8
.text:000000000040811B                 call    getMem
.text:0000000000408120                 mov     [rbp+var_548], rax
.text:0000000000408127                 mov     rax, [rbp+var_548]
.text:000000000040812E                 movzx   eax, byte ptr [rax]
.text:0000000000408131                 movzx   eax, al
.text:0000000000408134                 lea     ecx, [rax+3]
.text:0000000000408137                 mov     edx, 66666667h
.text:000000000040813C                 mov     eax, ecx
.text:000000000040813E                 imul    edx
.text:0000000000408140                 sar     edx, 2
.text:0000000000408143                 mov     eax, ecx
.text:0000000000408145                 sar     eax, 1Fh
.text:0000000000408148                 sub     edx, eax
.text:000000000040814A                 mov     eax, edx
.text:000000000040814C                 shl     eax, 2
.text:000000000040814F                 add     eax, edx
.text:0000000000408151                 add     eax, eax
.text:0000000000408153                 sub     ecx, eax
.text:0000000000408155                 mov     edx, ecx
.text:0000000000408157                 mov     rax, [rbp+var_548]
.text:000000000040815E                 mov     [rax], dl
.text:0000000000408160                 sub     [rbp+var_53C], 1
.text:0000000000408167
.text:0000000000408167 loc_408167:                             ; CODE XREF: sub_405008+31F7↓j
.text:0000000000408167                 cmp     [rbp+var_53C], 0
.text:000000000040816E                 js      loc_408204
.text:0000000000408174                 mov     rdx, [rbp+var_538]
.text:000000000040817B                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408185                 imul    rax, rdx
.text:0000000000408189                 add     rax, 1
.text:000000000040818D                 mov     [rbp+var_538], rax
.text:0000000000408194                 mov     eax, [rbp+var_53C]
.text:000000000040819A                 sar     eax, 2
.text:000000000040819D                 cdqe
.text:000000000040819F                 lea     rdx, ds:0[rax*4]
.text:00000000004081A7                 mov     rax, [rbp+var_530]
.text:00000000004081AE                 add     rax, rdx
.text:00000000004081B1                 mov     edx, [rax]
.text:00000000004081B3                 mov     rax, [rbp+var_538]
.text:00000000004081BA                 shr     rax, 20h
.text:00000000004081BE                 mov     esi, eax
.text:00000000004081C0                 mov     rax, [rbp+var_548]
.text:00000000004081C7                 movzx   eax, byte ptr [rax]
.text:00000000004081CA                 movzx   eax, al
.text:00000000004081CD                 mov     ecx, [rbp+var_53C]
.text:00000000004081D3                 mov     edi, ecx
.text:00000000004081D5                 sar     edi, 2
.text:00000000004081D8                 xor     esi, edx
.text:00000000004081DA                 mov     rcx, [rbp+var_548]
.text:00000000004081E1                 movsxd  rdi, edi
.text:00000000004081E4                 movsxd  rdx, eax
.text:00000000004081E7                 mov     rax, rdx
.text:00000000004081EA                 shl     rax, 3
.text:00000000004081EE                 add     rax, rdx
.text:00000000004081F1                 add     rax, rdi
.text:00000000004081F4                 mov     [rcx+rax*4+4], esi
.text:00000000004081F8                 sub     [rbp+var_53C], 4
.text:00000000004081FF                 jmp     loc_408167
.text:0000000000408204 ; ---------------------------------------------------------------------------
.text:0000000000408204
.text:0000000000408204 loc_408204:                             ; CODE XREF: sub_405008+3166↑j
.text:0000000000408204                 mov     rax, [rbp+var_548]
.text:000000000040820B                 movzx   eax, byte ptr [rax]
.text:000000000040820E                 movzx   eax, al
.text:0000000000408211                 movsxd  rdx, eax
.text:0000000000408214                 mov     rax, rdx
.text:0000000000408217                 shl     rax, 3
.text:000000000040821B                 add     rax, rdx
.text:000000000040821E                 shl     rax, 2
.text:0000000000408222                 mov     rdx, [rbp+var_548]
.text:0000000000408229                 add     rax, rdx
.text:000000000040822C                 lea     rdx, [rax+4]
.text:0000000000408230                 lea     rax, [rbp+var_A60]
.text:0000000000408237                 mov     [rbp+var_550], rax
.text:000000000040823E                 mov     [rbp+var_558], rdx
.text:0000000000408245                 mov     rax, [rbp+var_550]
.text:000000000040824C                 mov     [rbp+var_560], rax
.text:0000000000408253                 mov     rax, [rbp+var_558]
.text:000000000040825A                 mov     [rbp+var_568], rax
.text:0000000000408261
.text:0000000000408261 loc_408261:                             ; CODE XREF: sub_405008+32A5↓j
.text:0000000000408261                 mov     rax, [rbp+var_560]
.text:0000000000408268                 lea     rdx, [rax+1]
.text:000000000040826C                 mov     [rbp+var_560], rdx
.text:0000000000408273                 movzx   eax, byte ptr [rax]
.text:0000000000408276                 mov     [rbp+var_569], al
.text:000000000040827C                 mov     rax, [rbp+var_568]
.text:0000000000408283                 lea     rdx, [rax+1]
.text:0000000000408287                 mov     [rbp+var_568], rdx
.text:000000000040828E                 movzx   eax, byte ptr [rax]
.text:0000000000408291                 mov     [rbp+var_56A], al
.text:0000000000408297                 cmp     [rbp+var_569], 0
.text:000000000040829E                 jz      short loc_4082AF
.text:00000000004082A0                 movzx   eax, [rbp+var_569]
.text:00000000004082A7                 cmp     al, [rbp+var_56A]
.text:00000000004082AD                 jz      short loc_408261
.text:00000000004082AF
.text:00000000004082AF loc_4082AF:                             ; CODE XREF: sub_405008+3296↑j
.text:00000000004082AF                 movzx   eax, [rbp+var_569]
.text:00000000004082B6                 cmp     al, [rbp+var_56A]
.text:00000000004082BC                 setz    al
.text:00000000004082BF                 movzx   eax, al
.text:00000000004082C2                 test    eax, eax
.text:00000000004082C4                 setnz   al
.text:00000000004082C7                 test    al, al
.text:00000000004082C9                 jz      loc_4086E4
.text:00000000004082CF                 call    sub_401FD3
.text:00000000004082D4                 mov     [rbp+var_2C], eax
.text:00000000004082D7                 cmp     [rbp+var_2C], 0FFFFFFFFh
.text:00000000004082DB                 jnz     loc_408434
.text:00000000004082E1                 lea     rax, unk_40B141
.text:00000000004082E8                 mov     [rbp+var_578], rax
.text:00000000004082EF                 mov     rax, 4F0BB9E75EB58B89h
.text:00000000004082F9                 mov     [rbp+var_580], rax
.text:0000000000408300                 mov     [rbp+var_584], 6
.text:000000000040830A                 call    getMem
.text:000000000040830F                 mov     [rbp+var_590], rax
.text:0000000000408316                 mov     rax, [rbp+var_590]
.text:000000000040831D                 movzx   eax, byte ptr [rax]
.text:0000000000408320                 movzx   eax, al
.text:0000000000408323                 lea     ecx, [rax+3]
.text:0000000000408326                 mov     edx, 66666667h
.text:000000000040832B                 mov     eax, ecx
.text:000000000040832D                 imul    edx
.text:000000000040832F                 sar     edx, 2
.text:0000000000408332                 mov     eax, ecx
.text:0000000000408334                 sar     eax, 1Fh
.text:0000000000408337                 sub     edx, eax
.text:0000000000408339                 mov     eax, edx
.text:000000000040833B                 shl     eax, 2
.text:000000000040833E                 add     eax, edx
.text:0000000000408340                 add     eax, eax
.text:0000000000408342                 sub     ecx, eax
.text:0000000000408344                 mov     edx, ecx
.text:0000000000408346                 mov     rax, [rbp+var_590]
.text:000000000040834D                 mov     [rax], dl
.text:000000000040834F                 sub     [rbp+var_584], 1
.text:0000000000408356
.text:0000000000408356 loc_408356:                             ; CODE XREF: sub_405008+33E6↓j
.text:0000000000408356                 cmp     [rbp+var_584], 0
.text:000000000040835D                 js      loc_4083F3
.text:0000000000408363                 mov     rdx, [rbp+var_580]
.text:000000000040836A                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408374                 imul    rax, rdx
.text:0000000000408378                 add     rax, 1
.text:000000000040837C                 mov     [rbp+var_580], rax
.text:0000000000408383                 mov     eax, [rbp+var_584]
.text:0000000000408389                 sar     eax, 2
.text:000000000040838C                 cdqe
.text:000000000040838E                 lea     rdx, ds:0[rax*4]
.text:0000000000408396                 mov     rax, [rbp+var_578]
.text:000000000040839D                 add     rax, rdx
.text:00000000004083A0                 mov     edx, [rax]
.text:00000000004083A2                 mov     rax, [rbp+var_580]
.text:00000000004083A9                 shr     rax, 20h
.text:00000000004083AD                 mov     esi, eax
.text:00000000004083AF                 mov     rax, [rbp+var_590]
.text:00000000004083B6                 movzx   eax, byte ptr [rax]
.text:00000000004083B9                 movzx   eax, al
.text:00000000004083BC                 mov     ecx, [rbp+var_584]
.text:00000000004083C2                 mov     edi, ecx
.text:00000000004083C4                 sar     edi, 2
.text:00000000004083C7                 xor     esi, edx
.text:00000000004083C9                 mov     rcx, [rbp+var_590]
.text:00000000004083D0                 movsxd  rdi, edi
.text:00000000004083D3                 movsxd  rdx, eax
.text:00000000004083D6                 mov     rax, rdx
.text:00000000004083D9                 shl     rax, 3
.text:00000000004083DD                 add     rax, rdx
.text:00000000004083E0                 add     rax, rdi
.text:00000000004083E3                 mov     [rcx+rax*4+4], esi
.text:00000000004083E7                 sub     [rbp+var_584], 4
.text:00000000004083EE                 jmp     loc_408356
.text:00000000004083F3 ; ---------------------------------------------------------------------------
.text:00000000004083F3
.text:00000000004083F3 loc_4083F3:                             ; CODE XREF: sub_405008+3355↑j
.text:00000000004083F3                 mov     rax, [rbp+var_590]
.text:00000000004083FA                 movzx   eax, byte ptr [rax]
.text:00000000004083FD                 movzx   eax, al
.text:0000000000408400                 movsxd  rdx, eax
.text:0000000000408403                 mov     rax, rdx
.text:0000000000408406                 shl     rax, 3
.text:000000000040840A                 add     rax, rdx
.text:000000000040840D                 shl     rax, 2
.text:0000000000408411                 mov     rdx, [rbp+var_590]
.text:0000000000408418                 add     rax, rdx
.text:000000000040841B                 lea     rdx, [rax+4]
.text:000000000040841F                 mov     eax, [rbp+var_1A74]
.text:0000000000408425                 mov     rsi, rdx
.text:0000000000408428                 mov     edi, eax
.text:000000000040842A                 call    sub_402D64
.text:000000000040842F                 jmp     loc_408B6B
.text:0000000000408434 ; ---------------------------------------------------------------------------
.text:0000000000408434
.text:0000000000408434 loc_408434:                             ; CODE XREF: sub_405008+32D3↑j
.text:0000000000408434                 lea     rax, unk_40B1DF
.text:000000000040843B                 mov     [rbp+var_598], rax
.text:0000000000408442                 mov     rax, 0FC0128A35868855Eh
.text:000000000040844C                 mov     [rbp+var_5A0], rax
.text:0000000000408453                 mov     [rbp+var_5A4], 3
.text:000000000040845D                 call    getMem
.text:0000000000408462                 mov     [rbp+var_5B0], rax
.text:0000000000408469                 mov     rax, [rbp+var_5B0]
.text:0000000000408470                 movzx   eax, byte ptr [rax]
.text:0000000000408473                 movzx   eax, al
.text:0000000000408476                 lea     ecx, [rax+3]
.text:0000000000408479                 mov     edx, 66666667h
.text:000000000040847E                 mov     eax, ecx
.text:0000000000408480                 imul    edx
.text:0000000000408482                 sar     edx, 2
.text:0000000000408485                 mov     eax, ecx
.text:0000000000408487                 sar     eax, 1Fh
.text:000000000040848A                 sub     edx, eax
.text:000000000040848C                 mov     eax, edx
.text:000000000040848E                 shl     eax, 2
.text:0000000000408491                 add     eax, edx
.text:0000000000408493                 add     eax, eax
.text:0000000000408495                 sub     ecx, eax
.text:0000000000408497                 mov     edx, ecx
.text:0000000000408499                 mov     rax, [rbp+var_5B0]
.text:00000000004084A0                 mov     [rax], dl
.text:00000000004084A2                 sub     [rbp+var_5A4], 1
.text:00000000004084A9
.text:00000000004084A9 loc_4084A9:                             ; CODE XREF: sub_405008+3539↓j
.text:00000000004084A9                 cmp     [rbp+var_5A4], 0
.text:00000000004084B0                 js      loc_408546
.text:00000000004084B6                 mov     rdx, [rbp+var_5A0]
.text:00000000004084BD                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004084C7                 imul    rax, rdx
.text:00000000004084CB                 add     rax, 1
.text:00000000004084CF                 mov     [rbp+var_5A0], rax
.text:00000000004084D6                 mov     eax, [rbp+var_5A4]
.text:00000000004084DC                 sar     eax, 2
.text:00000000004084DF                 cdqe
.text:00000000004084E1                 lea     rdx, ds:0[rax*4]
.text:00000000004084E9                 mov     rax, [rbp+var_598]
.text:00000000004084F0                 add     rax, rdx
.text:00000000004084F3                 mov     edx, [rax]
.text:00000000004084F5                 mov     rax, [rbp+var_5A0]
.text:00000000004084FC                 shr     rax, 20h
.text:0000000000408500                 mov     esi, eax
.text:0000000000408502                 mov     rax, [rbp+var_5B0]
.text:0000000000408509                 movzx   eax, byte ptr [rax]
.text:000000000040850C                 movzx   eax, al
.text:000000000040850F                 mov     ecx, [rbp+var_5A4]
.text:0000000000408515                 mov     edi, ecx
.text:0000000000408517                 sar     edi, 2
.text:000000000040851A                 xor     esi, edx
.text:000000000040851C                 mov     rcx, [rbp+var_5B0]
.text:0000000000408523                 movsxd  rdi, edi
.text:0000000000408526                 movsxd  rdx, eax
.text:0000000000408529                 mov     rax, rdx
.text:000000000040852C                 shl     rax, 3
.text:0000000000408530                 add     rax, rdx
.text:0000000000408533                 add     rax, rdi
.text:0000000000408536                 mov     [rcx+rax*4+4], esi
.text:000000000040853A                 sub     [rbp+var_5A4], 4
.text:0000000000408541                 jmp     loc_4084A9
.text:0000000000408546 ; ---------------------------------------------------------------------------
.text:0000000000408546
.text:0000000000408546 loc_408546:                             ; CODE XREF: sub_405008+34A8↑j
.text:0000000000408546                 mov     rax, [rbp+var_5B0]
.text:000000000040854D                 movzx   eax, byte ptr [rax]
.text:0000000000408550                 movzx   eax, al
.text:0000000000408553                 movsxd  rdx, eax
.text:0000000000408556                 mov     rax, rdx
.text:0000000000408559                 shl     rax, 3
.text:000000000040855D                 add     rax, rdx
.text:0000000000408560                 shl     rax, 2
.text:0000000000408564                 mov     rdx, [rbp+var_5B0]
.text:000000000040856B                 add     rax, rdx
.text:000000000040856E                 lea     rdx, [rax+4]
.text:0000000000408572                 mov     eax, [rbp+var_1A74]
.text:0000000000408578                 mov     rsi, rdx
.text:000000000040857B                 mov     edi, eax
.text:000000000040857D                 call    sub_402D64
.text:0000000000408582                 lea     rax, unk_40B22B
.text:0000000000408589                 mov     [rbp+var_5B8], rax
.text:0000000000408590                 mov     rax, 70012E22414A0944h
.text:000000000040859A                 mov     [rbp+var_5C0], rax
.text:00000000004085A1                 mov     [rbp+var_5C4], 6
.text:00000000004085AB                 call    getMem
.text:00000000004085B0                 mov     [rbp+var_5D0], rax
.text:00000000004085B7                 mov     rax, [rbp+var_5D0]
.text:00000000004085BE                 movzx   eax, byte ptr [rax]
.text:00000000004085C1                 movzx   eax, al
.text:00000000004085C4                 lea     ecx, [rax+3]
.text:00000000004085C7                 mov     edx, 66666667h
.text:00000000004085CC                 mov     eax, ecx
.text:00000000004085CE                 imul    edx
.text:00000000004085D0                 sar     edx, 2
.text:00000000004085D3                 mov     eax, ecx
.text:00000000004085D5                 sar     eax, 1Fh
.text:00000000004085D8                 sub     edx, eax
.text:00000000004085DA                 mov     eax, edx
.text:00000000004085DC                 shl     eax, 2
.text:00000000004085DF                 add     eax, edx
.text:00000000004085E1                 add     eax, eax
.text:00000000004085E3                 sub     ecx, eax
.text:00000000004085E5                 mov     edx, ecx
.text:00000000004085E7                 mov     rax, [rbp+var_5D0]
.text:00000000004085EE                 mov     [rax], dl
.text:00000000004085F0                 sub     [rbp+var_5C4], 1
.text:00000000004085F7
.text:00000000004085F7 loc_4085F7:                             ; CODE XREF: sub_405008+3687↓j
.text:00000000004085F7                 cmp     [rbp+var_5C4], 0
.text:00000000004085FE                 js      loc_408694
.text:0000000000408604                 mov     rdx, [rbp+var_5C0]
.text:000000000040860B                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408615                 imul    rax, rdx
.text:0000000000408619                 add     rax, 1
.text:000000000040861D                 mov     [rbp+var_5C0], rax
.text:0000000000408624                 mov     eax, [rbp+var_5C4]
.text:000000000040862A                 sar     eax, 2
.text:000000000040862D                 cdqe
.text:000000000040862F                 lea     rdx, ds:0[rax*4]
.text:0000000000408637                 mov     rax, [rbp+var_5B8]
.text:000000000040863E                 add     rax, rdx
.text:0000000000408641                 mov     edx, [rax]
.text:0000000000408643                 mov     rax, [rbp+var_5C0]
.text:000000000040864A                 shr     rax, 20h
.text:000000000040864E                 mov     esi, eax
.text:0000000000408650                 mov     rax, [rbp+var_5D0]
.text:0000000000408657                 movzx   eax, byte ptr [rax]
.text:000000000040865A                 movzx   eax, al
.text:000000000040865D                 mov     ecx, [rbp+var_5C4]
.text:0000000000408663                 mov     edi, ecx
.text:0000000000408665                 sar     edi, 2
.text:0000000000408668                 xor     esi, edx
.text:000000000040866A                 mov     rcx, [rbp+var_5D0]
.text:0000000000408671                 movsxd  rdi, edi
.text:0000000000408674                 movsxd  rdx, eax
.text:0000000000408677                 mov     rax, rdx
.text:000000000040867A                 shl     rax, 3
.text:000000000040867E                 add     rax, rdx
.text:0000000000408681                 add     rax, rdi
.text:0000000000408684                 mov     [rcx+rax*4+4], esi
.text:0000000000408688                 sub     [rbp+var_5C4], 4
.text:000000000040868F                 jmp     loc_4085F7
.text:0000000000408694 ; ---------------------------------------------------------------------------
.text:0000000000408694
.text:0000000000408694 loc_408694:                             ; CODE XREF: sub_405008+35F6↑j
.text:0000000000408694                 mov     rax, [rbp+var_5D0]
.text:000000000040869B                 movzx   eax, byte ptr [rax]
.text:000000000040869E                 movzx   eax, al
.text:00000000004086A1                 movsxd  rdx, eax
.text:00000000004086A4                 mov     rax, rdx
.text:00000000004086A7                 shl     rax, 3
.text:00000000004086AB                 add     rax, rdx
.text:00000000004086AE                 shl     rax, 2
.text:00000000004086B2                 mov     rdx, [rbp+var_5D0]
.text:00000000004086B9                 add     rax, rdx
.text:00000000004086BC                 lea     rdx, [rax+4]
.text:00000000004086C0                 mov     eax, [rbp+var_1A74]
.text:00000000004086C6                 mov     esi, eax
.text:00000000004086C8                 mov     rdi, rdx
.text:00000000004086CB                 mov     eax, 0
.text:00000000004086D0                 call    sub_40A07C
.text:00000000004086D5                 mov     eax, [rbp+var_2C]
.text:00000000004086D8                 mov     edi, eax
.text:00000000004086DA                 call    sub_404398
.text:00000000004086DF                 jmp     loc_408B6B
.text:00000000004086E4 ; ---------------------------------------------------------------------------
.text:00000000004086E4
.text:00000000004086E4 loc_4086E4:                             ; CODE XREF: sub_405008+32C1↑j
.text:00000000004086E4                 lea     rax, unk_40B234
.text:00000000004086EB                 mov     [rbp+var_5D8], rax
.text:00000000004086F2                 mov     rax, 0B803DC72977FADE9h
.text:00000000004086FC                 mov     [rbp+var_5E0], rax
.text:0000000000408703                 mov     [rbp+var_5E4], 4
.text:000000000040870D                 call    getMem
.text:0000000000408712                 mov     [rbp+var_5F0], rax
.text:0000000000408719                 mov     rax, [rbp+var_5F0]
.text:0000000000408720                 movzx   eax, byte ptr [rax]
.text:0000000000408723                 movzx   eax, al
.text:0000000000408726                 lea     ecx, [rax+3]
.text:0000000000408729                 mov     edx, 66666667h
.text:000000000040872E                 mov     eax, ecx
.text:0000000000408730                 imul    edx
.text:0000000000408732                 sar     edx, 2
.text:0000000000408735                 mov     eax, ecx
.text:0000000000408737                 sar     eax, 1Fh
.text:000000000040873A                 sub     edx, eax
.text:000000000040873C                 mov     eax, edx
.text:000000000040873E                 shl     eax, 2
.text:0000000000408741                 add     eax, edx
.text:0000000000408743                 add     eax, eax
.text:0000000000408745                 sub     ecx, eax
.text:0000000000408747                 mov     edx, ecx
.text:0000000000408749                 mov     rax, [rbp+var_5F0]
.text:0000000000408750                 mov     [rax], dl
.text:0000000000408752                 sub     [rbp+var_5E4], 1
.text:0000000000408759
.text:0000000000408759 loc_408759:                             ; CODE XREF: sub_405008+37E9↓j
.text:0000000000408759                 cmp     [rbp+var_5E4], 0
.text:0000000000408760                 js      loc_4087F6
.text:0000000000408766                 mov     rdx, [rbp+var_5E0]
.text:000000000040876D                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408777                 imul    rax, rdx
.text:000000000040877B                 add     rax, 1
.text:000000000040877F                 mov     [rbp+var_5E0], rax
.text:0000000000408786                 mov     eax, [rbp+var_5E4]
.text:000000000040878C                 sar     eax, 2
.text:000000000040878F                 cdqe
.text:0000000000408791                 lea     rdx, ds:0[rax*4]
.text:0000000000408799                 mov     rax, [rbp+var_5D8]
.text:00000000004087A0                 add     rax, rdx
.text:00000000004087A3                 mov     edx, [rax]
.text:00000000004087A5                 mov     rax, [rbp+var_5E0]
.text:00000000004087AC                 shr     rax, 20h
.text:00000000004087B0                 mov     esi, eax
.text:00000000004087B2                 mov     rax, [rbp+var_5F0]
.text:00000000004087B9                 movzx   eax, byte ptr [rax]
.text:00000000004087BC                 movzx   eax, al
.text:00000000004087BF                 mov     ecx, [rbp+var_5E4]
.text:00000000004087C5                 mov     edi, ecx
.text:00000000004087C7                 sar     edi, 2
.text:00000000004087CA                 xor     esi, edx
.text:00000000004087CC                 mov     rcx, [rbp+var_5F0]
.text:00000000004087D3                 movsxd  rdi, edi
.text:00000000004087D6                 movsxd  rdx, eax
.text:00000000004087D9                 mov     rax, rdx
.text:00000000004087DC                 shl     rax, 3
.text:00000000004087E0                 add     rax, rdx
.text:00000000004087E3                 add     rax, rdi
.text:00000000004087E6                 mov     [rcx+rax*4+4], esi
.text:00000000004087EA                 sub     [rbp+var_5E4], 4
.text:00000000004087F1                 jmp     loc_408759
.text:00000000004087F6 ; ---------------------------------------------------------------------------
.text:00000000004087F6
.text:00000000004087F6 loc_4087F6:                             ; CODE XREF: sub_405008+3758↑j
.text:00000000004087F6                 mov     rax, [rbp+var_5F0]
.text:00000000004087FD                 movzx   eax, byte ptr [rax]
.text:0000000000408800                 movzx   eax, al
.text:0000000000408803                 movsxd  rdx, eax
.text:0000000000408806                 mov     rax, rdx
.text:0000000000408809                 shl     rax, 3
.text:000000000040880D                 add     rax, rdx
.text:0000000000408810                 shl     rax, 2
.text:0000000000408814                 mov     rdx, [rbp+var_5F0]
.text:000000000040881B                 add     rax, rdx
.text:000000000040881E                 lea     rdx, [rax+4]
.text:0000000000408822                 lea     rax, [rbp+var_A60]
.text:0000000000408829                 mov     [rbp+var_5F8], rax
.text:0000000000408830                 mov     [rbp+var_600], rdx
.text:0000000000408837                 mov     rax, [rbp+var_5F8]
.text:000000000040883E                 mov     [rbp+var_608], rax
.text:0000000000408845                 mov     rax, [rbp+var_600]
.text:000000000040884C                 mov     [rbp+var_610], rax
.text:0000000000408853
.text:0000000000408853 loc_408853:                             ; CODE XREF: sub_405008+3897↓j
.text:0000000000408853                 mov     rax, [rbp+var_608]
.text:000000000040885A                 lea     rdx, [rax+1]
.text:000000000040885E                 mov     [rbp+var_608], rdx
.text:0000000000408865                 movzx   eax, byte ptr [rax]
.text:0000000000408868                 mov     [rbp+var_611], al
.text:000000000040886E                 mov     rax, [rbp+var_610]
.text:0000000000408875                 lea     rdx, [rax+1]
.text:0000000000408879                 mov     [rbp+var_610], rdx
.text:0000000000408880                 movzx   eax, byte ptr [rax]
.text:0000000000408883                 mov     [rbp+var_612], al
.text:0000000000408889                 cmp     [rbp+var_611], 0
.text:0000000000408890                 jz      short loc_4088A1
.text:0000000000408892                 movzx   eax, [rbp+var_611]
.text:0000000000408899                 cmp     al, [rbp+var_612]
.text:000000000040889F                 jz      short loc_408853
.text:00000000004088A1
.text:00000000004088A1 loc_4088A1:                             ; CODE XREF: sub_405008+3888↑j
.text:00000000004088A1                 movzx   eax, [rbp+var_611]
.text:00000000004088A8                 cmp     al, [rbp+var_612]
.text:00000000004088AE                 setz    al
.text:00000000004088B1                 movzx   eax, al
.text:00000000004088B4                 test    eax, eax
.text:00000000004088B6                 setnz   al
.text:00000000004088B9                 test    al, al
.text:00000000004088BB                 jz      loc_408A14
.text:00000000004088C1                 lea     rax, unk_40B1DF
.text:00000000004088C8                 mov     [rbp+var_620], rax
.text:00000000004088CF                 mov     rax, 0FC0128A35868855Eh
.text:00000000004088D9                 mov     [rbp+var_628], rax
.text:00000000004088E0                 mov     [rbp+var_62C], 3
.text:00000000004088EA                 call    getMem
.text:00000000004088EF                 mov     [rbp+var_638], rax
.text:00000000004088F6                 mov     rax, [rbp+var_638]
.text:00000000004088FD                 movzx   eax, byte ptr [rax]
.text:0000000000408900                 movzx   eax, al
.text:0000000000408903                 lea     ecx, [rax+3]
.text:0000000000408906                 mov     edx, 66666667h
.text:000000000040890B                 mov     eax, ecx
.text:000000000040890D                 imul    edx
.text:000000000040890F                 sar     edx, 2
.text:0000000000408912                 mov     eax, ecx
.text:0000000000408914                 sar     eax, 1Fh
.text:0000000000408917                 sub     edx, eax
.text:0000000000408919                 mov     eax, edx
.text:000000000040891B                 shl     eax, 2
.text:000000000040891E                 add     eax, edx
.text:0000000000408920                 add     eax, eax
.text:0000000000408922                 sub     ecx, eax
.text:0000000000408924                 mov     edx, ecx
.text:0000000000408926                 mov     rax, [rbp+var_638]
.text:000000000040892D                 mov     [rax], dl
.text:000000000040892F                 sub     [rbp+var_62C], 1
.text:0000000000408936
.text:0000000000408936 loc_408936:                             ; CODE XREF: sub_405008+39C6↓j
.text:0000000000408936                 cmp     [rbp+var_62C], 0
.text:000000000040893D                 js      loc_4089D3
.text:0000000000408943                 mov     rdx, [rbp+var_628]
.text:000000000040894A                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408954                 imul    rax, rdx
.text:0000000000408958                 add     rax, 1
.text:000000000040895C                 mov     [rbp+var_628], rax
.text:0000000000408963                 mov     eax, [rbp+var_62C]
.text:0000000000408969                 sar     eax, 2
.text:000000000040896C                 cdqe
.text:000000000040896E                 lea     rdx, ds:0[rax*4]
.text:0000000000408976                 mov     rax, [rbp+var_620]
.text:000000000040897D                 add     rax, rdx
.text:0000000000408980                 mov     edx, [rax]
.text:0000000000408982                 mov     rax, [rbp+var_628]
.text:0000000000408989                 shr     rax, 20h
.text:000000000040898D                 mov     esi, eax
.text:000000000040898F                 mov     rax, [rbp+var_638]
.text:0000000000408996                 movzx   eax, byte ptr [rax]
.text:0000000000408999                 movzx   eax, al
.text:000000000040899C                 mov     ecx, [rbp+var_62C]
.text:00000000004089A2                 mov     edi, ecx
.text:00000000004089A4                 sar     edi, 2
.text:00000000004089A7                 xor     esi, edx
.text:00000000004089A9                 mov     rcx, [rbp+var_638]
.text:00000000004089B0                 movsxd  rdi, edi
.text:00000000004089B3                 movsxd  rdx, eax
.text:00000000004089B6                 mov     rax, rdx
.text:00000000004089B9                 shl     rax, 3
.text:00000000004089BD                 add     rax, rdx
.text:00000000004089C0                 add     rax, rdi
.text:00000000004089C3                 mov     [rcx+rax*4+4], esi
.text:00000000004089C7                 sub     [rbp+var_62C], 4
.text:00000000004089CE                 jmp     loc_408936
.text:00000000004089D3 ; ---------------------------------------------------------------------------
.text:00000000004089D3
.text:00000000004089D3 loc_4089D3:                             ; CODE XREF: sub_405008+3935↑j
.text:00000000004089D3                 mov     rax, [rbp+var_638]
.text:00000000004089DA                 movzx   eax, byte ptr [rax]
.text:00000000004089DD                 movzx   eax, al
.text:00000000004089E0                 movsxd  rdx, eax
.text:00000000004089E3                 mov     rax, rdx
.text:00000000004089E6                 shl     rax, 3
.text:00000000004089EA                 add     rax, rdx
.text:00000000004089ED                 shl     rax, 2
.text:00000000004089F1                 mov     rdx, [rbp+var_638]
.text:00000000004089F8                 add     rax, rdx
.text:00000000004089FB                 lea     rdx, [rax+4]
.text:00000000004089FF                 mov     eax, [rbp+var_1A74]
.text:0000000000408A05                 mov     rsi, rdx
.text:0000000000408A08                 mov     edi, eax
.text:0000000000408A0A                 call    sub_402D64
.text:0000000000408A0F                 jmp     loc_408B6B
.text:0000000000408A14 ; ---------------------------------------------------------------------------
.text:0000000000408A14
.text:0000000000408A14 loc_408A14:                             ; CODE XREF: sub_405008+38B3↑j
.text:0000000000408A14                 lea     rax, unk_40B141
.text:0000000000408A1B                 mov     [rbp+var_640], rax
.text:0000000000408A22                 mov     rax, 4F0BB9E75EB58B89h
.text:0000000000408A2C                 mov     [rbp+var_648], rax
.text:0000000000408A33                 mov     [rbp+var_64C], 6
.text:0000000000408A3D                 call    getMem
.text:0000000000408A42                 mov     [rbp+var_658], rax
.text:0000000000408A49                 mov     rax, [rbp+var_658]
.text:0000000000408A50                 movzx   eax, byte ptr [rax]
.text:0000000000408A53                 movzx   eax, al
.text:0000000000408A56                 lea     ecx, [rax+3]
.text:0000000000408A59                 mov     edx, 66666667h
.text:0000000000408A5E                 mov     eax, ecx
.text:0000000000408A60                 imul    edx
.text:0000000000408A62                 sar     edx, 2
.text:0000000000408A65                 mov     eax, ecx
.text:0000000000408A67                 sar     eax, 1Fh
.text:0000000000408A6A                 sub     edx, eax
.text:0000000000408A6C                 mov     eax, edx
.text:0000000000408A6E                 shl     eax, 2
.text:0000000000408A71                 add     eax, edx
.text:0000000000408A73                 add     eax, eax
.text:0000000000408A75                 sub     ecx, eax
.text:0000000000408A77                 mov     edx, ecx
.text:0000000000408A79                 mov     rax, [rbp+var_658]
.text:0000000000408A80                 mov     [rax], dl
.text:0000000000408A82                 sub     [rbp+var_64C], 1
.text:0000000000408A89
.text:0000000000408A89 loc_408A89:                             ; CODE XREF: sub_405008+3B19↓j
.text:0000000000408A89                 cmp     [rbp+var_64C], 0
.text:0000000000408A90                 js      loc_408B26
.text:0000000000408A96                 mov     rdx, [rbp+var_648]
.text:0000000000408A9D                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408AA7                 imul    rax, rdx
.text:0000000000408AAB                 add     rax, 1
.text:0000000000408AAF                 mov     [rbp+var_648], rax
.text:0000000000408AB6                 mov     eax, [rbp+var_64C]
.text:0000000000408ABC                 sar     eax, 2
.text:0000000000408ABF                 cdqe
.text:0000000000408AC1                 lea     rdx, ds:0[rax*4]
.text:0000000000408AC9                 mov     rax, [rbp+var_640]
.text:0000000000408AD0                 add     rax, rdx
.text:0000000000408AD3                 mov     edx, [rax]
.text:0000000000408AD5                 mov     rax, [rbp+var_648]
.text:0000000000408ADC                 shr     rax, 20h
.text:0000000000408AE0                 mov     esi, eax
.text:0000000000408AE2                 mov     rax, [rbp+var_658]
.text:0000000000408AE9                 movzx   eax, byte ptr [rax]
.text:0000000000408AEC                 movzx   eax, al
.text:0000000000408AEF                 mov     ecx, [rbp+var_64C]
.text:0000000000408AF5                 mov     edi, ecx
.text:0000000000408AF7                 sar     edi, 2
.text:0000000000408AFA                 xor     esi, edx
.text:0000000000408AFC                 mov     rcx, [rbp+var_658]
.text:0000000000408B03                 movsxd  rdi, edi
.text:0000000000408B06                 movsxd  rdx, eax
.text:0000000000408B09                 mov     rax, rdx
.text:0000000000408B0C                 shl     rax, 3
.text:0000000000408B10                 add     rax, rdx
.text:0000000000408B13                 add     rax, rdi
.text:0000000000408B16                 mov     [rcx+rax*4+4], esi
.text:0000000000408B1A                 sub     [rbp+var_64C], 4
.text:0000000000408B21                 jmp     loc_408A89
.text:0000000000408B26 ; ---------------------------------------------------------------------------
.text:0000000000408B26
.text:0000000000408B26 loc_408B26:                             ; CODE XREF: sub_405008+3A88↑j
.text:0000000000408B26                 mov     rax, [rbp+var_658]
.text:0000000000408B2D                 movzx   eax, byte ptr [rax]
.text:0000000000408B30                 movzx   eax, al
.text:0000000000408B33                 movsxd  rdx, eax
.text:0000000000408B36                 mov     rax, rdx
.text:0000000000408B39                 shl     rax, 3
.text:0000000000408B3D                 add     rax, rdx
.text:0000000000408B40                 shl     rax, 2
.text:0000000000408B44                 mov     rdx, [rbp+var_658]
.text:0000000000408B4B                 add     rax, rdx
.text:0000000000408B4E                 lea     rdx, [rax+4]
.text:0000000000408B52                 mov     eax, [rbp+var_1A74]
.text:0000000000408B58                 mov     rsi, rdx
.text:0000000000408B5B                 mov     edi, eax
.text:0000000000408B5D                 call    sub_402D64
.text:0000000000408B62                 jmp     short loc_408B6B
.text:0000000000408B64 ; ---------------------------------------------------------------------------
.text:0000000000408B64
.text:0000000000408B64 loc_408B64:                             ; CODE XREF: sub_405008+19B↑j
.text:0000000000408B64                 nop
.text:0000000000408B65                 jmp     short loc_408B6B
.text:0000000000408B67 ; ---------------------------------------------------------------------------
.text:0000000000408B67
.text:0000000000408B67 loc_408B67:                             ; CODE XREF: sub_405008+77D↑j
.text:0000000000408B67                 nop
.text:0000000000408B68                 jmp     short loc_408B6B
.text:0000000000408B6A ; ---------------------------------------------------------------------------
.text:0000000000408B6A
.text:0000000000408B6A loc_408B6A:                             ; CODE XREF: sub_405008+22D1↑j
.text:0000000000408B6A                 nop
.text:0000000000408B6B
.text:0000000000408B6B loc_408B6B:                             ; CODE XREF: sub_405008+A2E↑j
.text:0000000000408B6B                                         ; sub_405008+18C4↑j ...
.text:0000000000408B6B                 mov     rax, fs:28h
.text:0000000000408B74                 mov     rbx, rax
.text:0000000000408B77                 mov     rax, rbx
.text:0000000000408B7A                 cmp     [rbp+var_28], rax
.text:0000000000408B7E                 setnz   al
.text:0000000000408B81                 test    al, al
.text:0000000000408B83                 jz      loc_408CD4
.text:0000000000408B89                 lea     rax, unk_40B239
.text:0000000000408B90                 mov     [rbp+var_660], rax
.text:0000000000408B97                 mov     rax, 52E8590ADABBDF82h
.text:0000000000408BA1                 mov     [rbp+var_668], rax
.text:0000000000408BA8                 mov     [rbp+var_66C], 11h
.text:0000000000408BB2                 call    getMem
.text:0000000000408BB7                 mov     [rbp+var_678], rax
.text:0000000000408BBE                 mov     rax, [rbp+var_678]
.text:0000000000408BC5                 movzx   eax, byte ptr [rax]
.text:0000000000408BC8                 movzx   eax, al
.text:0000000000408BCB                 lea     ecx, [rax+3]
.text:0000000000408BCE                 mov     edx, 66666667h
.text:0000000000408BD3                 mov     eax, ecx
.text:0000000000408BD5                 imul    edx
.text:0000000000408BD7                 sar     edx, 2
.text:0000000000408BDA                 mov     eax, ecx
.text:0000000000408BDC                 sar     eax, 1Fh
.text:0000000000408BDF                 sub     edx, eax
.text:0000000000408BE1                 mov     eax, edx
.text:0000000000408BE3                 shl     eax, 2
.text:0000000000408BE6                 add     eax, edx
.text:0000000000408BE8                 add     eax, eax
.text:0000000000408BEA                 sub     ecx, eax
.text:0000000000408BEC                 mov     edx, ecx
.text:0000000000408BEE                 mov     rax, [rbp+var_678]
.text:0000000000408BF5                 mov     [rax], dl
.text:0000000000408BF7                 sub     [rbp+var_66C], 1
.text:0000000000408BFE
.text:0000000000408BFE loc_408BFE:                             ; CODE XREF: sub_405008+3C8E↓j
.text:0000000000408BFE                 cmp     [rbp+var_66C], 0
.text:0000000000408C05                 js      loc_408C9B
.text:0000000000408C0B                 mov     rdx, [rbp+var_668]
.text:0000000000408C12                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408C1C                 imul    rax, rdx
.text:0000000000408C20                 add     rax, 1
.text:0000000000408C24                 mov     [rbp+var_668], rax
.text:0000000000408C2B                 mov     eax, [rbp+var_66C]
.text:0000000000408C31                 sar     eax, 2
.text:0000000000408C34                 cdqe
.text:0000000000408C36                 lea     rdx, ds:0[rax*4]
.text:0000000000408C3E                 mov     rax, [rbp+var_660]
.text:0000000000408C45                 add     rax, rdx
.text:0000000000408C48                 mov     edx, [rax]
.text:0000000000408C4A                 mov     rax, [rbp+var_668]
.text:0000000000408C51                 shr     rax, 20h
.text:0000000000408C55                 mov     esi, eax
.text:0000000000408C57                 mov     rax, [rbp+var_678]
.text:0000000000408C5E                 movzx   eax, byte ptr [rax]
.text:0000000000408C61                 movzx   eax, al
.text:0000000000408C64                 mov     ecx, [rbp+var_66C]
.text:0000000000408C6A                 mov     edi, ecx
.text:0000000000408C6C                 sar     edi, 2
.text:0000000000408C6F                 xor     esi, edx
.text:0000000000408C71                 mov     rcx, [rbp+var_678]
.text:0000000000408C78                 movsxd  rdi, edi
.text:0000000000408C7B                 movsxd  rdx, eax
.text:0000000000408C7E                 mov     rax, rdx
.text:0000000000408C81                 shl     rax, 3
.text:0000000000408C85                 add     rax, rdx
.text:0000000000408C88                 add     rax, rdi
.text:0000000000408C8B                 mov     [rcx+rax*4+4], esi
.text:0000000000408C8F                 sub     [rbp+var_66C], 4
.text:0000000000408C96                 jmp     loc_408BFE
.text:0000000000408C9B ; ---------------------------------------------------------------------------
.text:0000000000408C9B
.text:0000000000408C9B loc_408C9B:                             ; CODE XREF: sub_405008+3BFD↑j
.text:0000000000408C9B                 mov     rax, [rbp+var_678]
.text:0000000000408CA2                 movzx   eax, byte ptr [rax]
.text:0000000000408CA5                 movzx   eax, al
.text:0000000000408CA8                 movsxd  rdx, eax
.text:0000000000408CAB                 mov     rax, rdx
.text:0000000000408CAE                 shl     rax, 3
.text:0000000000408CB2                 add     rax, rdx
.text:0000000000408CB5                 shl     rax, 2
.text:0000000000408CB9                 mov     rdx, [rbp+var_678]
.text:0000000000408CC0                 add     rax, rdx
.text:0000000000408CC3                 add     rax, 4
.text:0000000000408CC7                 mov     rdi, rax
.text:0000000000408CCA                 mov     eax, 0
.text:0000000000408CCF                 call    sub_40A07C
.text:0000000000408CD4
.text:0000000000408CD4 loc_408CD4:                             ; CODE XREF: sub_405008+3B7B↑j
.text:0000000000408CD4                 nop
.text:0000000000408CD5                 add     rsp, 1A68h
.text:0000000000408CDC                 pop     rbx
.text:0000000000408CDD                 pop     r12
.text:0000000000408CDF                 pop     r13
.text:0000000000408CE1                 pop     rbp
.text:0000000000408CE2                 retn
.text:0000000000408CE2 ; } // starts at 405008
.text:0000000000408CE2 sub_405008      endp
.text:0000000000408CE2
.text:0000000000408CE3
.text:0000000000408CE3 ; =============== S U B R O U T I N E =======================================
.text:0000000000408CE3
.text:0000000000408CE3 ; Attributes: bp-based frame
.text:0000000000408CE3
.text:0000000000408CE3 sub_408CE3      proc near               ; DATA XREF: sub_408E38+4D↓o
.text:0000000000408CE3
.text:0000000000408CE3 var_38          = qword ptr -38h
.text:0000000000408CE3 var_28          = qword ptr -28h
.text:0000000000408CE3 var_1C          = dword ptr -1Ch
.text:0000000000408CE3 var_18          = qword ptr -18h
.text:0000000000408CE3 var_10          = qword ptr -10h
.text:0000000000408CE3 var_4           = dword ptr -4
.text:0000000000408CE3
.text:0000000000408CE3 ; __unwind {
.text:0000000000408CE3                 push    rbp
.text:0000000000408CE4                 mov     rbp, rsp
.text:0000000000408CE7                 sub     rsp, 40h
.text:0000000000408CEB                 mov     [rbp+var_38], rdi
.text:0000000000408CEF                 nop
.text:0000000000408CF0                 nop
.text:0000000000408CF1                 nop
.text:0000000000408CF2                 nop
.text:0000000000408CF3                 nop
.text:0000000000408CF4                 nop
.text:0000000000408CF5                 nop
.text:0000000000408CF6                 nop
.text:0000000000408CF7                 nop
.text:0000000000408CF8                 nop
.text:0000000000408CF9                 nop
.text:0000000000408CFA                 nop
.text:0000000000408CFB                 nop
.text:0000000000408CFC                 nop
.text:0000000000408CFD                 nop
.text:0000000000408CFE                 nop
.text:0000000000408CFF                 nop
.text:0000000000408D00                 nop
.text:0000000000408D01                 nop
.text:0000000000408D02                 nop
.text:0000000000408D03                 nop
.text:0000000000408D04                 call    sub_401C2B
.text:0000000000408D09                 mov     [rbp+var_4], eax
.text:0000000000408D0C                 cmp     [rbp+var_4], 0FFFFFFFFh
.text:0000000000408D10                 setnz   al
.text:0000000000408D13                 test    al, al
.text:0000000000408D15                 jz      loc_408E35
.text:0000000000408D1B                 mov     eax, [rbp+var_4]
.text:0000000000408D1E                 mov     edi, eax
.text:0000000000408D20                 call    sub_405008
.text:0000000000408D25                 lea     rax, dword_40B24E
.text:0000000000408D2C                 mov     [rbp+var_10], rax
.text:0000000000408D30                 mov     rax, 0B814DB44055C6C46h
.text:0000000000408D3A                 mov     [rbp+var_18], rax
.text:0000000000408D3E                 mov     [rbp+var_1C], 6
.text:0000000000408D45                 call    getMem
.text:0000000000408D4A                 mov     [rbp+var_28], rax
.text:0000000000408D4E                 mov     rax, [rbp+var_28]
.text:0000000000408D52                 movzx   eax, byte ptr [rax]
.text:0000000000408D55                 movzx   eax, al
.text:0000000000408D58                 lea     ecx, [rax+3]
.text:0000000000408D5B                 mov     edx, 66666667h
.text:0000000000408D60                 mov     eax, ecx
.text:0000000000408D62                 imul    edx
.text:0000000000408D64                 sar     edx, 2
.text:0000000000408D67                 mov     eax, ecx
.text:0000000000408D69                 sar     eax, 1Fh
.text:0000000000408D6C                 sub     edx, eax
.text:0000000000408D6E                 mov     eax, edx
.text:0000000000408D70                 shl     eax, 2
.text:0000000000408D73                 add     eax, edx
.text:0000000000408D75                 add     eax, eax
.text:0000000000408D77                 sub     ecx, eax
.text:0000000000408D79                 mov     edx, ecx
.text:0000000000408D7B                 mov     rax, [rbp+var_28]
.text:0000000000408D7F                 mov     [rax], dl
.text:0000000000408D81                 sub     [rbp+var_1C], 1
.text:0000000000408D85
.text:0000000000408D85 loc_408D85:                             ; CODE XREF: sub_408CE3+118↓j
.text:0000000000408D85                 cmp     [rbp+var_1C], 0
.text:0000000000408D89                 js      short loc_408DFD
.text:0000000000408D8B                 mov     rdx, [rbp+var_18]
.text:0000000000408D8F                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408D99                 imul    rax, rdx
.text:0000000000408D9D                 add     rax, 1
.text:0000000000408DA1                 mov     [rbp+var_18], rax
.text:0000000000408DA5                 mov     eax, [rbp+var_1C]
.text:0000000000408DA8                 sar     eax, 2
.text:0000000000408DAB                 cdqe
.text:0000000000408DAD                 lea     rdx, ds:0[rax*4]
.text:0000000000408DB5                 mov     rax, [rbp+var_10]
.text:0000000000408DB9                 add     rax, rdx
.text:0000000000408DBC                 mov     edx, [rax]
.text:0000000000408DBE                 mov     rax, [rbp+var_18]
.text:0000000000408DC2                 shr     rax, 20h
.text:0000000000408DC6                 mov     esi, eax
.text:0000000000408DC8                 mov     rax, [rbp+var_28]
.text:0000000000408DCC                 movzx   eax, byte ptr [rax]
.text:0000000000408DCF                 movzx   eax, al
.text:0000000000408DD2                 mov     ecx, [rbp+var_1C]
.text:0000000000408DD5                 mov     edi, ecx
.text:0000000000408DD7                 sar     edi, 2
.text:0000000000408DDA                 xor     esi, edx
.text:0000000000408DDC                 mov     rcx, [rbp+var_28]
.text:0000000000408DE0                 movsxd  rdi, edi
.text:0000000000408DE3                 movsxd  rdx, eax
.text:0000000000408DE6                 mov     rax, rdx
.text:0000000000408DE9                 shl     rax, 3
.text:0000000000408DED                 add     rax, rdx
.text:0000000000408DF0                 add     rax, rdi
.text:0000000000408DF3                 mov     [rcx+rax*4+4], esi
.text:0000000000408DF7                 sub     [rbp+var_1C], 4
.text:0000000000408DFB                 jmp     short loc_408D85
.text:0000000000408DFD ; ---------------------------------------------------------------------------
.text:0000000000408DFD
.text:0000000000408DFD loc_408DFD:                             ; CODE XREF: sub_408CE3+A6↑j
.text:0000000000408DFD                 mov     rax, [rbp+var_28]
.text:0000000000408E01                 movzx   eax, byte ptr [rax]
.text:0000000000408E04                 movzx   eax, al
.text:0000000000408E07                 movsxd  rdx, eax
.text:0000000000408E0A                 mov     rax, rdx
.text:0000000000408E0D                 shl     rax, 3
.text:0000000000408E11                 add     rax, rdx
.text:0000000000408E14                 shl     rax, 2
.text:0000000000408E18                 mov     rdx, [rbp+var_28]
.text:0000000000408E1C                 add     rax, rdx
.text:0000000000408E1F                 lea     rdx, [rax+4]
.text:0000000000408E23                 mov     eax, [rbp+var_4]
.text:0000000000408E26                 mov     esi, eax
.text:0000000000408E28                 mov     rdi, rdx
.text:0000000000408E2B                 mov     eax, 0
.text:0000000000408E30                 call    sub_40A07C
.text:0000000000408E35
.text:0000000000408E35 loc_408E35:                             ; CODE XREF: sub_408CE3+32↑j
.text:0000000000408E35                 nop
.text:0000000000408E36                 leave
.text:0000000000408E37                 retn
.text:0000000000408E37 ; } // starts at 408CE3
.text:0000000000408E37 sub_408CE3      endp
.text:0000000000408E37
.text:0000000000408E38
.text:0000000000408E38 ; =============== S U B R O U T I N E =======================================
.text:0000000000408E38
.text:0000000000408E38 ; Attributes: bp-based frame
.text:0000000000408E38
.text:0000000000408E38 sub_408E38      proc near               ; DATA XREF: .got.plt:off_60C070↓o
.text:0000000000408E38
.text:0000000000408E38 var_34          = dword ptr -34h
.text:0000000000408E38 var_30          = qword ptr -30h
.text:0000000000408E38 var_24          = dword ptr -24h
.text:0000000000408E38 var_20          = qword ptr -20h
.text:0000000000408E38 var_18          = qword ptr -18h
.text:0000000000408E38
.text:0000000000408E38 ; __unwind {
.text:0000000000408E38                 push    rbp
.text:0000000000408E39                 mov     rbp, rsp
.text:0000000000408E3C                 push    rbx
.text:0000000000408E3D                 sub     rsp, 38h
.text:0000000000408E41                 mov     [rbp+var_34], edi
.text:0000000000408E44                 nop
.text:0000000000408E45                 nop
.text:0000000000408E46                 nop
.text:0000000000408E47                 nop
.text:0000000000408E48                 nop
.text:0000000000408E49                 nop
.text:0000000000408E4A                 nop
.text:0000000000408E4B                 nop
.text:0000000000408E4C                 nop
.text:0000000000408E4D                 nop
.text:0000000000408E4E                 nop
.text:0000000000408E4F                 nop
.text:0000000000408E50                 nop
.text:0000000000408E51                 nop
.text:0000000000408E52                 nop
.text:0000000000408E53                 nop
.text:0000000000408E54                 nop
.text:0000000000408E55                 nop
.text:0000000000408E56                 nop
.text:0000000000408E57                 nop
.text:0000000000408E58                 nop
.text:0000000000408E59                 call    sub_409E68
.text:0000000000408E5E                 call    sub_401B84
.text:0000000000408E63                 test    al, al
.text:0000000000408E65                 jz      short loc_408E77
.text:0000000000408E67                 call    sub_4019A0
.text:0000000000408E6C                 test    al, al
.text:0000000000408E6E                 jz      short loc_408E77
.text:0000000000408E70                 mov     eax, 1
.text:0000000000408E75                 jmp     short loc_408E7C
.text:0000000000408E77 ; ---------------------------------------------------------------------------
.text:0000000000408E77
.text:0000000000408E77 loc_408E77:                             ; CODE XREF: sub_408E38+2D↑j
.text:0000000000408E77                                         ; sub_408E38+36↑j
.text:0000000000408E77                 mov     eax, 0
.text:0000000000408E7C
.text:0000000000408E7C loc_408E7C:                             ; CODE XREF: sub_408E38+3D↑j
.text:0000000000408E7C                 test    al, al
.text:0000000000408E7E                 jz      short loc_408E91
.text:0000000000408E80                 call    sub_400B97
.text:0000000000408E85                 lea     rdi, sub_408CE3
.text:0000000000408E8C                 call    sub_408FAB
.text:0000000000408E91
.text:0000000000408E91 loc_408E91:                             ; CODE XREF: sub_408E38+46↑j
.text:0000000000408E91                 mov     ebx, cs:dword_60C26C
.text:0000000000408E97                 lea     rax, dword_40B257
.text:0000000000408E9E                 mov     [rbp+var_18], rax
.text:0000000000408EA2                 mov     rax, 0D806209B3D160872h
.text:0000000000408EAC                 mov     [rbp+var_20], rax
.text:0000000000408EB0                 mov     [rbp+var_24], 6
.text:0000000000408EB7                 call    getMem
.text:0000000000408EBC                 mov     [rbp+var_30], rax
.text:0000000000408EC0                 mov     rax, [rbp+var_30]
.text:0000000000408EC4                 movzx   eax, byte ptr [rax]
.text:0000000000408EC7                 movzx   eax, al
.text:0000000000408ECA                 lea     ecx, [rax+3]
.text:0000000000408ECD                 mov     edx, 66666667h
.text:0000000000408ED2                 mov     eax, ecx
.text:0000000000408ED4                 imul    edx
.text:0000000000408ED6                 sar     edx, 2
.text:0000000000408ED9                 mov     eax, ecx
.text:0000000000408EDB                 sar     eax, 1Fh
.text:0000000000408EDE                 sub     edx, eax
.text:0000000000408EE0                 mov     eax, edx
.text:0000000000408EE2                 shl     eax, 2
.text:0000000000408EE5                 add     eax, edx
.text:0000000000408EE7                 add     eax, eax
.text:0000000000408EE9                 sub     ecx, eax
.text:0000000000408EEB                 mov     edx, ecx
.text:0000000000408EED                 mov     rax, [rbp+var_30]
.text:0000000000408EF1                 mov     [rax], dl
.text:0000000000408EF3                 sub     [rbp+var_24], 1
.text:0000000000408EF7
.text:0000000000408EF7 loc_408EF7:                             ; CODE XREF: sub_408E38+135↓j
.text:0000000000408EF7                 cmp     [rbp+var_24], 0
.text:0000000000408EFB                 js      short loc_408F6F
.text:0000000000408EFD                 mov     rdx, [rbp+var_20]
.text:0000000000408F01                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000408F0B                 imul    rax, rdx
.text:0000000000408F0F                 add     rax, 1
.text:0000000000408F13                 mov     [rbp+var_20], rax
.text:0000000000408F17                 mov     eax, [rbp+var_24]
.text:0000000000408F1A                 sar     eax, 2
.text:0000000000408F1D                 cdqe
.text:0000000000408F1F                 lea     rdx, ds:0[rax*4]
.text:0000000000408F27                 mov     rax, [rbp+var_18]
.text:0000000000408F2B                 add     rax, rdx
.text:0000000000408F2E                 mov     edx, [rax]
.text:0000000000408F30                 mov     rax, [rbp+var_20]
.text:0000000000408F34                 shr     rax, 20h
.text:0000000000408F38                 mov     esi, eax
.text:0000000000408F3A                 mov     rax, [rbp+var_30]
.text:0000000000408F3E                 movzx   eax, byte ptr [rax]
.text:0000000000408F41                 movzx   eax, al
.text:0000000000408F44                 mov     ecx, [rbp+var_24]
.text:0000000000408F47                 mov     edi, ecx
.text:0000000000408F49                 sar     edi, 2
.text:0000000000408F4C                 xor     esi, edx
.text:0000000000408F4E                 mov     rcx, [rbp+var_30]
.text:0000000000408F52                 movsxd  rdi, edi
.text:0000000000408F55                 movsxd  rdx, eax
.text:0000000000408F58                 mov     rax, rdx
.text:0000000000408F5B                 shl     rax, 3
.text:0000000000408F5F                 add     rax, rdx
.text:0000000000408F62                 add     rax, rdi
.text:0000000000408F65                 mov     [rcx+rax*4+4], esi
.text:0000000000408F69                 sub     [rbp+var_24], 4
.text:0000000000408F6D                 jmp     short loc_408EF7
.text:0000000000408F6F ; ---------------------------------------------------------------------------
.text:0000000000408F6F
.text:0000000000408F6F loc_408F6F:                             ; CODE XREF: sub_408E38+C3↑j
.text:0000000000408F6F                 mov     rax, [rbp+var_30]
.text:0000000000408F73                 movzx   eax, byte ptr [rax]
.text:0000000000408F76                 movzx   eax, al
.text:0000000000408F79                 movsxd  rdx, eax
.text:0000000000408F7C                 mov     rax, rdx
.text:0000000000408F7F                 shl     rax, 3
.text:0000000000408F83                 add     rax, rdx
.text:0000000000408F86                 shl     rax, 2
.text:0000000000408F8A                 mov     rdx, [rbp+var_30]
.text:0000000000408F8E                 add     rax, rdx
.text:0000000000408F91                 add     rax, 4
.text:0000000000408F95                 mov     esi, ebx
.text:0000000000408F97                 mov     rdi, rax
.text:0000000000408F9A                 mov     eax, 0
.text:0000000000408F9F                 call    sub_40A07C
.text:0000000000408FA4                 add     rsp, 38h
.text:0000000000408FA8                 pop     rbx
.text:0000000000408FA9                 pop     rbp
.text:0000000000408FAA                 retn
.text:0000000000408FAA ; } // starts at 408E38
.text:0000000000408FAA sub_408E38      endp
.text:0000000000408FAA
.text:0000000000408FAB
.text:0000000000408FAB ; =============== S U B R O U T I N E =======================================
.text:0000000000408FAB
.text:0000000000408FAB ; Attributes: bp-based frame
.text:0000000000408FAB
.text:0000000000408FAB sub_408FAB      proc near               ; CODE XREF: sub_408E38+54↑p
.text:0000000000408FAB
.text:0000000000408FAB var_8           = qword ptr -8
.text:0000000000408FAB
.text:0000000000408FAB ; __unwind {
.text:0000000000408FAB                 push    rbp
.text:0000000000408FAC                 mov     rbp, rsp
.text:0000000000408FAF                 sub     rsp, 10h
.text:0000000000408FB3                 mov     [rbp+var_8], rdi
.text:0000000000408FB7                 mov     rax, [rbp+var_8]
.text:0000000000408FBB                 mov     edx, 0
.text:0000000000408FC0                 mov     esi, 0
.text:0000000000408FC5                 mov     rdi, rax
.text:0000000000408FC8                 call    sub_40A8C3
.text:0000000000408FCD                 nop
.text:0000000000408FCE                 leave
.text:0000000000408FCF                 retn
.text:0000000000408FCF ; } // starts at 408FAB
.text:0000000000408FCF sub_408FAB      endp
.text:0000000000408FCF
.text:0000000000408FD0
.text:0000000000408FD0 ; =============== S U B R O U T I N E =======================================
.text:0000000000408FD0
.text:0000000000408FD0 ; Attributes: bp-based frame
.text:0000000000408FD0
.text:0000000000408FD0 randData        proc near               ; CODE XREF: sub_4019A0+90↑p
.text:0000000000408FD0                                         ; sub_4019A0+97↑p ...
.text:0000000000408FD0
.text:0000000000408FD0 var_80          = byte ptr -80h
.text:0000000000408FD0 var_78          = qword ptr -78h
.text:0000000000408FD0 var_68          = qword ptr -68h
.text:0000000000408FD0 var_5C          = dword ptr -5Ch
.text:0000000000408FD0 var_58          = qword ptr -58h
.text:0000000000408FD0 var_50          = qword ptr -50h
.text:0000000000408FD0 var_48          = qword ptr -48h
.text:0000000000408FD0 var_3C          = dword ptr -3Ch
.text:0000000000408FD0 var_38          = qword ptr -38h
.text:0000000000408FD0 var_30          = qword ptr -30h
.text:0000000000408FD0 var_28          = qword ptr -28h
.text:0000000000408FD0 var_1C          = dword ptr -1Ch
.text:0000000000408FD0 var_18          = qword ptr -18h
.text:0000000000408FD0 var_10          = qword ptr -10h
.text:0000000000408FD0 var_4           = dword ptr -4
.text:0000000000408FD0
.text:0000000000408FD0 ; __unwind {
.text:0000000000408FD0                 push    rbp
.text:0000000000408FD1                 mov     rbp, rsp
.text:0000000000408FD4                 add     rsp, 0FFFFFFFFFFFFFF80h
.text:0000000000408FD8                 movzx   eax, cs:byte_60C3C8
.text:0000000000408FDF                 xor     eax, 1
.text:0000000000408FE2                 test    al, al
.text:0000000000408FE4                 jz      loc_40938D
.text:0000000000408FEA                 lea     rax, unk_40B260
.text:0000000000408FF1                 mov     [rbp+var_10], rax
.text:0000000000408FF5                 mov     rax, 65D58428FCC8F81Ah
.text:0000000000408FFF                 mov     [rbp+var_18], rax
.text:0000000000409003                 mov     [rbp+var_1C], 0Dh
.text:000000000040900A                 call    getMem
.text:000000000040900F                 mov     [rbp+var_28], rax
.text:0000000000409013                 mov     rax, [rbp+var_28]
.text:0000000000409017                 movzx   eax, byte ptr [rax]
.text:000000000040901A                 movzx   eax, al
.text:000000000040901D                 lea     ecx, [rax+3]
.text:0000000000409020                 mov     edx, 66666667h
.text:0000000000409025                 mov     eax, ecx
.text:0000000000409027                 imul    edx
.text:0000000000409029                 sar     edx, 2
.text:000000000040902C                 mov     eax, ecx
.text:000000000040902E                 sar     eax, 1Fh
.text:0000000000409031                 sub     edx, eax
.text:0000000000409033                 mov     eax, edx
.text:0000000000409035                 shl     eax, 2
.text:0000000000409038                 add     eax, edx
.text:000000000040903A                 add     eax, eax
.text:000000000040903C                 sub     ecx, eax
.text:000000000040903E                 mov     edx, ecx
.text:0000000000409040                 mov     rax, [rbp+var_28]
.text:0000000000409044                 mov     [rax], dl
.text:0000000000409046                 sub     [rbp+var_1C], 1
.text:000000000040904A
.text:000000000040904A loc_40904A:                             ; CODE XREF: randData+F0↓j
.text:000000000040904A                 cmp     [rbp+var_1C], 0
.text:000000000040904E                 js      short loc_4090C2
.text:0000000000409050                 mov     rdx, [rbp+var_18]
.text:0000000000409054                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040905E                 imul    rax, rdx
.text:0000000000409062                 add     rax, 1
.text:0000000000409066                 mov     [rbp+var_18], rax
.text:000000000040906A                 mov     eax, [rbp+var_1C]
.text:000000000040906D                 sar     eax, 2
.text:0000000000409070                 cdqe
.text:0000000000409072                 lea     rdx, ds:0[rax*4]
.text:000000000040907A                 mov     rax, [rbp+var_10]
.text:000000000040907E                 add     rax, rdx
.text:0000000000409081                 mov     edx, [rax]
.text:0000000000409083                 mov     rax, [rbp+var_18]
.text:0000000000409087                 shr     rax, 20h
.text:000000000040908B                 mov     esi, eax
.text:000000000040908D                 mov     rax, [rbp+var_28]
.text:0000000000409091                 movzx   eax, byte ptr [rax]
.text:0000000000409094                 movzx   eax, al
.text:0000000000409097                 mov     ecx, [rbp+var_1C]
.text:000000000040909A                 mov     edi, ecx
.text:000000000040909C                 sar     edi, 2
.text:000000000040909F                 xor     esi, edx
.text:00000000004090A1                 mov     rcx, [rbp+var_28]
.text:00000000004090A5                 movsxd  rdi, edi
.text:00000000004090A8                 movsxd  rdx, eax
.text:00000000004090AB                 mov     rax, rdx
.text:00000000004090AE                 shl     rax, 3
.text:00000000004090B2                 add     rax, rdx
.text:00000000004090B5                 add     rax, rdi
.text:00000000004090B8                 mov     [rcx+rax*4+4], esi
.text:00000000004090BC                 sub     [rbp+var_1C], 4
.text:00000000004090C0                 jmp     short loc_40904A
.text:00000000004090C2 ; ---------------------------------------------------------------------------
.text:00000000004090C2
.text:00000000004090C2 loc_4090C2:                             ; CODE XREF: randData+7E↑j
.text:00000000004090C2                 mov     rax, [rbp+var_28]
.text:00000000004090C6                 movzx   eax, byte ptr [rax]
.text:00000000004090C9                 movzx   eax, al
.text:00000000004090CC                 movsxd  rdx, eax
.text:00000000004090CF                 mov     rax, rdx
.text:00000000004090D2                 shl     rax, 3
.text:00000000004090D6                 add     rax, rdx
.text:00000000004090D9                 shl     rax, 2
.text:00000000004090DD                 mov     rdx, [rbp+var_28]
.text:00000000004090E1                 add     rax, rdx
.text:00000000004090E4                 lea     rcx, [rax+4]
.text:00000000004090E8                 lea     rax, [rbp+var_80]
.text:00000000004090EC                 mov     edx, 0
.text:00000000004090F1                 mov     rsi, rax
.text:00000000004090F4                 mov     rdi, rcx
.text:00000000004090F7                 mov     eax, 0
.text:00000000004090FC                 call    sub_40A07C
.text:0000000000409101                 mov     rax, [rbp+var_78]
.text:0000000000409105                 mov     rdx, rax
.text:0000000000409108                 mov     rax, cs:qword_60C3C0
.text:000000000040910F                 or      rax, rdx
.text:0000000000409112                 mov     cs:qword_60C3C0, rax
.text:0000000000409119                 mov     rax, [rbp+var_78]
.text:000000000040911D                 shl     rax, 20h
.text:0000000000409121                 mov     rdx, rax
.text:0000000000409124                 mov     rax, cs:qword_60C3C0
.text:000000000040912B                 or      rax, rdx
.text:000000000040912E                 mov     cs:qword_60C3C0, rax
.text:0000000000409135                 lea     rax, unk_40B271
.text:000000000040913C                 mov     [rbp+var_30], rax
.text:0000000000409140                 mov     rax, 84A2759DA3BC84F3h
.text:000000000040914A                 mov     [rbp+var_38], rax
.text:000000000040914E                 mov     [rbp+var_3C], 7
.text:0000000000409155                 call    getMem
.text:000000000040915A                 mov     [rbp+var_48], rax
.text:000000000040915E                 mov     rax, [rbp+var_48]
.text:0000000000409162                 movzx   eax, byte ptr [rax]
.text:0000000000409165                 movzx   eax, al
.text:0000000000409168                 lea     ecx, [rax+3]
.text:000000000040916B                 mov     edx, 66666667h
.text:0000000000409170                 mov     eax, ecx
.text:0000000000409172                 imul    edx
.text:0000000000409174                 sar     edx, 2
.text:0000000000409177                 mov     eax, ecx
.text:0000000000409179                 sar     eax, 1Fh
.text:000000000040917C                 sub     edx, eax
.text:000000000040917E                 mov     eax, edx
.text:0000000000409180                 shl     eax, 2
.text:0000000000409183                 add     eax, edx
.text:0000000000409185                 add     eax, eax
.text:0000000000409187                 sub     ecx, eax
.text:0000000000409189                 mov     edx, ecx
.text:000000000040918B                 mov     rax, [rbp+var_48]
.text:000000000040918F                 mov     [rax], dl
.text:0000000000409191                 sub     [rbp+var_3C], 1
.text:0000000000409195
.text:0000000000409195 loc_409195:                             ; CODE XREF: randData+23B↓j
.text:0000000000409195                 cmp     [rbp+var_3C], 0
.text:0000000000409199                 js      short loc_40920D
.text:000000000040919B                 mov     rdx, [rbp+var_38]
.text:000000000040919F                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004091A9                 imul    rax, rdx
.text:00000000004091AD                 add     rax, 1
.text:00000000004091B1                 mov     [rbp+var_38], rax
.text:00000000004091B5                 mov     eax, [rbp+var_3C]
.text:00000000004091B8                 sar     eax, 2
.text:00000000004091BB                 cdqe
.text:00000000004091BD                 lea     rdx, ds:0[rax*4]
.text:00000000004091C5                 mov     rax, [rbp+var_30]
.text:00000000004091C9                 add     rax, rdx
.text:00000000004091CC                 mov     edx, [rax]
.text:00000000004091CE                 mov     rax, [rbp+var_38]
.text:00000000004091D2                 shr     rax, 20h
.text:00000000004091D6                 mov     esi, eax
.text:00000000004091D8                 mov     rax, [rbp+var_48]
.text:00000000004091DC                 movzx   eax, byte ptr [rax]
.text:00000000004091DF                 movzx   eax, al
.text:00000000004091E2                 mov     ecx, [rbp+var_3C]
.text:00000000004091E5                 mov     edi, ecx
.text:00000000004091E7                 sar     edi, 2
.text:00000000004091EA                 xor     esi, edx
.text:00000000004091EC                 mov     rcx, [rbp+var_48]
.text:00000000004091F0                 movsxd  rdi, edi
.text:00000000004091F3                 movsxd  rdx, eax
.text:00000000004091F6                 mov     rax, rdx
.text:00000000004091F9                 shl     rax, 3
.text:00000000004091FD                 add     rax, rdx
.text:0000000000409200                 add     rax, rdi
.text:0000000000409203                 mov     [rcx+rax*4+4], esi
.text:0000000000409207                 sub     [rbp+var_3C], 4
.text:000000000040920B                 jmp     short loc_409195
.text:000000000040920D ; ---------------------------------------------------------------------------
.text:000000000040920D
.text:000000000040920D loc_40920D:                             ; CODE XREF: randData+1C9↑j
.text:000000000040920D                 mov     rax, [rbp+var_48]
.text:0000000000409211                 movzx   eax, byte ptr [rax]
.text:0000000000409214                 movzx   eax, al
.text:0000000000409217                 movsxd  rdx, eax
.text:000000000040921A                 mov     rax, rdx
.text:000000000040921D                 shl     rax, 3
.text:0000000000409221                 add     rax, rdx
.text:0000000000409224                 shl     rax, 2
.text:0000000000409228                 mov     rdx, [rbp+var_48]
.text:000000000040922C                 add     rax, rdx
.text:000000000040922F                 add     rax, 4
.text:0000000000409233                 mov     rdi, rax
.text:0000000000409236                 mov     eax, 0
.text:000000000040923B                 call    sub_40A07C
.text:0000000000409240                 mov     rdx, rax
.text:0000000000409243                 mov     rax, cs:qword_60C3C0
.text:000000000040924A                 xor     rax, rdx
.text:000000000040924D                 mov     cs:qword_60C3C0, rax
.text:0000000000409254                 lea     rax, unk_40B27A
.text:000000000040925B                 mov     [rbp+var_50], rax
.text:000000000040925F                 mov     rax, 0D27A6E13F0F2F672h
.text:0000000000409269                 mov     [rbp+var_58], rax
.text:000000000040926D                 mov     [rbp+var_5C], 8
.text:0000000000409274                 call    getMem
.text:0000000000409279                 mov     [rbp+var_68], rax
.text:000000000040927D                 mov     rax, [rbp+var_68]
.text:0000000000409281                 movzx   eax, byte ptr [rax]
.text:0000000000409284                 movzx   eax, al
.text:0000000000409287                 lea     ecx, [rax+3]
.text:000000000040928A                 mov     edx, 66666667h
.text:000000000040928F                 mov     eax, ecx
.text:0000000000409291                 imul    edx
.text:0000000000409293                 sar     edx, 2
.text:0000000000409296                 mov     eax, ecx
.text:0000000000409298                 sar     eax, 1Fh
.text:000000000040929B                 sub     edx, eax
.text:000000000040929D                 mov     eax, edx
.text:000000000040929F                 shl     eax, 2
.text:00000000004092A2                 add     eax, edx
.text:00000000004092A4                 add     eax, eax
.text:00000000004092A6                 sub     ecx, eax
.text:00000000004092A8                 mov     edx, ecx
.text:00000000004092AA                 mov     rax, [rbp+var_68]
.text:00000000004092AE                 mov     [rax], dl
.text:00000000004092B0                 sub     [rbp+var_5C], 1
.text:00000000004092B4
.text:00000000004092B4 loc_4092B4:                             ; CODE XREF: randData+35A↓j
.text:00000000004092B4                 cmp     [rbp+var_5C], 0
.text:00000000004092B8                 js      short loc_40932C
.text:00000000004092BA                 mov     rdx, [rbp+var_58]
.text:00000000004092BE                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004092C8                 imul    rax, rdx
.text:00000000004092CC                 add     rax, 1
.text:00000000004092D0                 mov     [rbp+var_58], rax
.text:00000000004092D4                 mov     eax, [rbp+var_5C]
.text:00000000004092D7                 sar     eax, 2
.text:00000000004092DA                 cdqe
.text:00000000004092DC                 lea     rdx, ds:0[rax*4]
.text:00000000004092E4                 mov     rax, [rbp+var_50]
.text:00000000004092E8                 add     rax, rdx
.text:00000000004092EB                 mov     edx, [rax]
.text:00000000004092ED                 mov     rax, [rbp+var_58]
.text:00000000004092F1                 shr     rax, 20h
.text:00000000004092F5                 mov     esi, eax
.text:00000000004092F7                 mov     rax, [rbp+var_68]
.text:00000000004092FB                 movzx   eax, byte ptr [rax]
.text:00000000004092FE                 movzx   eax, al
.text:0000000000409301                 mov     ecx, [rbp+var_5C]
.text:0000000000409304                 mov     edi, ecx
.text:0000000000409306                 sar     edi, 2
.text:0000000000409309                 xor     esi, edx
.text:000000000040930B                 mov     rcx, [rbp+var_68]
.text:000000000040930F                 movsxd  rdi, edi
.text:0000000000409312                 movsxd  rdx, eax
.text:0000000000409315                 mov     rax, rdx
.text:0000000000409318                 shl     rax, 3
.text:000000000040931C                 add     rax, rdx
.text:000000000040931F                 add     rax, rdi
.text:0000000000409322                 mov     [rcx+rax*4+4], esi
.text:0000000000409326                 sub     [rbp+var_5C], 4
.text:000000000040932A                 jmp     short loc_4092B4
.text:000000000040932C ; ---------------------------------------------------------------------------
.text:000000000040932C
.text:000000000040932C loc_40932C:                             ; CODE XREF: randData+2E8↑j
.text:000000000040932C                 mov     rax, [rbp+var_68]
.text:0000000000409330                 movzx   eax, byte ptr [rax]
.text:0000000000409333                 movzx   eax, al
.text:0000000000409336                 movsxd  rdx, eax
.text:0000000000409339                 mov     rax, rdx
.text:000000000040933C                 shl     rax, 3
.text:0000000000409340                 add     rax, rdx
.text:0000000000409343                 shl     rax, 2
.text:0000000000409347                 mov     rdx, [rbp+var_68]
.text:000000000040934B                 add     rax, rdx
.text:000000000040934E                 add     rax, 4
.text:0000000000409352                 mov     rdi, rax
.text:0000000000409355                 mov     eax, 0
.text:000000000040935A                 call    sub_40A07C
.text:000000000040935F                 shl     rax, 20h
.text:0000000000409363                 mov     rdx, rax
.text:0000000000409366                 mov     rax, cs:qword_60C3C0
.text:000000000040936D                 xor     rax, rdx
.text:0000000000409370                 mov     cs:qword_60C3C0, rax
.text:0000000000409377                 mov     cs:byte_60C3C8, 1
.text:000000000040937E                 call    randData
.text:0000000000409383                 call    randData
.text:0000000000409388                 call    randData
.text:000000000040938D
.text:000000000040938D loc_40938D:                             ; CODE XREF: randData+14↑j
.text:000000000040938D                 mov     rax, cs:qword_60C3C0
.text:0000000000409394                 shr     rax, 20h
.text:0000000000409398                 mov     [rbp+var_4], eax
.text:000000000040939B                 mov     rdx, cs:qword_60C3C0
.text:00000000004093A2                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004093AC                 imul    rax, rdx
.text:00000000004093B0                 add     rax, 1
.text:00000000004093B4                 mov     cs:qword_60C3C0, rax
.text:00000000004093BB                 mov     eax, [rbp+var_4]
.text:00000000004093BE                 leave
.text:00000000004093BF                 retn
.text:00000000004093BF ; } // starts at 408FD0
.text:00000000004093BF randData        endp
.text:00000000004093BF
.text:00000000004093C0
.text:00000000004093C0 ; =============== S U B R O U T I N E =======================================
.text:00000000004093C0
.text:00000000004093C0 ; Attributes: bp-based frame
.text:00000000004093C0
.text:00000000004093C0 sub_4093C0      proc near               ; CODE XREF: sub_401FD3+2B1↑p
.text:00000000004093C0
.text:00000000004093C0 var_10          = qword ptr -10h
.text:00000000004093C0 var_4           = dword ptr -4
.text:00000000004093C0
.text:00000000004093C0 ; __unwind {
.text:00000000004093C0                 push    rbp
.text:00000000004093C1                 mov     rbp, rsp
.text:00000000004093C4                 mov     [rbp+var_4], edi
.text:00000000004093C7                 mov     [rbp+var_10], rsi
.text:00000000004093CB                 mov     rdx, [rbp+var_10]
.text:00000000004093CF                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004093D9                 imul    rax, rdx
.text:00000000004093DD                 add     rax, 1
.text:00000000004093E1                 mov     [rbp+var_10], rax
.text:00000000004093E5                 mov     rax, [rbp+var_10]
.text:00000000004093E9                 shr     rax, 20h
.text:00000000004093ED                 xor     eax, [rbp+var_4]
.text:00000000004093F0                 pop     rbp
.text:00000000004093F1                 retn
.text:00000000004093F1 ; } // starts at 4093C0
.text:00000000004093F1 sub_4093C0      endp
.text:00000000004093F1
.text:00000000004093F2
.text:00000000004093F2 ; =============== S U B R O U T I N E =======================================
.text:00000000004093F2
.text:00000000004093F2 ; Attributes: bp-based frame
.text:00000000004093F2
.text:00000000004093F2 ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:00000000004093F2                 public main
.text:00000000004093F2 main            proc near               ; DATA XREF: _start+1D↑o
.text:00000000004093F2
.text:00000000004093F2 var_28          = qword ptr -28h
.text:00000000004093F2 var_20          = qword ptr -20h
.text:00000000004093F2 var_14          = dword ptr -14h
.text:00000000004093F2
.text:00000000004093F2 ; __unwind {
.text:00000000004093F2                 push    rbp
.text:00000000004093F3                 mov     rbp, rsp
.text:00000000004093F6                 push    rbx
.text:00000000004093F7                 sub     rsp, 28h
.text:00000000004093FB                 mov     edi, 1          ; fd
.text:0000000000409400                 call    _isatty
.text:0000000000409405                 mov     [rbp+var_14], eax
.text:0000000000409408                 lea     rsi, aNtpClientV01 ; "NTP client v0.1 ("
.text:000000000040940F                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:0000000000409416                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:000000000040941B                 mov     rdx, rax
.text:000000000040941E                 cmp     [rbp+var_14], 0
.text:0000000000409422                 jz      short loc_40942D
.text:0000000000409424                 lea     rax, aSingle    ; "single"
.text:000000000040942B                 jmp     short loc_409434
.text:000000000040942D ; ---------------------------------------------------------------------------
.text:000000000040942D
.text:000000000040942D loc_40942D:                             ; CODE XREF: main+30↑j
.text:000000000040942D                 lea     rax, aDaemon    ; "daemon"
.text:0000000000409434
.text:0000000000409434 loc_409434:                             ; CODE XREF: main+39↑j
.text:0000000000409434                 mov     rsi, rax
.text:0000000000409437                 mov     rdi, rdx
.text:000000000040943A                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:000000000040943F                 lea     rsi, aMode      ; " mode)"
.text:0000000000409446                 mov     rdi, rax
.text:0000000000409449                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:000000000040944E                 mov     rdx, rax
.text:0000000000409451                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:0000000000409458                 mov     rsi, rax
.text:000000000040945B                 mov     rdi, rdx
.text:000000000040945E                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000000000409463                 mov     rdx, rax
.text:0000000000409466                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:000000000040946D                 mov     rsi, rax
.text:0000000000409470                 mov     rdi, rdx
.text:0000000000409473                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000000000409478
.text:0000000000409478 loc_409478:                             ; CODE XREF: main+343↓j
.text:0000000000409478                 cmp     [rbp+var_14], 0
.text:000000000040947C                 jz      short loc_4094A6
.text:000000000040947E                 lea     rsi, asc_40B2B0 ; "---"
.text:0000000000409485                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:000000000040948C                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000409491                 mov     rdx, rax
.text:0000000000409494                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:000000000040949B                 mov     rsi, rax
.text:000000000040949E                 mov     rdi, rdx
.text:00000000004094A1                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00000000004094A6
.text:00000000004094A6 loc_4094A6:                             ; CODE XREF: main+8A↑j
.text:00000000004094A6                 call    _Z12GetLocalTimev ; GetLocalTime(void)
.text:00000000004094AB                 xor     eax, 1
.text:00000000004094AE                 test    al, al
.text:00000000004094B0                 jz      short loc_4094DF
.text:00000000004094B2                 lea     rsi, aErrorReadingLo ; "Error reading local time."
.text:00000000004094B9                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:00000000004094C0                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004094C5                 mov     rdx, rax
.text:00000000004094C8                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:00000000004094CF                 mov     rsi, rax
.text:00000000004094D2                 mov     rdi, rdx
.text:00000000004094D5                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00000000004094DA                 jmp     loc_4096FB
.text:00000000004094DF ; ---------------------------------------------------------------------------
.text:00000000004094DF
.text:00000000004094DF loc_4094DF:                             ; CODE XREF: main+BE↑j
.text:00000000004094DF                 call    _Z10GetNTPTimev ; GetNTPTime(void)
.text:00000000004094E4                 xor     eax, 1
.text:00000000004094E7                 test    al, al
.text:00000000004094E9                 jz      short loc_409518
.text:00000000004094EB                 lea     rsi, aErrorFetchingR ; "Error fetching reference time."
.text:00000000004094F2                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:00000000004094F9                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004094FE                 mov     rdx, rax
.text:0000000000409501                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:0000000000409508                 mov     rsi, rax
.text:000000000040950B                 mov     rdi, rdx
.text:000000000040950E                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000000000409513                 jmp     loc_4096FB
.text:0000000000409518 ; ---------------------------------------------------------------------------
.text:0000000000409518
.text:0000000000409518 loc_409518:                             ; CODE XREF: main+F7↑j
.text:0000000000409518                 mov     rdx, cs:current_time
.text:000000000040951F                 mov     rax, cs:ntp_time
.text:0000000000409526                 cmp     rdx, rax
.text:0000000000409529                 jz      loc_4096CA
.text:000000000040952F                 lea     rsi, ntp_time
.text:0000000000409536                 lea     rdi, current_time
.text:000000000040953D                 call    _ZSt3maxIlERKT_S2_S2_ ; std::max<long>(long const&,long const&)
.text:0000000000409542                 mov     rax, [rax]
.text:0000000000409545                 mov     [rbp+var_20], rax
.text:0000000000409549                 lea     rsi, ntp_time
.text:0000000000409550                 lea     rdi, current_time
.text:0000000000409557                 call    _ZSt3minIlERKT_S2_S2_ ; std::min<long>(long const&,long const&)
.text:000000000040955C                 mov     rax, [rax]
.text:000000000040955F                 mov     rdx, [rbp+var_20]
.text:0000000000409563                 sub     rdx, rax
.text:0000000000409566                 mov     rax, rdx
.text:0000000000409569                 mov     [rbp+var_28], rax
.text:000000000040956D                 lea     rsi, aLocalTimeIs ; "Local time is "
.text:0000000000409574                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:000000000040957B                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000409580                 mov     rdx, rax
.text:0000000000409583                 mov     rax, [rbp+var_28]
.text:0000000000409587                 mov     rsi, rax
.text:000000000040958A                 mov     rdi, rdx
.text:000000000040958D                 call    __ZNSolsEl      ; std::ostream::operator<<(long)
.text:0000000000409592                 lea     rsi, aSecond    ; " second"
.text:0000000000409599                 mov     rdi, rax
.text:000000000040959C                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004095A1                 mov     rdx, rax
.text:00000000004095A4                 cmp     [rbp+var_28], 1
.text:00000000004095A9                 jnz     short loc_4095B4
.text:00000000004095AB                 lea     rax, unk_40B306
.text:00000000004095B2                 jmp     short loc_4095BB
.text:00000000004095B4 ; ---------------------------------------------------------------------------
.text:00000000004095B4
.text:00000000004095B4 loc_4095B4:                             ; CODE XREF: main+1B7↑j
.text:00000000004095B4                 lea     rax, aS         ; "s"
.text:00000000004095BB
.text:00000000004095BB loc_4095BB:                             ; CODE XREF: main+1C0↑j
.text:00000000004095BB                 mov     rsi, rax
.text:00000000004095BE                 mov     rdi, rdx
.text:00000000004095C1                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004095C6                 mov     rdx, rax
.text:00000000004095C9                 mov     rax, cs:current_time
.text:00000000004095D0                 cmp     [rbp+var_20], rax
.text:00000000004095D4                 jnz     short loc_4095DF
.text:00000000004095D6                 lea     rax, aAhead     ; " ahead"
.text:00000000004095DD                 jmp     short loc_4095E6
.text:00000000004095DF ; ---------------------------------------------------------------------------
.text:00000000004095DF
.text:00000000004095DF loc_4095DF:                             ; CODE XREF: main+1E2↑j
.text:00000000004095DF                 lea     rax, aBehind    ; " behind"
.text:00000000004095E6
.text:00000000004095E6 loc_4095E6:                             ; CODE XREF: main+1EB↑j
.text:00000000004095E6                 mov     rsi, rax
.text:00000000004095E9                 mov     rdi, rdx
.text:00000000004095EC                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004095F1                 mov     rdx, rax
.text:00000000004095F4                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:00000000004095FB                 mov     rsi, rax
.text:00000000004095FE                 mov     rdi, rdx
.text:0000000000409601                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000000000409606                 lea     rsi, aLocalTime ; " - local time: "
.text:000000000040960D                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:0000000000409614                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000409619                 mov     rbx, rax
.text:000000000040961C                 lea     rdi, current_time ; timer
.text:0000000000409623                 call    _localtime
.text:0000000000409628                 mov     rdi, rax        ; tp
.text:000000000040962B                 call    _asctime
.text:0000000000409630                 mov     rsi, rax
.text:0000000000409633                 mov     rdi, rbx
.text:0000000000409636                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:000000000040963B                 lea     rsi, aReferenceTime ; " - reference time: "
.text:0000000000409642                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:0000000000409649                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:000000000040964E                 mov     rbx, rax
.text:0000000000409651                 lea     rdi, ntp_time   ; timer
.text:0000000000409658                 call    _localtime
.text:000000000040965D                 mov     rdi, rax        ; tp
.text:0000000000409660                 call    _asctime
.text:0000000000409665                 mov     rsi, rax
.text:0000000000409668                 mov     rdi, rbx
.text:000000000040966B                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000409670                 lea     rsi, aAdjusting ; "Adjusting... "
.text:0000000000409677                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:000000000040967E                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000409683                 lea     rdi, ntp_time   ; when
.text:000000000040968A                 call    _stime
.text:000000000040968F                 cmp     eax, 0FFFFFFFFh
.text:0000000000409692                 jnz     short loc_40969D
.text:0000000000409694                 lea     rax, aFailedAreYouRo ; "failed (are you root?)"
.text:000000000040969B                 jmp     short loc_4096A4
.text:000000000040969D ; ---------------------------------------------------------------------------
.text:000000000040969D
.text:000000000040969D loc_40969D:                             ; CODE XREF: main+2A0↑j
.text:000000000040969D                 lea     rax, aOk        ; "OK."
.text:00000000004096A4
.text:00000000004096A4 loc_4096A4:                             ; CODE XREF: main+2A9↑j
.text:00000000004096A4                 mov     rsi, rax
.text:00000000004096A7                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:00000000004096AE                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004096B3                 mov     rdx, rax
.text:00000000004096B6                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:00000000004096BD                 mov     rsi, rax
.text:00000000004096C0                 mov     rdi, rdx
.text:00000000004096C3                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00000000004096C8                 jmp     short loc_4096FB
.text:00000000004096CA ; ---------------------------------------------------------------------------
.text:00000000004096CA
.text:00000000004096CA loc_4096CA:                             ; CODE XREF: main+137↑j
.text:00000000004096CA                 cmp     [rbp+var_14], 0
.text:00000000004096CE                 jz      short loc_4096FA
.text:00000000004096D0                 lea     rsi, aSystemTimeIsIn ; "System time is in perfect sync!"
.text:00000000004096D7                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:00000000004096DE                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004096E3                 mov     rdx, rax
.text:00000000004096E6                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:00000000004096ED                 mov     rsi, rax
.text:00000000004096F0                 mov     rdi, rdx
.text:00000000004096F3                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00000000004096F8                 jmp     short loc_4096FB
.text:00000000004096FA ; ---------------------------------------------------------------------------
.text:00000000004096FA
.text:00000000004096FA loc_4096FA:                             ; CODE XREF: main+2DC↑j
.text:00000000004096FA                 nop
.text:00000000004096FB
.text:00000000004096FB loc_4096FB:                             ; CODE XREF: main+E8↑j
.text:00000000004096FB                                         ; main+121↑j ...
.text:00000000004096FB                 cmp     [rbp+var_14], 0
.text:00000000004096FF                 jz      short loc_40972B
.text:0000000000409701                 lea     rsi, asc_40B2B0 ; "---"
.text:0000000000409708                 lea     rdi, _ZSt4cout@@GLIBCXX_3_4
.text:000000000040970F                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000409714                 mov     rdx, rax
.text:0000000000409717                 mov     rax, cs:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr
.text:000000000040971E                 mov     rsi, rax
.text:0000000000409721                 mov     rdi, rdx
.text:0000000000409724                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:0000000000409729                 jmp     short loc_40973A
.text:000000000040972B ; ---------------------------------------------------------------------------
.text:000000000040972B
.text:000000000040972B loc_40972B:                             ; CODE XREF: main+30D↑j
.text:000000000040972B                 mov     edi, 3Ch
.text:0000000000409730                 call    sub_400A40
.text:0000000000409735                 jmp     loc_409478
.text:000000000040973A ; ---------------------------------------------------------------------------
.text:000000000040973A
.text:000000000040973A loc_40973A:                             ; CODE XREF: main+337↑j
.text:000000000040973A                 mov     eax, 0
.text:000000000040973F                 add     rsp, 28h
.text:0000000000409743                 pop     rbx
.text:0000000000409744                 pop     rbp
.text:0000000000409745                 retn
.text:0000000000409745 ; } // starts at 4093F2
.text:0000000000409745 main            endp
.text:0000000000409745
.text:0000000000409746
.text:0000000000409746 ; =============== S U B R O U T I N E =======================================
.text:0000000000409746
.text:0000000000409746 ; Attributes: bp-based frame
.text:0000000000409746
.text:0000000000409746 ; __int64 __fastcall __static_initialization_and_destruction_0(int, int)
.text:0000000000409746 _Z41__static_initialization_and_destruction_0ii proc near
.text:0000000000409746                                         ; CODE XREF: _GLOBAL__sub_I_main+E↓p
.text:0000000000409746
.text:0000000000409746 var_8           = dword ptr -8
.text:0000000000409746 var_4           = dword ptr -4
.text:0000000000409746
.text:0000000000409746 ; __unwind {
.text:0000000000409746                 push    rbp
.text:0000000000409747                 mov     rbp, rsp
.text:000000000040974A                 sub     rsp, 10h
.text:000000000040974E                 mov     [rbp+var_4], edi
.text:0000000000409751                 mov     [rbp+var_8], esi
.text:0000000000409754                 cmp     [rbp+var_4], 1
.text:0000000000409758                 jnz     short loc_40978C
.text:000000000040975A                 cmp     [rbp+var_8], 0FFFFh
.text:0000000000409761                 jnz     short loc_40978C
.text:0000000000409763                 lea     rdi, _ZStL8__ioinit ; this
.text:000000000040976A                 call    __ZNSt8ios_base4InitC1Ev ; std::ios_base::Init::Init(void)
.text:000000000040976F                 lea     rdx, __dso_handle
.text:0000000000409776                 lea     rsi, _ZStL8__ioinit ; std::__ioinit
.text:000000000040977D                 mov     rax, cs:_ZNSt8ios_base4InitD1Ev_ptr
.text:0000000000409784                 mov     rdi, rax
.text:0000000000409787                 call    ___cxa_atexit
.text:000000000040978C
.text:000000000040978C loc_40978C:                             ; CODE XREF: __static_initialization_and_destruction_0(int,int)+12↑j
.text:000000000040978C                                         ; __static_initialization_and_destruction_0(int,int)+1B↑j
.text:000000000040978C                 nop
.text:000000000040978D                 leave
.text:000000000040978E                 retn
.text:000000000040978E ; } // starts at 409746
.text:000000000040978E _Z41__static_initialization_and_destruction_0ii endp
.text:000000000040978E
.text:000000000040978F
.text:000000000040978F ; =============== S U B R O U T I N E =======================================
.text:000000000040978F
.text:000000000040978F ; Attributes: bp-based frame
.text:000000000040978F
.text:000000000040978F _GLOBAL__sub_I_main proc near           ; DATA XREF: .init_array:000000000060BDD0↓o
.text:000000000040978F ; __unwind {
.text:000000000040978F                 push    rbp
.text:0000000000409790                 mov     rbp, rsp
.text:0000000000409793                 mov     esi, 0FFFFh     ; int
.text:0000000000409798                 mov     edi, 1          ; int
.text:000000000040979D                 call    _Z41__static_initialization_and_destruction_0ii ; __static_initialization_and_destruction_0(int,int)
.text:00000000004097A2                 pop     rbp
.text:00000000004097A3                 retn
.text:00000000004097A3 ; } // starts at 40978F
.text:00000000004097A3 _GLOBAL__sub_I_main endp
.text:00000000004097A3
.text:00000000004097A4
.text:00000000004097A4 ; =============== S U B R O U T I N E =======================================
.text:00000000004097A4
.text:00000000004097A4 ; Attributes: bp-based frame
.text:00000000004097A4
.text:00000000004097A4 ; long const& std::max<long>(long const&, long const&)
.text:00000000004097A4                 public _ZSt3maxIlERKT_S2_S2_ ; weak
.text:00000000004097A4 _ZSt3maxIlERKT_S2_S2_ proc near         ; CODE XREF: main+14B↑p
.text:00000000004097A4
.text:00000000004097A4 var_10          = qword ptr -10h
.text:00000000004097A4 var_8           = qword ptr -8
.text:00000000004097A4
.text:00000000004097A4 ; __unwind {
.text:00000000004097A4                 push    rbp
.text:00000000004097A5                 mov     rbp, rsp
.text:00000000004097A8                 mov     [rbp+var_8], rdi
.text:00000000004097AC                 mov     [rbp+var_10], rsi
.text:00000000004097B0                 mov     rax, [rbp+var_8]
.text:00000000004097B4                 mov     rdx, [rax]
.text:00000000004097B7                 mov     rax, [rbp+var_10]
.text:00000000004097BB                 mov     rax, [rax]
.text:00000000004097BE                 cmp     rdx, rax
.text:00000000004097C1                 jge     short loc_4097C9
.text:00000000004097C3                 mov     rax, [rbp+var_10]
.text:00000000004097C7                 jmp     short loc_4097CD
.text:00000000004097C9 ; ---------------------------------------------------------------------------
.text:00000000004097C9
.text:00000000004097C9 loc_4097C9:                             ; CODE XREF: std::max<long>(long const&,long const&)+1D↑j
.text:00000000004097C9                 mov     rax, [rbp+var_8]
.text:00000000004097CD
.text:00000000004097CD loc_4097CD:                             ; CODE XREF: std::max<long>(long const&,long const&)+23↑j
.text:00000000004097CD                 pop     rbp
.text:00000000004097CE                 retn
.text:00000000004097CE ; } // starts at 4097A4
.text:00000000004097CE _ZSt3maxIlERKT_S2_S2_ endp
.text:00000000004097CE
.text:00000000004097CF
.text:00000000004097CF ; =============== S U B R O U T I N E =======================================
.text:00000000004097CF
.text:00000000004097CF ; Attributes: bp-based frame
.text:00000000004097CF
.text:00000000004097CF ; long const& std::min<long>(long const&, long const&)
.text:00000000004097CF                 public _ZSt3minIlERKT_S2_S2_ ; weak
.text:00000000004097CF _ZSt3minIlERKT_S2_S2_ proc near         ; CODE XREF: main+165↑p
.text:00000000004097CF
.text:00000000004097CF var_10          = qword ptr -10h
.text:00000000004097CF var_8           = qword ptr -8
.text:00000000004097CF
.text:00000000004097CF ; __unwind {
.text:00000000004097CF                 push    rbp
.text:00000000004097D0                 mov     rbp, rsp
.text:00000000004097D3                 mov     [rbp+var_8], rdi
.text:00000000004097D7                 mov     [rbp+var_10], rsi
.text:00000000004097DB                 mov     rax, [rbp+var_10]
.text:00000000004097DF                 mov     rdx, [rax]
.text:00000000004097E2                 mov     rax, [rbp+var_8]
.text:00000000004097E6                 mov     rax, [rax]
.text:00000000004097E9                 cmp     rdx, rax
.text:00000000004097EC                 jge     short loc_4097F4
.text:00000000004097EE                 mov     rax, [rbp+var_10]
.text:00000000004097F2                 jmp     short loc_4097F8
.text:00000000004097F4 ; ---------------------------------------------------------------------------
.text:00000000004097F4
.text:00000000004097F4 loc_4097F4:                             ; CODE XREF: std::min<long>(long const&,long const&)+1D↑j
.text:00000000004097F4                 mov     rax, [rbp+var_8]
.text:00000000004097F8
.text:00000000004097F8 loc_4097F8:                             ; CODE XREF: std::min<long>(long const&,long const&)+23↑j
.text:00000000004097F8                 pop     rbp
.text:00000000004097F9                 retn
.text:00000000004097F9 ; } // starts at 4097CF
.text:00000000004097F9 _ZSt3minIlERKT_S2_S2_ endp
.text:00000000004097F9
.text:00000000004097FA
.text:00000000004097FA ; =============== S U B R O U T I N E =======================================
.text:00000000004097FA
.text:00000000004097FA ; Attributes: bp-based frame
.text:00000000004097FA
.text:00000000004097FA sub_4097FA      proc near               ; CODE XREF: sub_409E68+1BB↓p
.text:00000000004097FA                                         ; sub_40A043+32↓p ...
.text:00000000004097FA
.text:00000000004097FA var_110         = qword ptr -110h
.text:00000000004097FA var_108         = qword ptr -108h
.text:00000000004097FA var_FA          = byte ptr -0FAh
.text:00000000004097FA var_F9          = byte ptr -0F9h
.text:00000000004097FA var_F8          = qword ptr -0F8h
.text:00000000004097FA var_F0          = qword ptr -0F0h
.text:00000000004097FA var_E8          = qword ptr -0E8h
.text:00000000004097FA var_E0          = qword ptr -0E0h
.text:00000000004097FA var_D2          = byte ptr -0D2h
.text:00000000004097FA var_D1          = byte ptr -0D1h
.text:00000000004097FA var_D0          = qword ptr -0D0h
.text:00000000004097FA var_C8          = qword ptr -0C8h
.text:00000000004097FA var_C0          = qword ptr -0C0h
.text:00000000004097FA var_B8          = qword ptr -0B8h
.text:00000000004097FA var_B0          = qword ptr -0B0h
.text:00000000004097FA var_A4          = dword ptr -0A4h
.text:00000000004097FA var_A0          = qword ptr -0A0h
.text:00000000004097FA var_98          = qword ptr -98h
.text:00000000004097FA var_90          = qword ptr -90h
.text:00000000004097FA var_84          = dword ptr -84h
.text:00000000004097FA var_80          = qword ptr -80h
.text:00000000004097FA var_78          = qword ptr -78h
.text:00000000004097FA var_6C          = word ptr -6Ch
.text:00000000004097FA var_6A          = word ptr -6Ah
.text:00000000004097FA var_68          = qword ptr -68h
.text:00000000004097FA var_5C          = dword ptr -5Ch
.text:00000000004097FA var_58          = qword ptr -58h
.text:00000000004097FA var_50          = qword ptr -50h
.text:00000000004097FA var_48          = qword ptr -48h
.text:00000000004097FA var_40          = qword ptr -40h
.text:00000000004097FA var_38          = qword ptr -38h
.text:00000000004097FA var_30          = qword ptr -30h
.text:00000000004097FA var_28          = qword ptr -28h
.text:00000000004097FA var_20          = qword ptr -20h
.text:00000000004097FA var_18          = qword ptr -18h
.text:00000000004097FA var_10          = qword ptr -10h
.text:00000000004097FA var_4           = dword ptr -4
.text:00000000004097FA
.text:00000000004097FA ; __unwind {
.text:00000000004097FA                 push    rbp
.text:00000000004097FB                 mov     rbp, rsp
.text:00000000004097FE                 sub     rsp, 110h
.text:0000000000409805                 mov     [rbp+var_108], rdi
.text:000000000040980C                 mov     [rbp+var_110], rsi
.text:0000000000409813                 nop
.text:0000000000409814                 nop
.text:0000000000409815                 nop
.text:0000000000409816                 nop
.text:0000000000409817                 nop
.text:0000000000409818                 nop
.text:0000000000409819                 nop
.text:000000000040981A                 nop
.text:000000000040981B                 nop
.text:000000000040981C                 nop
.text:000000000040981D                 nop
.text:000000000040981E                 nop
.text:000000000040981F                 nop
.text:0000000000409820                 nop
.text:0000000000409821                 nop
.text:0000000000409822                 nop
.text:0000000000409823                 nop
.text:0000000000409824                 nop
.text:0000000000409825                 nop
.text:0000000000409826                 nop
.text:0000000000409827                 nop
.text:0000000000409828                 lea     rax, dword_40B388
.text:000000000040982F                 mov     [rbp+var_98], rax
.text:0000000000409836                 mov     rax, 84FD6C7857B72B57h
.text:0000000000409840                 mov     [rbp+var_A0], rax
.text:0000000000409847                 mov     [rbp+var_A4], 5
.text:0000000000409851                 call    getMem
.text:0000000000409856                 mov     [rbp+var_B0], rax
.text:000000000040985D                 mov     rax, [rbp+var_B0]
.text:0000000000409864                 movzx   eax, byte ptr [rax]
.text:0000000000409867                 movzx   eax, al
.text:000000000040986A                 lea     ecx, [rax+3]
.text:000000000040986D                 mov     edx, 66666667h
.text:0000000000409872                 mov     eax, ecx
.text:0000000000409874                 imul    edx
.text:0000000000409876                 sar     edx, 2
.text:0000000000409879                 mov     eax, ecx
.text:000000000040987B                 sar     eax, 1Fh
.text:000000000040987E                 sub     edx, eax
.text:0000000000409880                 mov     eax, edx
.text:0000000000409882                 shl     eax, 2
.text:0000000000409885                 add     eax, edx
.text:0000000000409887                 add     eax, eax
.text:0000000000409889                 sub     ecx, eax
.text:000000000040988B                 mov     edx, ecx
.text:000000000040988D                 mov     rax, [rbp+var_B0]
.text:0000000000409894                 mov     [rax], dl
.text:0000000000409896                 sub     [rbp+var_A4], 1
.text:000000000040989D
.text:000000000040989D loc_40989D:                             ; CODE XREF: sub_4097FA+13B↓j
.text:000000000040989D                 cmp     [rbp+var_A4], 0
.text:00000000004098A4                 js      loc_40993A
.text:00000000004098AA                 mov     rdx, [rbp+var_A0]
.text:00000000004098B1                 mov     rax, 5851F42D4C957F2Dh
.text:00000000004098BB                 imul    rax, rdx
.text:00000000004098BF                 add     rax, 1
.text:00000000004098C3                 mov     [rbp+var_A0], rax
.text:00000000004098CA                 mov     eax, [rbp+var_A4]
.text:00000000004098D0                 sar     eax, 2
.text:00000000004098D3                 cdqe
.text:00000000004098D5                 lea     rdx, ds:0[rax*4]
.text:00000000004098DD                 mov     rax, [rbp+var_98]
.text:00000000004098E4                 add     rax, rdx
.text:00000000004098E7                 mov     edx, [rax]
.text:00000000004098E9                 mov     rax, [rbp+var_A0]
.text:00000000004098F0                 shr     rax, 20h
.text:00000000004098F4                 mov     esi, eax
.text:00000000004098F6                 mov     rax, [rbp+var_B0]
.text:00000000004098FD                 movzx   eax, byte ptr [rax]
.text:0000000000409900                 movzx   eax, al
.text:0000000000409903                 mov     ecx, [rbp+var_A4]
.text:0000000000409909                 mov     edi, ecx
.text:000000000040990B                 sar     edi, 2
.text:000000000040990E                 xor     esi, edx
.text:0000000000409910                 mov     rcx, [rbp+var_B0]
.text:0000000000409917                 movsxd  rdi, edi
.text:000000000040991A                 movsxd  rdx, eax
.text:000000000040991D                 mov     rax, rdx
.text:0000000000409920                 shl     rax, 3
.text:0000000000409924                 add     rax, rdx
.text:0000000000409927                 add     rax, rdi
.text:000000000040992A                 mov     [rcx+rax*4+4], esi
.text:000000000040992E                 sub     [rbp+var_A4], 4
.text:0000000000409935                 jmp     loc_40989D
.text:000000000040993A ; ---------------------------------------------------------------------------
.text:000000000040993A
.text:000000000040993A loc_40993A:                             ; CODE XREF: sub_4097FA+AA↑j
.text:000000000040993A                 mov     rax, [rbp+var_B0]
.text:0000000000409941                 movzx   eax, byte ptr [rax]
.text:0000000000409944                 movzx   eax, al
.text:0000000000409947                 movsxd  rdx, eax
.text:000000000040994A                 mov     rax, rdx
.text:000000000040994D                 shl     rax, 3
.text:0000000000409951                 add     rax, rdx
.text:0000000000409954                 shl     rax, 2
.text:0000000000409958                 mov     rdx, [rbp+var_B0]
.text:000000000040995F                 add     rax, rdx
.text:0000000000409962                 add     rax, 4
.text:0000000000409966                 mov     eax, [rax]
.text:0000000000409968                 mov     [rbp+var_5C], eax
.text:000000000040996B                 and     [rbp+var_108], 0FFFFFFFFFFFFF000h
.text:0000000000409976
.text:0000000000409976 loc_409976:                             ; CODE XREF: sub_4097FA+195↓j
.text:0000000000409976                 mov     rax, [rbp+var_108]
.text:000000000040997D                 mov     eax, [rax]
.text:000000000040997F                 cmp     [rbp+var_5C], eax
.text:0000000000409982                 jz      short loc_409991
.text:0000000000409984                 sub     [rbp+var_108], 1000h
.text:000000000040998F                 jmp     short loc_409976
.text:0000000000409991 ; ---------------------------------------------------------------------------
.text:0000000000409991
.text:0000000000409991 loc_409991:                             ; CODE XREF: sub_4097FA+188↑j
.text:0000000000409991                 mov     rax, [rbp+var_108]
.text:0000000000409998                 add     rax, 20h
.text:000000000040999C                 mov     rax, [rax]
.text:000000000040999F                 mov     [rbp+var_68], rax
.text:00000000004099A3                 mov     rax, [rbp+var_108]
.text:00000000004099AA                 add     rax, 36h
.text:00000000004099AE                 mov     rax, [rax]
.text:00000000004099B1                 mov     [rbp+var_6A], ax
.text:00000000004099B5                 mov     rax, [rbp+var_108]
.text:00000000004099BC                 add     rax, 38h
.text:00000000004099C0                 mov     rax, [rax]
.text:00000000004099C3                 mov     [rbp+var_6C], ax
.text:00000000004099C7                 mov     [rbp+var_4], 0
.text:00000000004099CE
.text:00000000004099CE loc_4099CE:                             ; CODE XREF: sub_4097FA+28B↓j
.text:00000000004099CE                 movzx   eax, [rbp+var_6C]
.text:00000000004099D2                 cmp     [rbp+var_4], eax
.text:00000000004099D5                 jge     loc_409A8A
.text:00000000004099DB                 movzx   eax, [rbp+var_6A]
.text:00000000004099DF                 imul    eax, [rbp+var_4]
.text:00000000004099E3                 movsxd  rdx, eax
.text:00000000004099E6                 mov     rax, [rbp+var_68]
.text:00000000004099EA                 add     rax, rdx
.text:00000000004099ED                 mov     [rbp+var_78], rax
.text:00000000004099F1                 mov     rdx, [rbp+var_108]
.text:00000000004099F8                 mov     rax, [rbp+var_78]
.text:00000000004099FC                 add     rax, rdx
.text:00000000004099FF                 mov     rax, [rax]
.text:0000000000409A02                 movzx   eax, al
.text:0000000000409A05                 cmp     rax, 1
.text:0000000000409A09                 jz      short loc_409A13
.text:0000000000409A0B                 cmp     rax, 2
.text:0000000000409A0F                 jz      short loc_409A48
.text:0000000000409A11                 jmp     short loc_409A81
.text:0000000000409A13 ; ---------------------------------------------------------------------------
.text:0000000000409A13
.text:0000000000409A13 loc_409A13:                             ; CODE XREF: sub_4097FA+20F↑j
.text:0000000000409A13                 mov     rdx, [rbp+var_108]
.text:0000000000409A1A                 mov     rax, [rbp+var_78]
.text:0000000000409A1E                 add     rax, rdx
.text:0000000000409A21                 add     rax, 8
.text:0000000000409A25                 mov     rax, [rax]
.text:0000000000409A28                 test    rax, rax
.text:0000000000409A2B                 jnz     short loc_409A80
.text:0000000000409A2D                 mov     rdx, [rbp+var_108]
.text:0000000000409A34                 mov     rax, [rbp+var_78]
.text:0000000000409A38                 add     rax, rdx
.text:0000000000409A3B                 add     rax, 10h
.text:0000000000409A3F                 mov     rax, [rax]
.text:0000000000409A42                 mov     [rbp+var_10], rax
.text:0000000000409A46                 jmp     short loc_409A80
.text:0000000000409A48 ; ---------------------------------------------------------------------------
.text:0000000000409A48
.text:0000000000409A48 loc_409A48:                             ; CODE XREF: sub_4097FA+215↑j
.text:0000000000409A48                 mov     rdx, [rbp+var_108]
.text:0000000000409A4F                 mov     rax, [rbp+var_78]
.text:0000000000409A53                 add     rax, rdx
.text:0000000000409A56                 add     rax, 10h
.text:0000000000409A5A                 mov     rax, [rax]
.text:0000000000409A5D                 mov     [rbp+var_18], rax
.text:0000000000409A61                 mov     rdx, [rbp+var_108]
.text:0000000000409A68                 mov     rax, [rbp+var_78]
.text:0000000000409A6C                 add     rax, rdx
.text:0000000000409A6F                 add     rax, 28h
.text:0000000000409A73                 mov     rax, [rax]
.text:0000000000409A76                 shr     rax, 4
.text:0000000000409A7A                 mov     [rbp+var_20], rax
.text:0000000000409A7E                 jmp     short loc_409A81
.text:0000000000409A80 ; ---------------------------------------------------------------------------
.text:0000000000409A80
.text:0000000000409A80 loc_409A80:                             ; CODE XREF: sub_4097FA+231↑j
.text:0000000000409A80                                         ; sub_4097FA+24C↑j
.text:0000000000409A80                 nop
.text:0000000000409A81
.text:0000000000409A81 loc_409A81:                             ; CODE XREF: sub_4097FA+217↑j
.text:0000000000409A81                                         ; sub_4097FA+284↑j
.text:0000000000409A81                 add     [rbp+var_4], 1
.text:0000000000409A85                 jmp     loc_4099CE
.text:0000000000409A8A ; ---------------------------------------------------------------------------
.text:0000000000409A8A
.text:0000000000409A8A loc_409A8A:                             ; CODE XREF: sub_4097FA+1DB↑j
.text:0000000000409A8A                 mov     rax, [rbp+var_10]
.text:0000000000409A8E                 sub     [rbp+var_18], rax
.text:0000000000409A92                 mov     [rbp+var_38], 0
.text:0000000000409A9A                 mov     [rbp+var_48], 0
.text:0000000000409AA2                 mov     [rbp+var_50], 0
.text:0000000000409AAA                 mov     [rbp+var_58], 0
.text:0000000000409AB2                 mov     [rbp+var_4], 0
.text:0000000000409AB9
.text:0000000000409AB9 loc_409AB9:                             ; CODE XREF: sub_4097FA+3CE↓j
.text:0000000000409AB9                 mov     eax, [rbp+var_4]
.text:0000000000409ABC                 cdqe
.text:0000000000409ABE                 cmp     [rbp+var_20], rax
.text:0000000000409AC2                 jbe     loc_409BCD
.text:0000000000409AC8                 mov     eax, [rbp+var_4]
.text:0000000000409ACB                 shl     eax, 4
.text:0000000000409ACE                 movsxd  rdx, eax
.text:0000000000409AD1                 mov     rax, [rbp+var_18]
.text:0000000000409AD5                 add     rax, rdx
.text:0000000000409AD8                 mov     [rbp+var_80], rax
.text:0000000000409ADC                 mov     rdx, [rbp+var_108]
.text:0000000000409AE3                 mov     rax, [rbp+var_80]
.text:0000000000409AE7                 add     rax, rdx
.text:0000000000409AEA                 mov     rax, [rax]
.text:0000000000409AED                 cmp     rax, 17h        ; switch 24 cases
.text:0000000000409AF1                 ja      loc_409BC4      ; jumptable 0000000000409B16 default case
.text:0000000000409AF7                 lea     rdx, ds:0[rax*4]
.text:0000000000409AFF                 lea     rax, off_40B394
.text:0000000000409B06                 mov     eax, [rdx+rax]
.text:0000000000409B09                 movsxd  rdx, eax
.text:0000000000409B0C                 lea     rax, off_40B394
.text:0000000000409B13                 add     rax, rdx
.text:0000000000409B16                 jmp     rax             ; switch jump
.text:0000000000409B18 ; ---------------------------------------------------------------------------
.text:0000000000409B18
.text:0000000000409B18 loc_409B18:                             ; CODE XREF: sub_4097FA+31C↑j
.text:0000000000409B18                                         ; DATA XREF: .rodata:off_40B394↓o
.text:0000000000409B18                 mov     rdx, [rbp+var_108] ; jumptable 0000000000409B16 case 5
.text:0000000000409B1F                 mov     rax, [rbp+var_80]
.text:0000000000409B23                 add     rax, rdx
.text:0000000000409B26                 add     rax, 8
.text:0000000000409B2A                 mov     rax, [rax]
.text:0000000000409B2D                 mov     [rbp+var_28], rax
.text:0000000000409B31                 jmp     loc_409BC4      ; jumptable 0000000000409B16 default case
.text:0000000000409B36 ; ---------------------------------------------------------------------------
.text:0000000000409B36
.text:0000000000409B36 loc_409B36:                             ; CODE XREF: sub_4097FA+31C↑j
.text:0000000000409B36                                         ; DATA XREF: .rodata:off_40B394↓o
.text:0000000000409B36                 mov     rdx, [rbp+var_108] ; jumptable 0000000000409B16 case 6
.text:0000000000409B3D                 mov     rax, [rbp+var_80]
.text:0000000000409B41                 add     rax, rdx
.text:0000000000409B44                 add     rax, 8
.text:0000000000409B48                 mov     rax, [rax]
.text:0000000000409B4B                 mov     [rbp+var_30], rax
.text:0000000000409B4F                 jmp     short loc_409BC4 ; jumptable 0000000000409B16 default case
.text:0000000000409B51 ; ---------------------------------------------------------------------------
.text:0000000000409B51
.text:0000000000409B51 loc_409B51:                             ; CODE XREF: sub_4097FA+31C↑j
.text:0000000000409B51                                         ; DATA XREF: .rodata:off_40B394↓o
.text:0000000000409B51                 mov     rdx, [rbp+var_108] ; jumptable 0000000000409B16 case 10
.text:0000000000409B58                 mov     rax, [rbp+var_80]
.text:0000000000409B5C                 add     rax, rdx
.text:0000000000409B5F                 add     rax, 8
.text:0000000000409B63                 mov     rax, [rax]
.text:0000000000409B66                 mov     [rbp+var_38], rax
.text:0000000000409B6A                 jmp     short loc_409BC4 ; jumptable 0000000000409B16 default case
.text:0000000000409B6C ; ---------------------------------------------------------------------------
.text:0000000000409B6C
.text:0000000000409B6C loc_409B6C:                             ; CODE XREF: sub_4097FA+31C↑j
.text:0000000000409B6C                                         ; DATA XREF: .rodata:off_40B394↓o
.text:0000000000409B6C                 mov     [rbp+var_58], 1 ; jumptable 0000000000409B16 case 7
.text:0000000000409B74
.text:0000000000409B74 loc_409B74:                             ; CODE XREF: sub_4097FA+31C↑j
.text:0000000000409B74                                         ; DATA XREF: .rodata:off_40B394↓o
.text:0000000000409B74                 mov     rdx, [rbp+var_108] ; jumptable 0000000000409B16 cases 9,19
.text:0000000000409B7B                 mov     rax, [rbp+var_80]
.text:0000000000409B7F                 add     rax, rdx
.text:0000000000409B82                 add     rax, 8
.text:0000000000409B86                 mov     rax, [rax]
.text:0000000000409B89                 mov     [rbp+var_40], rax
.text:0000000000409B8D                 jmp     short loc_409BC4 ; jumptable 0000000000409B16 default case
.text:0000000000409B8F ; ---------------------------------------------------------------------------
.text:0000000000409B8F
.text:0000000000409B8F loc_409B8F:                             ; CODE XREF: sub_4097FA+31C↑j
.text:0000000000409B8F                                         ; DATA XREF: .rodata:off_40B394↓o
.text:0000000000409B8F                 mov     rdx, [rbp+var_108] ; jumptable 0000000000409B16 case 23
.text:0000000000409B96                 mov     rax, [rbp+var_80]
.text:0000000000409B9A                 add     rax, rdx
.text:0000000000409B9D                 add     rax, 8
.text:0000000000409BA1                 mov     rax, [rax]
.text:0000000000409BA4                 mov     [rbp+var_48], rax
.text:0000000000409BA8                 jmp     short loc_409BC4 ; jumptable 0000000000409B16 default case
.text:0000000000409BAA ; ---------------------------------------------------------------------------
.text:0000000000409BAA
.text:0000000000409BAA loc_409BAA:                             ; CODE XREF: sub_4097FA+31C↑j
.text:0000000000409BAA                                         ; DATA XREF: .rodata:off_40B394↓o
.text:0000000000409BAA                 mov     rdx, [rbp+var_108] ; jumptable 0000000000409B16 case 2
.text:0000000000409BB1                 mov     rax, [rbp+var_80]
.text:0000000000409BB5                 add     rax, rdx
.text:0000000000409BB8                 add     rax, 8
.text:0000000000409BBC                 mov     rax, [rax]
.text:0000000000409BBF                 mov     [rbp+var_50], rax
.text:0000000000409BC3                 nop
.text:0000000000409BC4
.text:0000000000409BC4 loc_409BC4:                             ; CODE XREF: sub_4097FA+2F7↑j
.text:0000000000409BC4                                         ; sub_4097FA+31C↑j ...
.text:0000000000409BC4                 add     [rbp+var_4], 1  ; jumptable 0000000000409B16 default case
.text:0000000000409BC8                 jmp     loc_409AB9
.text:0000000000409BCD ; ---------------------------------------------------------------------------
.text:0000000000409BCD
.text:0000000000409BCD loc_409BCD:                             ; CODE XREF: sub_4097FA+2C8↑j
.text:0000000000409BCD                 mov     [rbp+var_4], 0
.text:0000000000409BD4
.text:0000000000409BD4 loc_409BD4:                             ; CODE XREF: sub_4097FA+508↓j
.text:0000000000409BD4                 mov     edx, [rbp+var_4]
.text:0000000000409BD7                 mov     eax, edx
.text:0000000000409BD9                 add     eax, eax
.text:0000000000409BDB                 add     eax, edx
.text:0000000000409BDD                 shl     eax, 3
.text:0000000000409BE0                 movsxd  rdx, eax
.text:0000000000409BE3                 mov     rax, [rbp+var_30]
.text:0000000000409BE7                 add     rax, rdx
.text:0000000000409BEA                 mov     rax, [rax]
.text:0000000000409BED                 mov     [rbp+var_84], eax
.text:0000000000409BF3                 mov     eax, [rbp+var_84]
.text:0000000000409BF9                 cmp     [rbp+var_38], rax
.text:0000000000409BFD                 jb      loc_409D07
.text:0000000000409C03                 mov     edx, [rbp+var_4]
.text:0000000000409C06                 mov     eax, edx
.text:0000000000409C08                 add     eax, eax
.text:0000000000409C0A                 add     eax, edx
.text:0000000000409C0C                 shl     eax, 3
.text:0000000000409C0F                 movsxd  rdx, eax
.text:0000000000409C12                 mov     rax, [rbp+var_30]
.text:0000000000409C16                 add     rax, rdx
.text:0000000000409C19                 add     rax, 8
.text:0000000000409C1D                 mov     rax, [rax]
.text:0000000000409C20                 mov     [rbp+var_90], rax
.text:0000000000409C27                 cmp     [rbp+var_90], 0
.text:0000000000409C2F                 jz      loc_409CDF
.text:0000000000409C35                 mov     edx, [rbp+var_84]
.text:0000000000409C3B                 mov     rax, [rbp+var_28]
.text:0000000000409C3F                 add     rax, rdx
.text:0000000000409C42                 mov     [rbp+var_B8], rax
.text:0000000000409C49                 mov     rax, [rbp+var_110]
.text:0000000000409C50                 mov     [rbp+var_C0], rax
.text:0000000000409C57                 mov     rax, [rbp+var_B8]
.text:0000000000409C5E                 mov     [rbp+var_C8], rax
.text:0000000000409C65                 mov     rax, [rbp+var_C0]
.text:0000000000409C6C                 mov     [rbp+var_D0], rax
.text:0000000000409C73
.text:0000000000409C73 loc_409C73:                             ; CODE XREF: sub_4097FA+4C5↓j
.text:0000000000409C73                 mov     rax, [rbp+var_C8]
.text:0000000000409C7A                 lea     rdx, [rax+1]
.text:0000000000409C7E                 mov     [rbp+var_C8], rdx
.text:0000000000409C85                 movzx   eax, byte ptr [rax]
.text:0000000000409C88                 mov     [rbp+var_D1], al
.text:0000000000409C8E                 mov     rax, [rbp+var_D0]
.text:0000000000409C95                 lea     rdx, [rax+1]
.text:0000000000409C99                 mov     [rbp+var_D0], rdx
.text:0000000000409CA0                 movzx   eax, byte ptr [rax]
.text:0000000000409CA3                 mov     [rbp+var_D2], al
.text:0000000000409CA9                 cmp     [rbp+var_D1], 0
.text:0000000000409CB0                 jz      short loc_409CC1
.text:0000000000409CB2                 movzx   eax, [rbp+var_D1]
.text:0000000000409CB9                 cmp     al, [rbp+var_D2]
.text:0000000000409CBF                 jz      short loc_409C73
.text:0000000000409CC1
.text:0000000000409CC1 loc_409CC1:                             ; CODE XREF: sub_4097FA+4B6↑j
.text:0000000000409CC1                 movzx   eax, [rbp+var_D1]
.text:0000000000409CC8                 cmp     al, [rbp+var_D2]
.text:0000000000409CCE                 setz    al
.text:0000000000409CD1                 movzx   eax, al
.text:0000000000409CD4                 test    eax, eax
.text:0000000000409CD6                 jz      short loc_409CDF
.text:0000000000409CD8                 mov     eax, 1
.text:0000000000409CDD                 jmp     short loc_409CE4
.text:0000000000409CDF ; ---------------------------------------------------------------------------
.text:0000000000409CDF
.text:0000000000409CDF loc_409CDF:                             ; CODE XREF: sub_4097FA+435↑j
.text:0000000000409CDF                                         ; sub_4097FA+4DC↑j
.text:0000000000409CDF                 mov     eax, 0
.text:0000000000409CE4
.text:0000000000409CE4 loc_409CE4:                             ; CODE XREF: sub_4097FA+4E3↑j
.text:0000000000409CE4                 test    al, al
.text:0000000000409CE6                 jz      short loc_409CFE
.text:0000000000409CE8                 mov     rdx, [rbp+var_90]
.text:0000000000409CEF                 mov     rax, [rbp+var_108]
.text:0000000000409CF6                 add     rax, rdx
.text:0000000000409CF9                 jmp     locret_409E66
.text:0000000000409CFE ; ---------------------------------------------------------------------------
.text:0000000000409CFE
.text:0000000000409CFE loc_409CFE:                             ; CODE XREF: sub_4097FA+4EC↑j
.text:0000000000409CFE                 add     [rbp+var_4], 1
.text:0000000000409D02                 jmp     loc_409BD4
.text:0000000000409D07 ; ---------------------------------------------------------------------------
.text:0000000000409D07
.text:0000000000409D07 loc_409D07:                             ; CODE XREF: sub_4097FA+403↑j
.text:0000000000409D07                 nop
.text:0000000000409D08                 mov     [rbp+var_4], 0
.text:0000000000409D0F
.text:0000000000409D0F loc_409D0F:                             ; CODE XREF: sub_4097FA+660↓j
.text:0000000000409D0F                 mov     eax, [rbp+var_4]
.text:0000000000409D12                 movsxd  rcx, eax
.text:0000000000409D15                 mov     rax, [rbp+var_50]
.text:0000000000409D19                 mov     edx, 0
.text:0000000000409D1E                 div     [rbp+var_40]
.text:0000000000409D22                 cmp     rcx, rax
.text:0000000000409D25                 jnb     loc_409E5F
.text:0000000000409D2B                 mov     edx, [rbp+var_4]
.text:0000000000409D2E                 mov     eax, edx
.text:0000000000409D30                 add     eax, eax
.text:0000000000409D32                 add     eax, edx
.text:0000000000409D34                 shl     eax, 3
.text:0000000000409D37                 movsxd  rdx, eax
.text:0000000000409D3A                 mov     rax, [rbp+var_48]
.text:0000000000409D3E                 add     rax, rdx
.text:0000000000409D41                 add     rax, 0Ch
.text:0000000000409D45                 mov     rax, [rax]
.text:0000000000409D48                 mov     edx, eax
.text:0000000000409D4A                 mov     eax, edx
.text:0000000000409D4C                 add     eax, eax
.text:0000000000409D4E                 add     eax, edx
.text:0000000000409D50                 shl     eax, 3
.text:0000000000409D53                 movsxd  rdx, eax
.text:0000000000409D56                 mov     rax, [rbp+var_30]
.text:0000000000409D5A                 add     rax, rdx
.text:0000000000409D5D                 mov     rax, [rax]
.text:0000000000409D60                 mov     [rbp+var_84], eax
.text:0000000000409D66                 mov     edx, [rbp+var_84]
.text:0000000000409D6C                 mov     rax, [rbp+var_28]
.text:0000000000409D70                 add     rax, rdx
.text:0000000000409D73                 mov     [rbp+var_E0], rax
.text:0000000000409D7A                 mov     rax, [rbp+var_110]
.text:0000000000409D81                 mov     [rbp+var_E8], rax
.text:0000000000409D88                 mov     rax, [rbp+var_E0]
.text:0000000000409D8F                 mov     [rbp+var_F0], rax
.text:0000000000409D96                 mov     rax, [rbp+var_E8]
.text:0000000000409D9D                 mov     [rbp+var_F8], rax
.text:0000000000409DA4
.text:0000000000409DA4 loc_409DA4:                             ; CODE XREF: sub_4097FA+5F6↓j
.text:0000000000409DA4                 mov     rax, [rbp+var_F0]
.text:0000000000409DAB                 lea     rdx, [rax+1]
.text:0000000000409DAF                 mov     [rbp+var_F0], rdx
.text:0000000000409DB6                 movzx   eax, byte ptr [rax]
.text:0000000000409DB9                 mov     [rbp+var_F9], al
.text:0000000000409DBF                 mov     rax, [rbp+var_F8]
.text:0000000000409DC6                 lea     rdx, [rax+1]
.text:0000000000409DCA                 mov     [rbp+var_F8], rdx
.text:0000000000409DD1                 movzx   eax, byte ptr [rax]
.text:0000000000409DD4                 mov     [rbp+var_FA], al
.text:0000000000409DDA                 cmp     [rbp+var_F9], 0
.text:0000000000409DE1                 jz      short loc_409DF2
.text:0000000000409DE3                 movzx   eax, [rbp+var_F9]
.text:0000000000409DEA                 cmp     al, [rbp+var_FA]
.text:0000000000409DF0                 jz      short loc_409DA4
.text:0000000000409DF2
.text:0000000000409DF2 loc_409DF2:                             ; CODE XREF: sub_4097FA+5E7↑j
.text:0000000000409DF2                 movzx   eax, [rbp+var_F9]
.text:0000000000409DF9                 cmp     al, [rbp+var_FA]
.text:0000000000409DFF                 setz    al
.text:0000000000409E02                 movzx   eax, al
.text:0000000000409E05                 test    eax, eax
.text:0000000000409E07                 setnz   al
.text:0000000000409E0A                 test    al, al
.text:0000000000409E0C                 jz      short loc_409E56
.text:0000000000409E0E                 mov     eax, [rbp+var_4]
.text:0000000000409E11                 cdqe
.text:0000000000409E13                 imul    rax, [rbp+var_40]
.text:0000000000409E18                 mov     rdx, rax
.text:0000000000409E1B                 mov     rax, [rbp+var_48]
.text:0000000000409E1F                 add     rax, rdx
.text:0000000000409E22                 mov     rdx, [rax]
.text:0000000000409E25                 cmp     [rbp+var_58], 0
.text:0000000000409E2A                 jz      short loc_409E49
.text:0000000000409E2C                 mov     eax, [rbp+var_4]
.text:0000000000409E2F                 cdqe
.text:0000000000409E31                 imul    rax, [rbp+var_40]
.text:0000000000409E36                 mov     rcx, rax
.text:0000000000409E39                 mov     rax, [rbp+var_48]
.text:0000000000409E3D                 add     rax, rcx
.text:0000000000409E40                 add     rax, 10h
.text:0000000000409E44                 mov     rax, [rax]
.text:0000000000409E47                 jmp     short loc_409E4E
.text:0000000000409E49 ; ---------------------------------------------------------------------------
.text:0000000000409E49
.text:0000000000409E49 loc_409E49:                             ; CODE XREF: sub_4097FA+630↑j
.text:0000000000409E49                 mov     eax, 0
.text:0000000000409E4E
.text:0000000000409E4E loc_409E4E:                             ; CODE XREF: sub_4097FA+64D↑j
.text:0000000000409E4E                 add     rax, rdx
.text:0000000000409E51                 mov     rax, [rax]
.text:0000000000409E54                 jmp     short locret_409E66
.text:0000000000409E56 ; ---------------------------------------------------------------------------
.text:0000000000409E56
.text:0000000000409E56 loc_409E56:                             ; CODE XREF: sub_4097FA+612↑j
.text:0000000000409E56                 add     [rbp+var_4], 1
.text:0000000000409E5A                 jmp     loc_409D0F
.text:0000000000409E5F ; ---------------------------------------------------------------------------
.text:0000000000409E5F
.text:0000000000409E5F loc_409E5F:                             ; CODE XREF: sub_4097FA+52B↑j
.text:0000000000409E5F                 mov     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000409E66
.text:0000000000409E66 locret_409E66:                          ; CODE XREF: sub_4097FA+4FF↑j
.text:0000000000409E66                                         ; sub_4097FA+65A↑j
.text:0000000000409E66                 leave
.text:0000000000409E67                 retn
.text:0000000000409E67 ; } // starts at 4097FA
.text:0000000000409E67 sub_4097FA      endp
.text:0000000000409E67
.text:0000000000409E68
.text:0000000000409E68 ; =============== S U B R O U T I N E =======================================
.text:0000000000409E68
.text:0000000000409E68 ; Attributes: bp-based frame
.text:0000000000409E68
.text:0000000000409E68 sub_409E68      proc near               ; CODE XREF: sub_408E38+21↑p
.text:0000000000409E68
.text:0000000000409E68 var_38          = qword ptr -38h
.text:0000000000409E68 var_30          = qword ptr -30h
.text:0000000000409E68 var_24          = dword ptr -24h
.text:0000000000409E68 var_20          = qword ptr -20h
.text:0000000000409E68 var_18          = qword ptr -18h
.text:0000000000409E68
.text:0000000000409E68 ; __unwind {
.text:0000000000409E68                 push    rbp
.text:0000000000409E69                 mov     rbp, rsp
.text:0000000000409E6C                 push    rbx
.text:0000000000409E6D                 sub     rsp, 38h
.text:0000000000409E71                 mov     rax, cs:qword_60C3D0
.text:0000000000409E78                 test    rax, rax
.text:0000000000409E7B                 jnz     loc_40A03B
.text:0000000000409E81                 lea     rax, [rbp+var_38]
.text:0000000000409E85                 mov     [rbp+var_38], rax
.text:0000000000409E89
.text:0000000000409E89 loc_409E89:                             ; CODE XREF: sub_409E68+5E↓j
.text:0000000000409E89                 mov     rax, [rbp+var_38]
.text:0000000000409E8D                 mov     rax, [rax]
.text:0000000000409E90                 cmp     rax, 1
.text:0000000000409E94                 jnz     short loc_409EBA
.text:0000000000409E96                 mov     rax, [rbp+var_38]
.text:0000000000409E9A                 add     rax, 8
.text:0000000000409E9E                 mov     rax, [rax]
.text:0000000000409EA1                 mov     rdx, [rbp+var_38]
.text:0000000000409EA5                 cmp     rax, rdx
.text:0000000000409EA8                 jl      short loc_409EBA
.text:0000000000409EAA                 mov     rax, [rbp+var_38]
.text:0000000000409EAE                 add     rax, 10h
.text:0000000000409EB2                 mov     rax, [rax]
.text:0000000000409EB5                 test    rax, rax
.text:0000000000409EB8                 jz      short loc_409EC8
.text:0000000000409EBA
.text:0000000000409EBA loc_409EBA:                             ; CODE XREF: sub_409E68+2C↑j
.text:0000000000409EBA                                         ; sub_409E68+40↑j
.text:0000000000409EBA                 mov     rax, [rbp+var_38]
.text:0000000000409EBE                 add     rax, 8
.text:0000000000409EC2                 mov     [rbp+var_38], rax
.text:0000000000409EC6                 jmp     short loc_409E89
.text:0000000000409EC8 ; ---------------------------------------------------------------------------
.text:0000000000409EC8
.text:0000000000409EC8 loc_409EC8:                             ; CODE XREF: sub_409E68+50↑j
.text:0000000000409EC8                                         ; sub_409E68+79↓j
.text:0000000000409EC8                 mov     rax, [rbp+var_38]
.text:0000000000409ECC                 lea     rdx, [rax+8]
.text:0000000000409ED0                 mov     [rbp+var_38], rdx
.text:0000000000409ED4                 mov     rax, [rax]
.text:0000000000409ED7                 test    rax, rax
.text:0000000000409EDA                 setnz   al
.text:0000000000409EDD                 test    al, al
.text:0000000000409EDF                 jz      short loc_409EE3
.text:0000000000409EE1                 jmp     short loc_409EC8
.text:0000000000409EE3 ; ---------------------------------------------------------------------------
.text:0000000000409EE3
.text:0000000000409EE3 loc_409EE3:                             ; CODE XREF: sub_409E68+77↑j
.text:0000000000409EE3                                         ; sub_409E68+94↓j
.text:0000000000409EE3                 mov     rax, [rbp+var_38]
.text:0000000000409EE7                 lea     rdx, [rax+8]
.text:0000000000409EEB                 mov     [rbp+var_38], rdx
.text:0000000000409EEF                 mov     rax, [rax]
.text:0000000000409EF2                 test    rax, rax
.text:0000000000409EF5                 setnz   al
.text:0000000000409EF8                 test    al, al
.text:0000000000409EFA                 jz      short loc_409EFE
.text:0000000000409EFC                 jmp     short loc_409EE3
.text:0000000000409EFE ; ---------------------------------------------------------------------------
.text:0000000000409EFE
.text:0000000000409EFE loc_409EFE:                             ; CODE XREF: sub_409E68+92↑j
.text:0000000000409EFE                 mov     rbx, [rbp+var_38]
.text:0000000000409F02
.text:0000000000409F02 loc_409F02:                             ; CODE XREF: sub_409E68+1CE↓j
.text:0000000000409F02                 mov     rax, [rbx]
.text:0000000000409F05                 test    rax, rax
.text:0000000000409F08                 jz      loc_40A03C
.text:0000000000409F0E                 mov     rax, [rbx]
.text:0000000000409F11                 cmp     rax, 9
.text:0000000000409F15                 jnz     loc_40A031
.text:0000000000409F1B                 lea     rax, unk_40B3F4
.text:0000000000409F22                 mov     [rbp+var_18], rax
.text:0000000000409F26                 mov     rax, 0BA58AD7DAADB1D5Dh
.text:0000000000409F30                 mov     [rbp+var_20], rax
.text:0000000000409F34                 mov     [rbp+var_24], 5
.text:0000000000409F3B                 call    getMem
.text:0000000000409F40                 mov     [rbp+var_30], rax
.text:0000000000409F44                 mov     rax, [rbp+var_30]
.text:0000000000409F48                 movzx   eax, byte ptr [rax]
.text:0000000000409F4B                 movzx   eax, al
.text:0000000000409F4E                 lea     ecx, [rax+3]
.text:0000000000409F51                 mov     edx, 66666667h
.text:0000000000409F56                 mov     eax, ecx
.text:0000000000409F58                 imul    edx
.text:0000000000409F5A                 sar     edx, 2
.text:0000000000409F5D                 mov     eax, ecx
.text:0000000000409F5F                 sar     eax, 1Fh
.text:0000000000409F62                 sub     edx, eax
.text:0000000000409F64                 mov     eax, edx
.text:0000000000409F66                 shl     eax, 2
.text:0000000000409F69                 add     eax, edx
.text:0000000000409F6B                 add     eax, eax
.text:0000000000409F6D                 sub     ecx, eax
.text:0000000000409F6F                 mov     edx, ecx
.text:0000000000409F71                 mov     rax, [rbp+var_30]
.text:0000000000409F75                 mov     [rax], dl
.text:0000000000409F77                 sub     [rbp+var_24], 1
.text:0000000000409F7B
.text:0000000000409F7B loc_409F7B:                             ; CODE XREF: sub_409E68+189↓j
.text:0000000000409F7B                 cmp     [rbp+var_24], 0
.text:0000000000409F7F                 js      short loc_409FF3
.text:0000000000409F81                 mov     rdx, [rbp+var_20]
.text:0000000000409F85                 mov     rax, 5851F42D4C957F2Dh
.text:0000000000409F8F                 imul    rax, rdx
.text:0000000000409F93                 add     rax, 1
.text:0000000000409F97                 mov     [rbp+var_20], rax
.text:0000000000409F9B                 mov     eax, [rbp+var_24]
.text:0000000000409F9E                 sar     eax, 2
.text:0000000000409FA1                 cdqe
.text:0000000000409FA3                 lea     rdx, ds:0[rax*4]
.text:0000000000409FAB                 mov     rax, [rbp+var_18]
.text:0000000000409FAF                 add     rax, rdx
.text:0000000000409FB2                 mov     edx, [rax]
.text:0000000000409FB4                 mov     rax, [rbp+var_20]
.text:0000000000409FB8                 shr     rax, 20h
.text:0000000000409FBC                 mov     esi, eax
.text:0000000000409FBE                 mov     rax, [rbp+var_30]
.text:0000000000409FC2                 movzx   eax, byte ptr [rax]
.text:0000000000409FC5                 movzx   eax, al
.text:0000000000409FC8                 mov     ecx, [rbp+var_24]
.text:0000000000409FCB                 mov     edi, ecx
.text:0000000000409FCD                 sar     edi, 2
.text:0000000000409FD0                 xor     esi, edx
.text:0000000000409FD2                 mov     rcx, [rbp+var_30]
.text:0000000000409FD6                 movsxd  rdi, edi
.text:0000000000409FD9                 movsxd  rdx, eax
.text:0000000000409FDC                 mov     rax, rdx
.text:0000000000409FDF                 shl     rax, 3
.text:0000000000409FE3                 add     rax, rdx
.text:0000000000409FE6                 add     rax, rdi
.text:0000000000409FE9                 mov     [rcx+rax*4+4], esi
.text:0000000000409FED                 sub     [rbp+var_24], 4
.text:0000000000409FF1                 jmp     short loc_409F7B
.text:0000000000409FF3 ; ---------------------------------------------------------------------------
.text:0000000000409FF3
.text:0000000000409FF3 loc_409FF3:                             ; CODE XREF: sub_409E68+117↑j
.text:0000000000409FF3                 mov     rax, [rbp+var_30]
.text:0000000000409FF7                 movzx   eax, byte ptr [rax]
.text:0000000000409FFA                 movzx   eax, al
.text:0000000000409FFD                 movsxd  rdx, eax
.text:000000000040A000                 mov     rax, rdx
.text:000000000040A003                 shl     rax, 3
.text:000000000040A007                 add     rax, rdx
.text:000000000040A00A                 shl     rax, 2
.text:000000000040A00E                 mov     rdx, [rbp+var_30]
.text:000000000040A012                 add     rax, rdx
.text:000000000040A015                 lea     rdx, [rax+4]
.text:000000000040A019                 mov     rax, [rbx+8]
.text:000000000040A01D                 mov     rsi, rdx
.text:000000000040A020                 mov     rdi, rax
.text:000000000040A023                 call    sub_4097FA
.text:000000000040A028                 mov     cs:qword_60C3D0, rax
.text:000000000040A02F                 jmp     short loc_40A03C
.text:000000000040A031 ; ---------------------------------------------------------------------------
.text:000000000040A031
.text:000000000040A031 loc_40A031:                             ; CODE XREF: sub_409E68+AD↑j
.text:000000000040A031                 nop
.text:000000000040A032                 add     rbx, 10h
.text:000000000040A036                 jmp     loc_409F02
.text:000000000040A03B ; ---------------------------------------------------------------------------
.text:000000000040A03B
.text:000000000040A03B loc_40A03B:                             ; CODE XREF: sub_409E68+13↑j
.text:000000000040A03B                 nop
.text:000000000040A03C
.text:000000000040A03C loc_40A03C:                             ; CODE XREF: sub_409E68+A0↑j
.text:000000000040A03C                                         ; sub_409E68+1C7↑j
.text:000000000040A03C                 add     rsp, 38h
.text:000000000040A040                 pop     rbx
.text:000000000040A041                 pop     rbp
.text:000000000040A042                 retn
.text:000000000040A042 ; } // starts at 409E68
.text:000000000040A042 sub_409E68      endp
.text:000000000040A042
.text:000000000040A043
.text:000000000040A043 ; =============== S U B R O U T I N E =======================================
.text:000000000040A043
.text:000000000040A043 ; Attributes: bp-based frame
.text:000000000040A043
.text:000000000040A043 sub_40A043      proc near               ; CODE XREF: sub_40A10B+157↓p
.text:000000000040A043                                         ; sub_40A2A2+157↓p ...
.text:000000000040A043
.text:000000000040A043 var_8           = qword ptr -8
.text:000000000040A043
.text:000000000040A043 ; __unwind {
.text:000000000040A043                 push    rbp
.text:000000000040A044                 mov     rbp, rsp
.text:000000000040A047                 sub     rsp, 10h
.text:000000000040A04B                 mov     [rbp+var_8], rdi
.text:000000000040A04F                 nop
.text:000000000040A050                 nop
.text:000000000040A051                 nop
.text:000000000040A052                 nop
.text:000000000040A053                 nop
.text:000000000040A054                 nop
.text:000000000040A055                 nop
.text:000000000040A056                 nop
.text:000000000040A057                 nop
.text:000000000040A058                 nop
.text:000000000040A059                 nop
.text:000000000040A05A                 nop
.text:000000000040A05B                 nop
.text:000000000040A05C                 nop
.text:000000000040A05D                 nop
.text:000000000040A05E                 nop
.text:000000000040A05F                 nop
.text:000000000040A060                 nop
.text:000000000040A061                 nop
.text:000000000040A062                 nop
.text:000000000040A063                 nop
.text:000000000040A064                 mov     rax, cs:qword_60C3D0
.text:000000000040A06B                 mov     rdx, [rbp+var_8]
.text:000000000040A06F                 mov     rsi, rdx
.text:000000000040A072                 mov     rdi, rax
.text:000000000040A075                 call    sub_4097FA
.text:000000000040A07A                 leave
.text:000000000040A07B                 retn
.text:000000000040A07B ; } // starts at 40A043
.text:000000000040A07B sub_40A043      endp
.text:000000000040A07B
.text:000000000040A07C
.text:000000000040A07C ; =============== S U B R O U T I N E =======================================
.text:000000000040A07C
.text:000000000040A07C ; Attributes: bp-based frame
.text:000000000040A07C
.text:000000000040A07C sub_40A07C      proc near               ; CODE XREF: sub_400B97+132↑p
.text:000000000040A07C                                         ; sub_400CED+247↑p ...
.text:000000000040A07C
.text:000000000040A07C var_B8          = qword ptr -0B8h
.text:000000000040A07C var_A8          = qword ptr -0A8h
.text:000000000040A07C var_A0          = qword ptr -0A0h
.text:000000000040A07C var_98          = qword ptr -98h
.text:000000000040A07C var_90          = qword ptr -90h
.text:000000000040A07C var_88          = qword ptr -88h
.text:000000000040A07C var_80          = xmmword ptr -80h
.text:000000000040A07C var_70          = xmmword ptr -70h
.text:000000000040A07C var_60          = xmmword ptr -60h
.text:000000000040A07C var_50          = xmmword ptr -50h
.text:000000000040A07C var_40          = xmmword ptr -40h
.text:000000000040A07C var_30          = xmmword ptr -30h
.text:000000000040A07C var_20          = xmmword ptr -20h
.text:000000000040A07C var_10          = xmmword ptr -10h
.text:000000000040A07C
.text:000000000040A07C ; __unwind {
.text:000000000040A07C                 push    rbp
.text:000000000040A07D                 mov     rbp, rsp
.text:000000000040A080                 sub     rsp, 48h
.text:000000000040A084                 mov     [rbp+var_B8], rdi
.text:000000000040A08B                 mov     [rbp+var_A8], rsi
.text:000000000040A092                 mov     [rbp+var_A0], rdx
.text:000000000040A099                 mov     [rbp+var_98], rcx
.text:000000000040A0A0                 mov     [rbp+var_90], r8
.text:000000000040A0A7                 mov     [rbp+var_88], r9
.text:000000000040A0AE                 test    al, al
.text:000000000040A0B0                 jz      short loc_40A0D2
.text:000000000040A0B2                 movaps  [rbp+var_80], xmm0
.text:000000000040A0B6                 movaps  [rbp+var_70], xmm1
.text:000000000040A0BA                 movaps  [rbp+var_60], xmm2
.text:000000000040A0BE                 movaps  [rbp+var_50], xmm3
.text:000000000040A0C2                 movaps  [rbp+var_40], xmm4
.text:000000000040A0C6                 movaps  [rbp+var_30], xmm5
.text:000000000040A0CA                 movaps  [rbp+var_20], xmm6
.text:000000000040A0CE                 movaps  [rbp+var_10], xmm7
.text:000000000040A0D2
.text:000000000040A0D2 loc_40A0D2:                             ; CODE XREF: sub_40A07C+34↑j
.text:000000000040A0D2                 nop
.text:000000000040A0D3                 nop
.text:000000000040A0D4                 nop
.text:000000000040A0D5                 nop
.text:000000000040A0D6                 nop
.text:000000000040A0D7                 nop
.text:000000000040A0D8                 nop
.text:000000000040A0D9                 nop
.text:000000000040A0DA                 nop
.text:000000000040A0DB                 nop
.text:000000000040A0DC                 nop
.text:000000000040A0DD                 nop
.text:000000000040A0DE                 nop
.text:000000000040A0DF                 nop
.text:000000000040A0E0                 nop
.text:000000000040A0E1                 nop
.text:000000000040A0E2                 nop
.text:000000000040A0E3                 nop
.text:000000000040A0E4                 nop
.text:000000000040A0E5                 nop
.text:000000000040A0E6                 nop
.text:000000000040A0E7                 mov     r10, cs:qword_60C3D0
.text:000000000040A0EE                 push    rsi
.text:000000000040A0EF                 push    rdx
.text:000000000040A0F0                 push    rcx
.text:000000000040A0F1                 push    r8
.text:000000000040A0F3                 push    r9
.text:000000000040A0F5                 mov     rsi, rdi
.text:000000000040A0F8                 mov     rdi, r10
.text:000000000040A0FB                 call    sub_4097FA
.text:000000000040A100                 pop     r8
.text:000000000040A102                 pop     rcx
.text:000000000040A103                 pop     rdx
.text:000000000040A104                 pop     rsi
.text:000000000040A105                 pop     rdi
.text:000000000040A106                 call    rax
.text:000000000040A108                 nop
.text:000000000040A109                 leave
.text:000000000040A10A                 retn
.text:000000000040A10A ; } // starts at 40A07C
.text:000000000040A10A sub_40A07C      endp
.text:000000000040A10A
.text:000000000040A10B
.text:000000000040A10B ; =============== S U B R O U T I N E =======================================
.text:000000000040A10B
.text:000000000040A10B ; Attributes: bp-based frame
.text:000000000040A10B
.text:000000000040A10B sub_40A10B      proc near               ; CODE XREF: sub_40A433+F↓p
.text:000000000040A10B                                         ; sub_40A5B0+F↓p ...
.text:000000000040A10B
.text:000000000040A10B var_58          = qword ptr -58h
.text:000000000040A10B var_48          = qword ptr -48h
.text:000000000040A10B var_3C          = dword ptr -3Ch
.text:000000000040A10B var_38          = qword ptr -38h
.text:000000000040A10B var_30          = qword ptr -30h
.text:000000000040A10B var_24          = dword ptr -24h
.text:000000000040A10B var_20          = qword ptr -20h
.text:000000000040A10B var_18          = qword ptr -18h
.text:000000000040A10B var_10          = dword ptr -10h
.text:000000000040A10B var_C           = dword ptr -0Ch
.text:000000000040A10B var_8           = qword ptr -8
.text:000000000040A10B
.text:000000000040A10B ; __unwind {
.text:000000000040A10B                 push    rbp
.text:000000000040A10C                 mov     rbp, rsp
.text:000000000040A10F                 sub     rsp, 60h
.text:000000000040A113                 mov     [rbp+var_58], rdi
.text:000000000040A117
.text:000000000040A117 loc_40A117:                             ; CODE XREF: sub_40A10B+18E↓j
.text:000000000040A117                 mov     rdx, [rbp+var_58]
.text:000000000040A11B                 mov     eax, 1
.text:000000000040A120                 mov     ecx, 0
.text:000000000040A125                 lock cmpxchg [rdx], ecx
.text:000000000040A129                 setz    al
.text:000000000040A12C                 test    al, al
.text:000000000040A12E                 jnz     loc_40A29E
.text:000000000040A134                 mov     rax, [rbp+var_58]
.text:000000000040A138                 mov     [rbp+var_8], rax
.text:000000000040A13C                 mov     [rbp+var_C], 0
.text:000000000040A143                 mov     [rbp+var_10], 0
.text:000000000040A14A                 mov     [rbp+var_18], 0
.text:000000000040A152                 mov     [rbp+var_20], 0
.text:000000000040A15A                 mov     [rbp+var_24], 0
.text:000000000040A161                 lea     rax, dword_40B3FD
.text:000000000040A168                 mov     [rbp+var_30], rax
.text:000000000040A16C                 mov     rax, 8754F2375DB8E0B6h
.text:000000000040A176                 mov     [rbp+var_38], rax
.text:000000000040A17A                 mov     [rbp+var_3C], 8
.text:000000000040A181                 call    getMem
.text:000000000040A186                 mov     [rbp+var_48], rax
.text:000000000040A18A                 mov     rax, [rbp+var_48]
.text:000000000040A18E                 movzx   eax, byte ptr [rax]
.text:000000000040A191                 movzx   eax, al
.text:000000000040A194                 lea     ecx, [rax+3]
.text:000000000040A197                 mov     edx, 66666667h
.text:000000000040A19C                 mov     eax, ecx
.text:000000000040A19E                 imul    edx
.text:000000000040A1A0                 sar     edx, 2
.text:000000000040A1A3                 mov     eax, ecx
.text:000000000040A1A5                 sar     eax, 1Fh
.text:000000000040A1A8                 sub     edx, eax
.text:000000000040A1AA                 mov     eax, edx
.text:000000000040A1AC                 shl     eax, 2
.text:000000000040A1AF                 add     eax, edx
.text:000000000040A1B1                 add     eax, eax
.text:000000000040A1B3                 sub     ecx, eax
.text:000000000040A1B5                 mov     edx, ecx
.text:000000000040A1B7                 mov     rax, [rbp+var_48]
.text:000000000040A1BB                 mov     [rax], dl
.text:000000000040A1BD                 sub     [rbp+var_3C], 1
.text:000000000040A1C1
.text:000000000040A1C1 loc_40A1C1:                             ; CODE XREF: sub_40A10B+12C↓j
.text:000000000040A1C1                 cmp     [rbp+var_3C], 0
.text:000000000040A1C5                 js      short loc_40A239
.text:000000000040A1C7                 mov     rdx, [rbp+var_38]
.text:000000000040A1CB                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040A1D5                 imul    rax, rdx
.text:000000000040A1D9                 add     rax, 1
.text:000000000040A1DD                 mov     [rbp+var_38], rax
.text:000000000040A1E1                 mov     eax, [rbp+var_3C]
.text:000000000040A1E4                 sar     eax, 2
.text:000000000040A1E7                 cdqe
.text:000000000040A1E9                 lea     rdx, ds:0[rax*4]
.text:000000000040A1F1                 mov     rax, [rbp+var_30]
.text:000000000040A1F5                 add     rax, rdx
.text:000000000040A1F8                 mov     edx, [rax]
.text:000000000040A1FA                 mov     rax, [rbp+var_38]
.text:000000000040A1FE                 shr     rax, 20h
.text:000000000040A202                 mov     esi, eax
.text:000000000040A204                 mov     rax, [rbp+var_48]
.text:000000000040A208                 movzx   eax, byte ptr [rax]
.text:000000000040A20B                 movzx   eax, al
.text:000000000040A20E                 mov     ecx, [rbp+var_3C]
.text:000000000040A211                 mov     edi, ecx
.text:000000000040A213                 sar     edi, 2
.text:000000000040A216                 xor     esi, edx
.text:000000000040A218                 mov     rcx, [rbp+var_48]
.text:000000000040A21C                 movsxd  rdi, edi
.text:000000000040A21F                 movsxd  rdx, eax
.text:000000000040A222                 mov     rax, rdx
.text:000000000040A225                 shl     rax, 3
.text:000000000040A229                 add     rax, rdx
.text:000000000040A22C                 add     rax, rdi
.text:000000000040A22F                 mov     [rcx+rax*4+4], esi
.text:000000000040A233                 sub     [rbp+var_3C], 4
.text:000000000040A237                 jmp     short loc_40A1C1
.text:000000000040A239 ; ---------------------------------------------------------------------------
.text:000000000040A239
.text:000000000040A239 loc_40A239:                             ; CODE XREF: sub_40A10B+BA↑j
.text:000000000040A239                 mov     rax, [rbp+var_48]
.text:000000000040A23D                 movzx   eax, byte ptr [rax]
.text:000000000040A240                 movzx   eax, al
.text:000000000040A243                 movsxd  rdx, eax
.text:000000000040A246                 mov     rax, rdx
.text:000000000040A249                 shl     rax, 3
.text:000000000040A24D                 add     rax, rdx
.text:000000000040A250                 shl     rax, 2
.text:000000000040A254                 mov     rdx, [rbp+var_48]
.text:000000000040A258                 add     rax, rdx
.text:000000000040A25B                 add     rax, 4
.text:000000000040A25F                 mov     rdi, rax
.text:000000000040A262                 call    sub_40A043
.text:000000000040A267                 mov     r10, rax
.text:000000000040A26A                 mov     r8, [rbp+var_8]
.text:000000000040A26E                 mov     rdi, [rbp+var_18]
.text:000000000040A272                 mov     ecx, [rbp+var_10]
.text:000000000040A275                 mov     edx, [rbp+var_C]
.text:000000000040A278                 mov     rax, [rbp+var_8]
.text:000000000040A27C                 sub     rsp, 8
.text:000000000040A280                 mov     esi, [rbp+var_24]
.text:000000000040A283                 push    rsi
.text:000000000040A284                 mov     r9, r8
.text:000000000040A287                 mov     r8, rdi
.text:000000000040A28A                 mov     rsi, rax
.text:000000000040A28D                 mov     edi, 0CAh
.text:000000000040A292                 call    r10
.text:000000000040A295                 add     rsp, 10h
.text:000000000040A299                 jmp     loc_40A117
.text:000000000040A29E ; ---------------------------------------------------------------------------
.text:000000000040A29E
.text:000000000040A29E loc_40A29E:                             ; CODE XREF: sub_40A10B+23↑j
.text:000000000040A29E                 nop
.text:000000000040A29F                 nop
.text:000000000040A2A0                 leave
.text:000000000040A2A1                 retn
.text:000000000040A2A1 ; } // starts at 40A10B
.text:000000000040A2A1 sub_40A10B      endp
.text:000000000040A2A1
.text:000000000040A2A2
.text:000000000040A2A2 ; =============== S U B R O U T I N E =======================================
.text:000000000040A2A2
.text:000000000040A2A2 ; Attributes: bp-based frame
.text:000000000040A2A2
.text:000000000040A2A2 sub_40A2A2      proc near               ; CODE XREF: sub_40A433+172↓p
.text:000000000040A2A2                                         ; sub_40A5B0+50↓p ...
.text:000000000040A2A2
.text:000000000040A2A2 var_58          = qword ptr -58h
.text:000000000040A2A2 var_48          = qword ptr -48h
.text:000000000040A2A2 var_3C          = dword ptr -3Ch
.text:000000000040A2A2 var_38          = qword ptr -38h
.text:000000000040A2A2 var_30          = qword ptr -30h
.text:000000000040A2A2 var_24          = dword ptr -24h
.text:000000000040A2A2 var_20          = qword ptr -20h
.text:000000000040A2A2 var_18          = qword ptr -18h
.text:000000000040A2A2 var_10          = dword ptr -10h
.text:000000000040A2A2 var_C           = dword ptr -0Ch
.text:000000000040A2A2 var_8           = qword ptr -8
.text:000000000040A2A2
.text:000000000040A2A2 ; __unwind {
.text:000000000040A2A2                 push    rbp
.text:000000000040A2A3                 mov     rbp, rsp
.text:000000000040A2A6                 sub     rsp, 60h
.text:000000000040A2AA                 mov     [rbp+var_58], rdi
.text:000000000040A2AE                 mov     rdx, [rbp+var_58]
.text:000000000040A2B2                 mov     eax, 0
.text:000000000040A2B7                 mov     ecx, 1
.text:000000000040A2BC                 lock cmpxchg [rdx], ecx
.text:000000000040A2C0                 setz    al
.text:000000000040A2C3                 test    al, al
.text:000000000040A2C5                 jz      loc_40A430
.text:000000000040A2CB                 mov     rax, [rbp+var_58]
.text:000000000040A2CF                 mov     [rbp+var_8], rax
.text:000000000040A2D3                 mov     [rbp+var_C], 1
.text:000000000040A2DA                 mov     [rbp+var_10], 1
.text:000000000040A2E1                 mov     [rbp+var_18], 0
.text:000000000040A2E9                 mov     [rbp+var_20], 0
.text:000000000040A2F1                 mov     [rbp+var_24], 0
.text:000000000040A2F8                 lea     rax, dword_40B3FD
.text:000000000040A2FF                 mov     [rbp+var_30], rax
.text:000000000040A303                 mov     rax, 8754F2375DB8E0B6h
.text:000000000040A30D                 mov     [rbp+var_38], rax
.text:000000000040A311                 mov     [rbp+var_3C], 8
.text:000000000040A318                 call    getMem
.text:000000000040A31D                 mov     [rbp+var_48], rax
.text:000000000040A321                 mov     rax, [rbp+var_48]
.text:000000000040A325                 movzx   eax, byte ptr [rax]
.text:000000000040A328                 movzx   eax, al
.text:000000000040A32B                 lea     ecx, [rax+3]
.text:000000000040A32E                 mov     edx, 66666667h
.text:000000000040A333                 mov     eax, ecx
.text:000000000040A335                 imul    edx
.text:000000000040A337                 sar     edx, 2
.text:000000000040A33A                 mov     eax, ecx
.text:000000000040A33C                 sar     eax, 1Fh
.text:000000000040A33F                 sub     edx, eax
.text:000000000040A341                 mov     eax, edx
.text:000000000040A343                 shl     eax, 2
.text:000000000040A346                 add     eax, edx
.text:000000000040A348                 add     eax, eax
.text:000000000040A34A                 sub     ecx, eax
.text:000000000040A34C                 mov     edx, ecx
.text:000000000040A34E                 mov     rax, [rbp+var_48]
.text:000000000040A352                 mov     [rax], dl
.text:000000000040A354                 sub     [rbp+var_3C], 1
.text:000000000040A358
.text:000000000040A358 loc_40A358:                             ; CODE XREF: sub_40A2A2+12C↓j
.text:000000000040A358                 cmp     [rbp+var_3C], 0
.text:000000000040A35C                 js      short loc_40A3D0
.text:000000000040A35E                 mov     rdx, [rbp+var_38]
.text:000000000040A362                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040A36C                 imul    rax, rdx
.text:000000000040A370                 add     rax, 1
.text:000000000040A374                 mov     [rbp+var_38], rax
.text:000000000040A378                 mov     eax, [rbp+var_3C]
.text:000000000040A37B                 sar     eax, 2
.text:000000000040A37E                 cdqe
.text:000000000040A380                 lea     rdx, ds:0[rax*4]
.text:000000000040A388                 mov     rax, [rbp+var_30]
.text:000000000040A38C                 add     rax, rdx
.text:000000000040A38F                 mov     edx, [rax]
.text:000000000040A391                 mov     rax, [rbp+var_38]
.text:000000000040A395                 shr     rax, 20h
.text:000000000040A399                 mov     esi, eax
.text:000000000040A39B                 mov     rax, [rbp+var_48]
.text:000000000040A39F                 movzx   eax, byte ptr [rax]
.text:000000000040A3A2                 movzx   eax, al
.text:000000000040A3A5                 mov     ecx, [rbp+var_3C]
.text:000000000040A3A8                 mov     edi, ecx
.text:000000000040A3AA                 sar     edi, 2
.text:000000000040A3AD                 xor     esi, edx
.text:000000000040A3AF                 mov     rcx, [rbp+var_48]
.text:000000000040A3B3                 movsxd  rdi, edi
.text:000000000040A3B6                 movsxd  rdx, eax
.text:000000000040A3B9                 mov     rax, rdx
.text:000000000040A3BC                 shl     rax, 3
.text:000000000040A3C0                 add     rax, rdx
.text:000000000040A3C3                 add     rax, rdi
.text:000000000040A3C6                 mov     [rcx+rax*4+4], esi
.text:000000000040A3CA                 sub     [rbp+var_3C], 4
.text:000000000040A3CE                 jmp     short loc_40A358
.text:000000000040A3D0 ; ---------------------------------------------------------------------------
.text:000000000040A3D0
.text:000000000040A3D0 loc_40A3D0:                             ; CODE XREF: sub_40A2A2+BA↑j
.text:000000000040A3D0                 mov     rax, [rbp+var_48]
.text:000000000040A3D4                 movzx   eax, byte ptr [rax]
.text:000000000040A3D7                 movzx   eax, al
.text:000000000040A3DA                 movsxd  rdx, eax
.text:000000000040A3DD                 mov     rax, rdx
.text:000000000040A3E0                 shl     rax, 3
.text:000000000040A3E4                 add     rax, rdx
.text:000000000040A3E7                 shl     rax, 2
.text:000000000040A3EB                 mov     rdx, [rbp+var_48]
.text:000000000040A3EF                 add     rax, rdx
.text:000000000040A3F2                 add     rax, 4
.text:000000000040A3F6                 mov     rdi, rax
.text:000000000040A3F9                 call    sub_40A043
.text:000000000040A3FE                 mov     r10, rax
.text:000000000040A401                 mov     r8, [rbp+var_8]
.text:000000000040A405                 mov     rdi, [rbp+var_18]
.text:000000000040A409                 mov     ecx, [rbp+var_10]
.text:000000000040A40C                 mov     edx, [rbp+var_C]
.text:000000000040A40F                 mov     rax, [rbp+var_8]
.text:000000000040A413                 sub     rsp, 8
.text:000000000040A417                 mov     esi, [rbp+var_24]
.text:000000000040A41A                 push    rsi
.text:000000000040A41B                 mov     r9, r8
.text:000000000040A41E                 mov     r8, rdi
.text:000000000040A421                 mov     rsi, rax
.text:000000000040A424                 mov     edi, 0CAh
.text:000000000040A429                 call    r10
.text:000000000040A42C                 add     rsp, 10h
.text:000000000040A430
.text:000000000040A430 loc_40A430:                             ; CODE XREF: sub_40A2A2+23↑j
.text:000000000040A430                 nop
.text:000000000040A431                 leave
.text:000000000040A432                 retn
.text:000000000040A432 ; } // starts at 40A2A2
.text:000000000040A432 sub_40A2A2      endp
.text:000000000040A432
.text:000000000040A433
.text:000000000040A433 ; =============== S U B R O U T I N E =======================================
.text:000000000040A433
.text:000000000040A433 ; Attributes: bp-based frame
.text:000000000040A433
.text:000000000040A433 sub_40A433      proc near               ; CODE XREF: sub_40A8C3+1F↓p
.text:000000000040A433
.text:000000000040A433 var_28          = qword ptr -28h
.text:000000000040A433 var_1C          = dword ptr -1Ch
.text:000000000040A433 var_18          = qword ptr -18h
.text:000000000040A433 var_10          = qword ptr -10h
.text:000000000040A433 var_8           = qword ptr -8
.text:000000000040A433
.text:000000000040A433 ; __unwind {
.text:000000000040A433                 push    rbp
.text:000000000040A434                 mov     rbp, rsp
.text:000000000040A437                 sub     rsp, 30h
.text:000000000040A43B                 lea     rdi, unk_60C0E0
.text:000000000040A442                 call    sub_40A10B
.text:000000000040A447                 mov     rax, cs:qword_60C3D8
.text:000000000040A44E                 test    rax, rax
.text:000000000040A451                 jnz     loc_40A585
.text:000000000040A457                 lea     rax, unk_40B406
.text:000000000040A45E                 mov     [rbp+var_10], rax
.text:000000000040A462                 mov     rax, 97944258DC025370h
.text:000000000040A46C                 mov     [rbp+var_18], rax
.text:000000000040A470                 mov     [rbp+var_1C], 5
.text:000000000040A477                 call    getMem
.text:000000000040A47C                 mov     [rbp+var_28], rax
.text:000000000040A480                 mov     rax, [rbp+var_28]
.text:000000000040A484                 movzx   eax, byte ptr [rax]
.text:000000000040A487                 movzx   eax, al
.text:000000000040A48A                 lea     ecx, [rax+3]
.text:000000000040A48D                 mov     edx, 66666667h
.text:000000000040A492                 mov     eax, ecx
.text:000000000040A494                 imul    edx
.text:000000000040A496                 sar     edx, 2
.text:000000000040A499                 mov     eax, ecx
.text:000000000040A49B                 sar     eax, 1Fh
.text:000000000040A49E                 sub     edx, eax
.text:000000000040A4A0                 mov     eax, edx
.text:000000000040A4A2                 shl     eax, 2
.text:000000000040A4A5                 add     eax, edx
.text:000000000040A4A7                 add     eax, eax
.text:000000000040A4A9                 sub     ecx, eax
.text:000000000040A4AB                 mov     edx, ecx
.text:000000000040A4AD                 mov     rax, [rbp+var_28]
.text:000000000040A4B1                 mov     [rax], dl
.text:000000000040A4B3                 sub     [rbp+var_1C], 1
.text:000000000040A4B7
.text:000000000040A4B7 loc_40A4B7:                             ; CODE XREF: sub_40A433+FA↓j
.text:000000000040A4B7                 cmp     [rbp+var_1C], 0
.text:000000000040A4BB                 js      short loc_40A52F
.text:000000000040A4BD                 mov     rdx, [rbp+var_18]
.text:000000000040A4C1                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040A4CB                 imul    rax, rdx
.text:000000000040A4CF                 add     rax, 1
.text:000000000040A4D3                 mov     [rbp+var_18], rax
.text:000000000040A4D7                 mov     eax, [rbp+var_1C]
.text:000000000040A4DA                 sar     eax, 2
.text:000000000040A4DD                 cdqe
.text:000000000040A4DF                 lea     rdx, ds:0[rax*4]
.text:000000000040A4E7                 mov     rax, [rbp+var_10]
.text:000000000040A4EB                 add     rax, rdx
.text:000000000040A4EE                 mov     edx, [rax]
.text:000000000040A4F0                 mov     rax, [rbp+var_18]
.text:000000000040A4F4                 shr     rax, 20h
.text:000000000040A4F8                 mov     esi, eax
.text:000000000040A4FA                 mov     rax, [rbp+var_28]
.text:000000000040A4FE                 movzx   eax, byte ptr [rax]
.text:000000000040A501                 movzx   eax, al
.text:000000000040A504                 mov     ecx, [rbp+var_1C]
.text:000000000040A507                 mov     edi, ecx
.text:000000000040A509                 sar     edi, 2
.text:000000000040A50C                 xor     esi, edx
.text:000000000040A50E                 mov     rcx, [rbp+var_28]
.text:000000000040A512                 movsxd  rdi, edi
.text:000000000040A515                 movsxd  rdx, eax
.text:000000000040A518                 mov     rax, rdx
.text:000000000040A51B                 shl     rax, 3
.text:000000000040A51F                 add     rax, rdx
.text:000000000040A522                 add     rax, rdi
.text:000000000040A525                 mov     [rcx+rax*4+4], esi
.text:000000000040A529                 sub     [rbp+var_1C], 4
.text:000000000040A52D                 jmp     short loc_40A4B7
.text:000000000040A52F ; ---------------------------------------------------------------------------
.text:000000000040A52F
.text:000000000040A52F loc_40A52F:                             ; CODE XREF: sub_40A433+88↑j
.text:000000000040A52F                 mov     rax, [rbp+var_28]
.text:000000000040A533                 movzx   eax, byte ptr [rax]
.text:000000000040A536                 movzx   eax, al
.text:000000000040A539                 movsxd  rdx, eax
.text:000000000040A53C                 mov     rax, rdx
.text:000000000040A53F                 shl     rax, 3
.text:000000000040A543                 add     rax, rdx
.text:000000000040A546                 shl     rax, 2
.text:000000000040A54A                 mov     rdx, [rbp+var_28]
.text:000000000040A54E                 add     rax, rdx
.text:000000000040A551                 add     rax, 4
.text:000000000040A555                 mov     rdi, rax
.text:000000000040A558                 call    sub_40A043
.text:000000000040A55D                 mov     r9d, 0
.text:000000000040A563                 mov     r8d, 0FFFFFFFFh
.text:000000000040A569                 mov     ecx, 122h
.text:000000000040A56E                 mov     edx, 3
.text:000000000040A573                 mov     esi, 4000h
.text:000000000040A578                 mov     edi, 0
.text:000000000040A57D                 call    rax
.text:000000000040A57F                 mov     [rbp+var_8], rax
.text:000000000040A583                 jmp     short loc_40A59E
.text:000000000040A585 ; ---------------------------------------------------------------------------
.text:000000000040A585
.text:000000000040A585 loc_40A585:                             ; CODE XREF: sub_40A433+1E↑j
.text:000000000040A585                 mov     rax, cs:qword_60C3D8
.text:000000000040A58C                 mov     [rbp+var_8], rax
.text:000000000040A590                 mov     rax, [rbp+var_8]
.text:000000000040A594                 mov     rax, [rax]
.text:000000000040A597                 mov     cs:qword_60C3D8, rax
.text:000000000040A59E
.text:000000000040A59E loc_40A59E:                             ; CODE XREF: sub_40A433+150↑j
.text:000000000040A59E                 lea     rdi, unk_60C0E0
.text:000000000040A5A5                 call    sub_40A2A2
.text:000000000040A5AA                 mov     rax, [rbp+var_8]
.text:000000000040A5AE                 leave
.text:000000000040A5AF                 retn
.text:000000000040A5AF ; } // starts at 40A433
.text:000000000040A5AF sub_40A433      endp
.text:000000000040A5AF
.text:000000000040A5B0
.text:000000000040A5B0 ; =============== S U B R O U T I N E =======================================
.text:000000000040A5B0
.text:000000000040A5B0 ; Attributes: bp-based frame
.text:000000000040A5B0
.text:000000000040A5B0 sub_40A5B0      proc near               ; CODE XREF: afterClone+5B↓p
.text:000000000040A5B0
.text:000000000040A5B0 var_10          = qword ptr -10h
.text:000000000040A5B0 var_8           = qword ptr -8
.text:000000000040A5B0
.text:000000000040A5B0 ; __unwind {
.text:000000000040A5B0                 push    rbp
.text:000000000040A5B1                 mov     rbp, rsp
.text:000000000040A5B4                 sub     rsp, 10h
.text:000000000040A5B8                 lea     rdi, unk_60C0E0
.text:000000000040A5BF                 call    sub_40A10B
.text:000000000040A5C4                 mov     rax, cs:qword_60C3D8
.text:000000000040A5CB                 mov     [rbp+var_8], rax
.text:000000000040A5CF                 mov     rax, fs:0
.text:000000000040A5D8                 mov     [rbp+var_10], rax
.text:000000000040A5DC                 mov     rax, [rbp+var_10]
.text:000000000040A5E0                 mov     rax, [rax+8]
.text:000000000040A5E4                 mov     cs:qword_60C3D8, rax
.text:000000000040A5EB                 mov     rax, cs:qword_60C3D8
.text:000000000040A5F2                 mov     rdx, [rbp+var_8]
.text:000000000040A5F6                 mov     [rax], rdx
.text:000000000040A5F9                 lea     rdi, unk_60C0E0
.text:000000000040A600                 call    sub_40A2A2
.text:000000000040A605                 nop
.text:000000000040A606                 leave
.text:000000000040A607                 retn
.text:000000000040A607 ; } // starts at 40A5B0
.text:000000000040A607 sub_40A5B0      endp
.text:000000000040A607
.text:000000000040A608
.text:000000000040A608 ; =============== S U B R O U T I N E =======================================
.text:000000000040A608
.text:000000000040A608 ; Attributes: bp-based frame
.text:000000000040A608
.text:000000000040A608 sub_40A608      proc near               ; CODE XREF: sub_404398:loc_4043DF↑p
.text:000000000040A608
.text:000000000040A608 var_28          = qword ptr -28h
.text:000000000040A608 var_1C          = dword ptr -1Ch
.text:000000000040A608 var_18          = qword ptr -18h
.text:000000000040A608 var_10          = qword ptr -10h
.text:000000000040A608 var_4           = dword ptr -4
.text:000000000040A608
.text:000000000040A608 ; __unwind {
.text:000000000040A608                 push    rbp
.text:000000000040A609                 mov     rbp, rsp
.text:000000000040A60C                 sub     rsp, 30h
.text:000000000040A610                 lea     rdi, unk_60C0E0
.text:000000000040A617                 call    sub_40A10B
.text:000000000040A61C                 lea     rax, unk_40B40F
.text:000000000040A623                 mov     [rbp+var_10], rax
.text:000000000040A627                 mov     rax, 57E03DC511181C9h
.text:000000000040A631                 mov     [rbp+var_18], rax
.text:000000000040A635                 mov     [rbp+var_1C], 8
.text:000000000040A63C                 call    getMem
.text:000000000040A641                 mov     [rbp+var_28], rax
.text:000000000040A645                 mov     rax, [rbp+var_28]
.text:000000000040A649                 movzx   eax, byte ptr [rax]
.text:000000000040A64C                 movzx   eax, al
.text:000000000040A64F                 lea     ecx, [rax+3]
.text:000000000040A652                 mov     edx, 66666667h
.text:000000000040A657                 mov     eax, ecx
.text:000000000040A659                 imul    edx
.text:000000000040A65B                 sar     edx, 2
.text:000000000040A65E                 mov     eax, ecx
.text:000000000040A660                 sar     eax, 1Fh
.text:000000000040A663                 sub     edx, eax
.text:000000000040A665                 mov     eax, edx
.text:000000000040A667                 shl     eax, 2
.text:000000000040A66A                 add     eax, edx
.text:000000000040A66C                 add     eax, eax
.text:000000000040A66E                 sub     ecx, eax
.text:000000000040A670                 mov     edx, ecx
.text:000000000040A672                 mov     rax, [rbp+var_28]
.text:000000000040A676                 mov     [rax], dl
.text:000000000040A678                 sub     [rbp+var_1C], 1
.text:000000000040A67C
.text:000000000040A67C loc_40A67C:                             ; CODE XREF: sub_40A608+EA↓j
.text:000000000040A67C                 cmp     [rbp+var_1C], 0
.text:000000000040A680                 js      short loc_40A6F4
.text:000000000040A682                 mov     rdx, [rbp+var_18]
.text:000000000040A686                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040A690                 imul    rax, rdx
.text:000000000040A694                 add     rax, 1
.text:000000000040A698                 mov     [rbp+var_18], rax
.text:000000000040A69C                 mov     eax, [rbp+var_1C]
.text:000000000040A69F                 sar     eax, 2
.text:000000000040A6A2                 cdqe
.text:000000000040A6A4                 lea     rdx, ds:0[rax*4]
.text:000000000040A6AC                 mov     rax, [rbp+var_10]
.text:000000000040A6B0                 add     rax, rdx
.text:000000000040A6B3                 mov     edx, [rax]
.text:000000000040A6B5                 mov     rax, [rbp+var_18]
.text:000000000040A6B9                 shr     rax, 20h
.text:000000000040A6BD                 mov     esi, eax
.text:000000000040A6BF                 mov     rax, [rbp+var_28]
.text:000000000040A6C3                 movzx   eax, byte ptr [rax]
.text:000000000040A6C6                 movzx   eax, al
.text:000000000040A6C9                 mov     ecx, [rbp+var_1C]
.text:000000000040A6CC                 mov     edi, ecx
.text:000000000040A6CE                 sar     edi, 2
.text:000000000040A6D1                 xor     esi, edx
.text:000000000040A6D3                 mov     rcx, [rbp+var_28]
.text:000000000040A6D7                 movsxd  rdi, edi
.text:000000000040A6DA                 movsxd  rdx, eax
.text:000000000040A6DD                 mov     rax, rdx
.text:000000000040A6E0                 shl     rax, 3
.text:000000000040A6E4                 add     rax, rdx
.text:000000000040A6E7                 add     rax, rdi
.text:000000000040A6EA                 mov     [rcx+rax*4+4], esi
.text:000000000040A6EE                 sub     [rbp+var_1C], 4
.text:000000000040A6F2                 jmp     short loc_40A67C
.text:000000000040A6F4 ; ---------------------------------------------------------------------------
.text:000000000040A6F4
.text:000000000040A6F4 loc_40A6F4:                             ; CODE XREF: sub_40A608+78↑j
.text:000000000040A6F4                 mov     rax, [rbp+var_28]
.text:000000000040A6F8                 movzx   eax, byte ptr [rax]
.text:000000000040A6FB                 movzx   eax, al
.text:000000000040A6FE                 movsxd  rdx, eax
.text:000000000040A701                 mov     rax, rdx
.text:000000000040A704                 shl     rax, 3
.text:000000000040A708                 add     rax, rdx
.text:000000000040A70B                 shl     rax, 2
.text:000000000040A70F                 mov     rdx, [rbp+var_28]
.text:000000000040A713                 add     rax, rdx
.text:000000000040A716                 add     rax, 4
.text:000000000040A71A                 mov     esi, 39h
.text:000000000040A71F                 mov     rdi, rax
.text:000000000040A722                 mov     eax, 0
.text:000000000040A727                 call    sub_40A07C
.text:000000000040A72C                 mov     [rbp+var_4], eax
.text:000000000040A72F                 lea     rdi, unk_60C0E0
.text:000000000040A736                 call    sub_40A2A2
.text:000000000040A73B                 mov     eax, [rbp+var_4]
.text:000000000040A73E                 leave
.text:000000000040A73F                 retn
.text:000000000040A73F ; } // starts at 40A608
.text:000000000040A73F sub_40A608      endp
.text:000000000040A73F
.text:000000000040A740
.text:000000000040A740 ; =============== S U B R O U T I N E =======================================
.text:000000000040A740
.text:000000000040A740 ; Attributes: bp-based frame
.text:000000000040A740
.text:000000000040A740 afterClone      proc near               ; DATA XREF: sub_40A8C3+245↓o
.text:000000000040A740
.text:000000000040A740 var_48          = qword ptr -48h
.text:000000000040A740 var_40          = qword ptr -40h
.text:000000000040A740 var_38          = qword ptr -38h
.text:000000000040A740 var_30          = qword ptr -30h
.text:000000000040A740 var_24          = dword ptr -24h
.text:000000000040A740 var_20          = qword ptr -20h
.text:000000000040A740 var_18          = qword ptr -18h
.text:000000000040A740
.text:000000000040A740 ; __unwind {
.text:000000000040A740                 push    rbp
.text:000000000040A741                 mov     rbp, rsp
.text:000000000040A744                 push    r12
.text:000000000040A746                 push    rbx
.text:000000000040A747                 sub     rsp, 40h
.text:000000000040A74B                 mov     [rbp+var_48], rdi
.text:000000000040A74F                 mov     rax, fs:0
.text:000000000040A758                 mov     [rbp+var_40], rax
.text:000000000040A75C                 mov     rbx, [rbp+var_40]
.text:000000000040A760                 call    randData
.text:000000000040A765                 mov     r12d, eax
.text:000000000040A768                 call    randData
.text:000000000040A76D                 mov     eax, eax
.text:000000000040A76F                 shl     rax, 20h
.text:000000000040A773                 xor     rax, r12
.text:000000000040A776                 mov     [rbx+28h], rax
.text:000000000040A77A                 mov     rax, [rbp+var_48]
.text:000000000040A77E                 mov     rdx, fs:0
.text:000000000040A787                 mov     [rbp+var_38], rdx
.text:000000000040A78B                 mov     rdx, [rbp+var_38]
.text:000000000040A78F                 add     rdx, 1A4h
.text:000000000040A796                 mov     rdi, rdx
.text:000000000040A799                 call    rax
.text:000000000040A79B                 call    sub_40A5B0
.text:000000000040A7A0                 lea     rax, dword_40B418
.text:000000000040A7A7                 mov     [rbp+var_18], rax
.text:000000000040A7AB                 mov     rax, 83C6AEB9F2C9A574h
.text:000000000040A7B5                 mov     [rbp+var_20], rax
.text:000000000040A7B9                 mov     [rbp+var_24], 8
.text:000000000040A7C0                 call    getMem
.text:000000000040A7C5                 mov     [rbp+var_30], rax
.text:000000000040A7C9                 mov     rax, [rbp+var_30]
.text:000000000040A7CD                 movzx   eax, byte ptr [rax]
.text:000000000040A7D0                 movzx   eax, al
.text:000000000040A7D3                 lea     ecx, [rax+3]
.text:000000000040A7D6                 mov     edx, 66666667h
.text:000000000040A7DB                 mov     eax, ecx
.text:000000000040A7DD                 imul    edx
.text:000000000040A7DF                 sar     edx, 2
.text:000000000040A7E2                 mov     eax, ecx
.text:000000000040A7E4                 sar     eax, 1Fh
.text:000000000040A7E7                 sub     edx, eax
.text:000000000040A7E9                 mov     eax, edx
.text:000000000040A7EB                 shl     eax, 2
.text:000000000040A7EE                 add     eax, edx
.text:000000000040A7F0                 add     eax, eax
.text:000000000040A7F2                 sub     ecx, eax
.text:000000000040A7F4                 mov     edx, ecx
.text:000000000040A7F6                 mov     rax, [rbp+var_30]
.text:000000000040A7FA                 mov     [rax], dl
.text:000000000040A7FC                 sub     [rbp+var_24], 1
.text:000000000040A800
.text:000000000040A800 loc_40A800:                             ; CODE XREF: afterClone+136↓j
.text:000000000040A800                 cmp     [rbp+var_24], 0
.text:000000000040A804                 js      short loc_40A878
.text:000000000040A806                 mov     rdx, [rbp+var_20]
.text:000000000040A80A                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040A814                 imul    rax, rdx
.text:000000000040A818                 add     rax, 1
.text:000000000040A81C                 mov     [rbp+var_20], rax
.text:000000000040A820                 mov     eax, [rbp+var_24]
.text:000000000040A823                 sar     eax, 2
.text:000000000040A826                 cdqe
.text:000000000040A828                 lea     rdx, ds:0[rax*4]
.text:000000000040A830                 mov     rax, [rbp+var_18]
.text:000000000040A834                 add     rax, rdx
.text:000000000040A837                 mov     edx, [rax]
.text:000000000040A839                 mov     rax, [rbp+var_20]
.text:000000000040A83D                 shr     rax, 20h
.text:000000000040A841                 mov     esi, eax
.text:000000000040A843                 mov     rax, [rbp+var_30]
.text:000000000040A847                 movzx   eax, byte ptr [rax]
.text:000000000040A84A                 movzx   eax, al
.text:000000000040A84D                 mov     ecx, [rbp+var_24]
.text:000000000040A850                 mov     edi, ecx
.text:000000000040A852                 sar     edi, 2
.text:000000000040A855                 xor     esi, edx
.text:000000000040A857                 mov     rcx, [rbp+var_30]
.text:000000000040A85B                 movsxd  rdi, edi
.text:000000000040A85E                 movsxd  rdx, eax
.text:000000000040A861                 mov     rax, rdx
.text:000000000040A864                 shl     rax, 3
.text:000000000040A868                 add     rax, rdx
.text:000000000040A86B                 add     rax, rdi
.text:000000000040A86E                 mov     [rcx+rax*4+4], esi
.text:000000000040A872                 sub     [rbp+var_24], 4
.text:000000000040A876                 jmp     short loc_40A800
.text:000000000040A878 ; ---------------------------------------------------------------------------
.text:000000000040A878
.text:000000000040A878 loc_40A878:                             ; CODE XREF: afterClone+C4↑j
.text:000000000040A878                 mov     rax, [rbp+var_30]
.text:000000000040A87C                 movzx   eax, byte ptr [rax]
.text:000000000040A87F                 movzx   eax, al
.text:000000000040A882                 movsxd  rdx, eax
.text:000000000040A885                 mov     rax, rdx
.text:000000000040A888                 shl     rax, 3
.text:000000000040A88C                 add     rax, rdx
.text:000000000040A88F                 shl     rax, 2
.text:000000000040A893                 mov     rdx, [rbp+var_30]
.text:000000000040A897                 add     rax, rdx
.text:000000000040A89A                 add     rax, 4
.text:000000000040A89E                 mov     edx, 0
.text:000000000040A8A3                 mov     esi, 3Ch
.text:000000000040A8A8                 mov     rdi, rax
.text:000000000040A8AB                 mov     eax, 0
.text:000000000040A8B0                 call    sub_40A07C
.text:000000000040A8B5                 mov     eax, 1
.text:000000000040A8BA                 add     rsp, 40h
.text:000000000040A8BE                 pop     rbx
.text:000000000040A8BF                 pop     r12
.text:000000000040A8C1                 pop     rbp
.text:000000000040A8C2                 retn
.text:000000000040A8C2 ; } // starts at 40A740
.text:000000000040A8C2 afterClone      endp
.text:000000000040A8C2
.text:000000000040A8C3
.text:000000000040A8C3 ; =============== S U B R O U T I N E =======================================
.text:000000000040A8C3
.text:000000000040A8C3 ; Attributes: bp-based frame
.text:000000000040A8C3
.text:000000000040A8C3 sub_40A8C3      proc near               ; CODE XREF: sub_404398+2E4↑p
.text:000000000040A8C3                                         ; sub_408FAB+1D↑p
.text:000000000040A8C3
.text:000000000040A8C3 var_94          = dword ptr -94h
.text:000000000040A8C3 var_90          = qword ptr -90h
.text:000000000040A8C3 var_88          = qword ptr -88h
.text:000000000040A8C3 var_80          = qword ptr -80h
.text:000000000040A8C3 var_74          = dword ptr -74h
.text:000000000040A8C3 var_70          = qword ptr -70h
.text:000000000040A8C3 var_68          = qword ptr -68h
.text:000000000040A8C3 var_60          = qword ptr -60h
.text:000000000040A8C3 var_54          = dword ptr -54h
.text:000000000040A8C3 var_50          = qword ptr -50h
.text:000000000040A8C3 var_48          = qword ptr -48h
.text:000000000040A8C3 var_40          = qword ptr -40h
.text:000000000040A8C3 var_34          = dword ptr -34h
.text:000000000040A8C3 var_30          = qword ptr -30h
.text:000000000040A8C3 var_28          = qword ptr -28h
.text:000000000040A8C3 var_20          = qword ptr -20h
.text:000000000040A8C3 var_18          = qword ptr -18h
.text:000000000040A8C3 var_10          = qword ptr -10h
.text:000000000040A8C3 var_4           = dword ptr -4
.text:000000000040A8C3
.text:000000000040A8C3 ; __unwind {
.text:000000000040A8C3                 push    rbp
.text:000000000040A8C4                 mov     rbp, rsp
.text:000000000040A8C7                 sub     rsp, 0A0h
.text:000000000040A8CE                 mov     [rbp+var_88], rdi
.text:000000000040A8D5                 mov     [rbp+var_90], rsi
.text:000000000040A8DC                 mov     [rbp+var_94], edx
.text:000000000040A8E2                 call    sub_40A433
.text:000000000040A8E7                 mov     [rbp+var_10], rax
.text:000000000040A8EB                 cmp     [rbp+var_10], 0FFFFFFFFFFFFFFFFh
.text:000000000040A8F0                 setz    al
.text:000000000040A8F3                 test    al, al
.text:000000000040A8F5                 jnz     loc_40AC3E
.text:000000000040A8FB                 cmp     [rbp+var_90], 0
.text:000000000040A903                 jz      short loc_40A90D
.text:000000000040A905                 mov     eax, [rbp+var_94]
.text:000000000040A90B                 jmp     short loc_40A912
.text:000000000040A90D ; ---------------------------------------------------------------------------
.text:000000000040A90D
.text:000000000040A90D loc_40A90D:                             ; CODE XREF: sub_40A8C3+40↑j
.text:000000000040A90D                 mov     eax, 0
.text:000000000040A912
.text:000000000040A912 loc_40A912:                             ; CODE XREF: sub_40A8C3+48↑j
.text:000000000040A912                 mov     rdx, [rbp+var_10]
.text:000000000040A916                 sub     rdx, rax
.text:000000000040A919                 mov     rax, rdx
.text:000000000040A91C                 add     rax, 3E5Ch
.text:000000000040A922                 mov     [rbp+var_18], rax
.text:000000000040A926                 mov     rax, [rbp+var_18]
.text:000000000040A92A                 mov     [rbp+var_20], rax
.text:000000000040A92E                 mov     rax, [rbp+var_20]
.text:000000000040A932                 mov     rdx, [rbp+var_20]
.text:000000000040A936                 mov     [rax], rdx
.text:000000000040A939                 mov     rdx, [rbp+var_10]
.text:000000000040A93D                 mov     rax, [rbp+var_20]
.text:000000000040A941                 mov     [rax+8], rdx
.text:000000000040A945                 mov     rax, fs:0
.text:000000000040A94E                 mov     [rbp+var_40], rax
.text:000000000040A952                 mov     rax, [rbp+var_40]
.text:000000000040A956                 mov     rdx, [rax+30h]
.text:000000000040A95A                 mov     rax, [rbp+var_20]
.text:000000000040A95E                 mov     [rax+30h], rdx
.text:000000000040A962                 call    randData
.text:000000000040A967                 mov     edx, eax
.text:000000000040A969                 mov     rax, [rbp+var_20]
.text:000000000040A96D                 mov     [rax+38h], dl
.text:000000000040A970                 mov     rax, [rbp+var_20]
.text:000000000040A974                 lea     rdx, [rax+38h]
.text:000000000040A978                 mov     rax, [rbp+var_20]
.text:000000000040A97C                 mov     [rax+10h], rdx
.text:000000000040A980                 cmp     [rbp+var_90], 0
.text:000000000040A988                 jz      short loc_40A9DA
.text:000000000040A98A                 mov     rax, [rbp+var_20]
.text:000000000040A98E                 add     rax, 1A4h
.text:000000000040A994                 mov     [rbp+var_28], rax
.text:000000000040A998                 mov     rax, [rbp+var_90]
.text:000000000040A99F                 mov     [rbp+var_30], rax
.text:000000000040A9A3                 mov     [rbp+var_4], 0
.text:000000000040A9AA
.text:000000000040A9AA loc_40A9AA:                             ; CODE XREF: sub_40A8C3+115↓j
.text:000000000040A9AA                 mov     eax, [rbp+var_4]
.text:000000000040A9AD                 cmp     [rbp+var_94], eax
.text:000000000040A9B3                 jbe     short loc_40A9DA
.text:000000000040A9B5                 mov     eax, [rbp+var_4]
.text:000000000040A9B8                 movsxd  rdx, eax
.text:000000000040A9BB                 mov     rax, [rbp+var_30]
.text:000000000040A9BF                 add     rax, rdx
.text:000000000040A9C2                 mov     edx, [rbp+var_4]
.text:000000000040A9C5                 movsxd  rcx, edx
.text:000000000040A9C8                 mov     rdx, [rbp+var_28]
.text:000000000040A9CC                 add     rdx, rcx
.text:000000000040A9CF                 movzx   eax, byte ptr [rax]
.text:000000000040A9D2                 mov     [rdx], al
.text:000000000040A9D4                 add     [rbp+var_4], 1
.text:000000000040A9D8                 jmp     short loc_40A9AA
.text:000000000040A9DA ; ---------------------------------------------------------------------------
.text:000000000040A9DA
.text:000000000040A9DA loc_40A9DA:                             ; CODE XREF: sub_40A8C3+C5↑j
.text:000000000040A9DA                                         ; sub_40A8C3+F0↑j
.text:000000000040A9DA                 mov     [rbp+var_34], 890900h
.text:000000000040A9E1                 lea     rax, dword_40B421
.text:000000000040A9E8                 mov     [rbp+var_48], rax
.text:000000000040A9EC                 mov     rax, 0FD7FD47C30DC0020h
.text:000000000040A9F6                 mov     [rbp+var_50], rax
.text:000000000040A9FA                 mov     [rbp+var_54], 6
.text:000000000040AA01                 call    getMem
.text:000000000040AA06                 mov     [rbp+var_60], rax
.text:000000000040AA0A                 mov     rax, [rbp+var_60]
.text:000000000040AA0E                 movzx   eax, byte ptr [rax]
.text:000000000040AA11                 movzx   eax, al
.text:000000000040AA14                 lea     ecx, [rax+3]
.text:000000000040AA17                 mov     edx, 66666667h
.text:000000000040AA1C                 mov     eax, ecx
.text:000000000040AA1E                 imul    edx
.text:000000000040AA20                 sar     edx, 2
.text:000000000040AA23                 mov     eax, ecx
.text:000000000040AA25                 sar     eax, 1Fh
.text:000000000040AA28                 sub     edx, eax
.text:000000000040AA2A                 mov     eax, edx
.text:000000000040AA2C                 shl     eax, 2
.text:000000000040AA2F                 add     eax, edx
.text:000000000040AA31                 add     eax, eax
.text:000000000040AA33                 sub     ecx, eax
.text:000000000040AA35                 mov     edx, ecx
.text:000000000040AA37                 mov     rax, [rbp+var_60]
.text:000000000040AA3B                 mov     [rax], dl
.text:000000000040AA3D                 sub     [rbp+var_54], 1
.text:000000000040AA41
.text:000000000040AA41 loc_40AA41:                             ; CODE XREF: sub_40A8C3+1F4↓j
.text:000000000040AA41                 cmp     [rbp+var_54], 0
.text:000000000040AA45                 js      short loc_40AAB9
.text:000000000040AA47                 mov     rdx, [rbp+var_50]
.text:000000000040AA4B                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040AA55                 imul    rax, rdx
.text:000000000040AA59                 add     rax, 1
.text:000000000040AA5D                 mov     [rbp+var_50], rax
.text:000000000040AA61                 mov     eax, [rbp+var_54]
.text:000000000040AA64                 sar     eax, 2
.text:000000000040AA67                 cdqe
.text:000000000040AA69                 lea     rdx, ds:0[rax*4]
.text:000000000040AA71                 mov     rax, [rbp+var_48]
.text:000000000040AA75                 add     rax, rdx
.text:000000000040AA78                 mov     edx, [rax]
.text:000000000040AA7A                 mov     rax, [rbp+var_50]
.text:000000000040AA7E                 shr     rax, 20h
.text:000000000040AA82                 mov     esi, eax
.text:000000000040AA84                 mov     rax, [rbp+var_60]
.text:000000000040AA88                 movzx   eax, byte ptr [rax]
.text:000000000040AA8B                 movzx   eax, al
.text:000000000040AA8E                 mov     ecx, [rbp+var_54]
.text:000000000040AA91                 mov     edi, ecx
.text:000000000040AA93                 sar     edi, 2
.text:000000000040AA96                 xor     esi, edx
.text:000000000040AA98                 mov     rcx, [rbp+var_60]
.text:000000000040AA9C                 movsxd  rdi, edi
.text:000000000040AA9F                 movsxd  rdx, eax
.text:000000000040AAA2                 mov     rax, rdx
.text:000000000040AAA5                 shl     rax, 3
.text:000000000040AAA9                 add     rax, rdx
.text:000000000040AAAC                 add     rax, rdi
.text:000000000040AAAF                 mov     [rcx+rax*4+4], esi
.text:000000000040AAB3                 sub     [rbp+var_54], 4
.text:000000000040AAB7                 jmp     short loc_40AA41
.text:000000000040AAB9 ; ---------------------------------------------------------------------------
.text:000000000040AAB9
.text:000000000040AAB9 loc_40AAB9:                             ; CODE XREF: sub_40A8C3+182↑j
.text:000000000040AAB9                 mov     rax, [rbp+var_60]
.text:000000000040AABD                 movzx   eax, byte ptr [rax]
.text:000000000040AAC0                 movzx   eax, al
.text:000000000040AAC3                 movsxd  rdx, eax
.text:000000000040AAC6                 mov     rax, rdx
.text:000000000040AAC9                 shl     rax, 3
.text:000000000040AACD                 add     rax, rdx
.text:000000000040AAD0                 shl     rax, 2
.text:000000000040AAD4                 mov     rdx, [rbp+var_60]
.text:000000000040AAD8                 add     rax, rdx
.text:000000000040AADB                 add     rax, 4
.text:000000000040AADF                 mov     rdi, rax
.text:000000000040AAE2                 call    sub_40A043
.text:000000000040AAE7                 mov     r10, rax
.text:000000000040AAEA                 mov     rsi, [rbp+var_20]
.text:000000000040AAEE                 mov     rcx, [rbp+var_88]
.text:000000000040AAF5                 mov     edx, [rbp+var_34]
.text:000000000040AAF8                 mov     rax, [rbp+var_20]
.text:000000000040AAFC                 mov     r9, rsi
.text:000000000040AAFF                 mov     r8d, 0
.text:000000000040AB05                 mov     rsi, rax
.text:000000000040AB08                 lea     rdi, afterClone
.text:000000000040AB0F                 mov     eax, 0
.text:000000000040AB14                 call    r10
.text:000000000040AB17                 cmp     eax, 0FFFFFFFFh
.text:000000000040AB1A                 setz    al
.text:000000000040AB1D                 test    al, al
.text:000000000040AB1F                 jz      locret_40AC3F
.text:000000000040AB25                 lea     rax, dword_40B42A
.text:000000000040AB2C                 mov     [rbp+var_68], rax
.text:000000000040AB30                 mov     rax, 0DC91B4E7B70E841Bh
.text:000000000040AB3A                 mov     [rbp+var_70], rax
.text:000000000040AB3E                 mov     [rbp+var_74], 7
.text:000000000040AB45                 call    getMem
.text:000000000040AB4A                 mov     [rbp+var_80], rax
.text:000000000040AB4E                 mov     rax, [rbp+var_80]
.text:000000000040AB52                 movzx   eax, byte ptr [rax]
.text:000000000040AB55                 movzx   eax, al
.text:000000000040AB58                 lea     ecx, [rax+3]
.text:000000000040AB5B                 mov     edx, 66666667h
.text:000000000040AB60                 mov     eax, ecx
.text:000000000040AB62                 imul    edx
.text:000000000040AB64                 sar     edx, 2
.text:000000000040AB67                 mov     eax, ecx
.text:000000000040AB69                 sar     eax, 1Fh
.text:000000000040AB6C                 sub     edx, eax
.text:000000000040AB6E                 mov     eax, edx
.text:000000000040AB70                 shl     eax, 2
.text:000000000040AB73                 add     eax, edx
.text:000000000040AB75                 add     eax, eax
.text:000000000040AB77                 sub     ecx, eax
.text:000000000040AB79                 mov     edx, ecx
.text:000000000040AB7B                 mov     rax, [rbp+var_80]
.text:000000000040AB7F                 mov     [rax], dl
.text:000000000040AB81                 sub     [rbp+var_74], 1
.text:000000000040AB85
.text:000000000040AB85 loc_40AB85:                             ; CODE XREF: sub_40A8C3+338↓j
.text:000000000040AB85                 cmp     [rbp+var_74], 0
.text:000000000040AB89                 js      short loc_40ABFD
.text:000000000040AB8B                 mov     rdx, [rbp+var_70]
.text:000000000040AB8F                 mov     rax, 5851F42D4C957F2Dh
.text:000000000040AB99                 imul    rax, rdx
.text:000000000040AB9D                 add     rax, 1
.text:000000000040ABA1                 mov     [rbp+var_70], rax
.text:000000000040ABA5                 mov     eax, [rbp+var_74]
.text:000000000040ABA8                 sar     eax, 2
.text:000000000040ABAB                 cdqe
.text:000000000040ABAD                 lea     rdx, ds:0[rax*4]
.text:000000000040ABB5                 mov     rax, [rbp+var_68]
.text:000000000040ABB9                 add     rax, rdx
.text:000000000040ABBC                 mov     edx, [rax]
.text:000000000040ABBE                 mov     rax, [rbp+var_70]
.text:000000000040ABC2                 shr     rax, 20h
.text:000000000040ABC6                 mov     esi, eax
.text:000000000040ABC8                 mov     rax, [rbp+var_80]
.text:000000000040ABCC                 movzx   eax, byte ptr [rax]
.text:000000000040ABCF                 movzx   eax, al
.text:000000000040ABD2                 mov     ecx, [rbp+var_74]
.text:000000000040ABD5                 mov     edi, ecx
.text:000000000040ABD7                 sar     edi, 2
.text:000000000040ABDA                 xor     esi, edx
.text:000000000040ABDC                 mov     rcx, [rbp+var_80]
.text:000000000040ABE0                 movsxd  rdi, edi
.text:000000000040ABE3                 movsxd  rdx, eax
.text:000000000040ABE6                 mov     rax, rdx
.text:000000000040ABE9                 shl     rax, 3
.text:000000000040ABED                 add     rax, rdx
.text:000000000040ABF0                 add     rax, rdi
.text:000000000040ABF3                 mov     [rcx+rax*4+4], esi
.text:000000000040ABF7                 sub     [rbp+var_74], 4
.text:000000000040ABFB                 jmp     short loc_40AB85
.text:000000000040ABFD ; ---------------------------------------------------------------------------
.text:000000000040ABFD
.text:000000000040ABFD loc_40ABFD:                             ; CODE XREF: sub_40A8C3+2C6↑j
.text:000000000040ABFD                 mov     rax, [rbp+var_80]
.text:000000000040AC01                 movzx   eax, byte ptr [rax]
.text:000000000040AC04                 movzx   eax, al
.text:000000000040AC07                 movsxd  rdx, eax
.text:000000000040AC0A                 mov     rax, rdx
.text:000000000040AC0D                 shl     rax, 3
.text:000000000040AC11                 add     rax, rdx
.text:000000000040AC14                 shl     rax, 2
.text:000000000040AC18                 mov     rdx, [rbp+var_80]
.text:000000000040AC1C                 add     rax, rdx
.text:000000000040AC1F                 lea     rcx, [rax+4]
.text:000000000040AC23                 mov     rax, [rbp+var_10]
.text:000000000040AC27                 mov     edx, 4000h
.text:000000000040AC2C                 mov     rsi, rax
.text:000000000040AC2F                 mov     rdi, rcx
.text:000000000040AC32                 mov     eax, 0
.text:000000000040AC37                 call    sub_40A07C
.text:000000000040AC3C                 jmp     short locret_40AC3F
.text:000000000040AC3E ; ---------------------------------------------------------------------------
.text:000000000040AC3E
.text:000000000040AC3E loc_40AC3E:                             ; CODE XREF: sub_40A8C3+32↑j
.text:000000000040AC3E                 nop
.text:000000000040AC3F
.text:000000000040AC3F locret_40AC3F:                          ; CODE XREF: sub_40A8C3+25C↑j
.text:000000000040AC3F                                         ; sub_40A8C3+379↑j
.text:000000000040AC3F                 leave
.text:000000000040AC40                 retn
.text:000000000040AC40 ; } // starts at 40A8C3
.text:000000000040AC40 sub_40A8C3      endp
.text:000000000040AC40
.text:000000000040AC41
.text:000000000040AC41 ; =============== S U B R O U T I N E =======================================
.text:000000000040AC41
.text:000000000040AC41 ; Attributes: bp-based frame
.text:000000000040AC41
.text:000000000040AC41 getMem          proc near               ; CODE XREF: sub_400B97+3D↑p
.text:000000000040AC41                                         ; sub_400CED+5B↑p ...
.text:000000000040AC41
.text:000000000040AC41 var_10          = qword ptr -10h
.text:000000000040AC41 var_8           = qword ptr -8
.text:000000000040AC41
.text:000000000040AC41 ; __unwind {
.text:000000000040AC41                 push    rbp
.text:000000000040AC42                 mov     rbp, rsp
.text:000000000040AC45                 mov     rax, fs:0
.text:000000000040AC4E                 mov     [rbp+var_10], rax
.text:000000000040AC52                 mov     rax, [rbp+var_10]
.text:000000000040AC56                 mov     [rbp+var_8], rax
.text:000000000040AC5A                 mov     rax, [rbp+var_8]
.text:000000000040AC5E                 mov     rdx, [rax+10h]
.text:000000000040AC62                 mov     rax, [rbp+var_8]
.text:000000000040AC66                 mov     rax, [rax]
.text:000000000040AC69                 cmp     rdx, rax
.text:000000000040AC6C                 jz      short loc_40AC78
.text:000000000040AC6E                 mov     rax, [rbp+var_8]
.text:000000000040AC72                 mov     rax, [rax+10h]
.text:000000000040AC76                 jmp     short loc_40AC7F
.text:000000000040AC78 ; ---------------------------------------------------------------------------
.text:000000000040AC78
.text:000000000040AC78 loc_40AC78:                             ; CODE XREF: getMem+2B↑j
.text:000000000040AC78                 lea     rax, unk_60C100
.text:000000000040AC7F
.text:000000000040AC7F loc_40AC7F:                             ; CODE XREF: getMem+35↑j
.text:000000000040AC7F                 pop     rbp
.text:000000000040AC80                 retn
.text:000000000040AC80 ; } // starts at 40AC41
.text:000000000040AC80 getMem          endp
.text:000000000040AC80
.text:000000000040AC81
.text:000000000040AC81 ; =============== S U B R O U T I N E =======================================
.text:000000000040AC81
.text:000000000040AC81 ; Attributes: bp-based frame
.text:000000000040AC81
.text:000000000040AC81 ; __int64 GetLocalTime(void)
.text:000000000040AC81                 public _Z12GetLocalTimev
.text:000000000040AC81 _Z12GetLocalTimev proc near             ; CODE XREF: main:loc_4094A6↑p
.text:000000000040AC81 ; __unwind {
.text:000000000040AC81                 push    rbp
.text:000000000040AC82                 mov     rbp, rsp
.text:000000000040AC85                 lea     rdi, current_time ; timer
.text:000000000040AC8C                 call    _time
.text:000000000040AC91                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:000000000040AC95                 setnz   al
.text:000000000040AC98                 pop     rbp
.text:000000000040AC99                 retn
.text:000000000040AC99 ; } // starts at 40AC81
.text:000000000040AC99 _Z12GetLocalTimev endp
.text:000000000040AC99
.text:000000000040AC9A
.text:000000000040AC9A ; =============== S U B R O U T I N E =======================================
.text:000000000040AC9A
.text:000000000040AC9A ; Attributes: bp-based frame
.text:000000000040AC9A
.text:000000000040AC9A ; __int64 GetNTPTime(void)
.text:000000000040AC9A                 public _Z10GetNTPTimev
.text:000000000040AC9A _Z10GetNTPTimev proc near               ; CODE XREF: main:loc_4094DF↑p
.text:000000000040AC9A
.text:000000000040AC9A buf             = qword ptr -50h
.text:000000000040AC9A var_48          = qword ptr -48h
.text:000000000040AC9A var_40          = qword ptr -40h
.text:000000000040AC9A var_38          = qword ptr -38h
.text:000000000040AC9A var_30          = qword ptr -30h
.text:000000000040AC9A netlong         = dword ptr -28h
.text:000000000040AC9A addr            = sockaddr ptr -20h
.text:000000000040AC9A var_10          = qword ptr -10h
.text:000000000040AC9A fd              = dword ptr -4
.text:000000000040AC9A
.text:000000000040AC9A ; __unwind {
.text:000000000040AC9A                 push    rbp
.text:000000000040AC9B                 mov     rbp, rsp
.text:000000000040AC9E                 sub     rsp, 50h
.text:000000000040ACA2                 mov     qword ptr [rbp+addr.sa_family], 0
.text:000000000040ACAA                 mov     qword ptr [rbp+addr.sa_data+6], 0
.text:000000000040ACB2                 mov     [rbp+buf], 0
.text:000000000040ACBA                 mov     [rbp+var_48], 0
.text:000000000040ACC2                 mov     [rbp+var_40], 0
.text:000000000040ACCA                 mov     [rbp+var_38], 0
.text:000000000040ACD2                 mov     [rbp+var_30], 0
.text:000000000040ACDA                 mov     qword ptr [rbp+netlong], 0
.text:000000000040ACE2                 mov     edx, 11h        ; protocol
.text:000000000040ACE7                 mov     esi, 2          ; type
.text:000000000040ACEC                 mov     edi, 2          ; domain
.text:000000000040ACF1                 call    _socket
.text:000000000040ACF6                 mov     [rbp+fd], eax
.text:000000000040ACF9                 mov     eax, [rbp+fd]
.text:000000000040ACFC                 shr     eax, 1Fh
.text:000000000040ACFF                 test    al, al
.text:000000000040AD01                 jz      short loc_40AD0D
.text:000000000040AD03                 mov     eax, 0
.text:000000000040AD08                 jmp     locret_40AE4C
.text:000000000040AD0D ; ---------------------------------------------------------------------------
.text:000000000040AD0D
.text:000000000040AD0D loc_40AD0D:                             ; CODE XREF: GetNTPTime(void)+67↑j
.text:000000000040AD0D                 mov     [rbp+addr.sa_family], 2
.text:000000000040AD13                 mov     edi, 7Bh        ; hostshort
.text:000000000040AD18                 call    _htons
.text:000000000040AD1D                 mov     word ptr [rbp+addr.sa_data], ax
.text:000000000040AD21                 lea     rdi, name       ; "time.google.com"
.text:000000000040AD28                 call    _gethostbyname
.text:000000000040AD2D                 mov     [rbp+var_10], rax
.text:000000000040AD31                 cmp     [rbp+var_10], 0
.text:000000000040AD36                 jz      short loc_40AD48
.text:000000000040AD38                 mov     rax, [rbp+var_10]
.text:000000000040AD3C                 mov     rax, [rax+18h]
.text:000000000040AD40                 mov     rax, [rax]
.text:000000000040AD43                 test    rax, rax
.text:000000000040AD46                 jnz     short loc_40AD4F
.text:000000000040AD48
.text:000000000040AD48 loc_40AD48:                             ; CODE XREF: GetNTPTime(void)+9C↑j
.text:000000000040AD48                 mov     eax, 1
.text:000000000040AD4D                 jmp     short loc_40AD54
.text:000000000040AD4F ; ---------------------------------------------------------------------------
.text:000000000040AD4F
.text:000000000040AD4F loc_40AD4F:                             ; CODE XREF: GetNTPTime(void)+AC↑j
.text:000000000040AD4F                 mov     eax, 0
.text:000000000040AD54
.text:000000000040AD54 loc_40AD54:                             ; CODE XREF: GetNTPTime(void)+B3↑j
.text:000000000040AD54                 test    al, al
.text:000000000040AD56                 jnz     loc_40AE30
.text:000000000040AD5C                 mov     rax, [rbp+var_10]
.text:000000000040AD60                 mov     rax, [rax+18h]
.text:000000000040AD64                 mov     rax, [rax]
.text:000000000040AD67                 mov     eax, [rax]
.text:000000000040AD69                 mov     dword ptr [rbp+addr.sa_data+2], eax
.text:000000000040AD6C                 lea     rcx, [rbp+addr]
.text:000000000040AD70                 mov     eax, [rbp+fd]
.text:000000000040AD73                 mov     edx, 10h        ; len
.text:000000000040AD78                 mov     rsi, rcx        ; addr
.text:000000000040AD7B                 mov     edi, eax        ; fd
.text:000000000040AD7D                 call    _connect
.text:000000000040AD82                 shr     eax, 1Fh
.text:000000000040AD85                 test    al, al
.text:000000000040AD87                 jnz     loc_40AE33
.text:000000000040AD8D                 movzx   eax, byte ptr [rbp+buf]
.text:000000000040AD91                 or      eax, 3
.text:000000000040AD94                 mov     byte ptr [rbp+buf], al
.text:000000000040AD97                 movzx   eax, byte ptr [rbp+buf]
.text:000000000040AD9B                 and     eax, 0FFFFFFE3h
.text:000000000040AD9E                 or      eax, 10h
.text:000000000040ADA1                 mov     byte ptr [rbp+buf], al
.text:000000000040ADA4                 movzx   eax, byte ptr [rbp+buf]
.text:000000000040ADA8                 and     eax, 1Fh
.text:000000000040ADAB                 or      eax, 60h
.text:000000000040ADAE                 mov     byte ptr [rbp+buf], al
.text:000000000040ADB1                 lea     rsi, [rbp+buf]  ; buf
.text:000000000040ADB5                 mov     eax, [rbp+fd]
.text:000000000040ADB8                 mov     ecx, 0          ; flags
.text:000000000040ADBD                 mov     edx, 30h        ; n
.text:000000000040ADC2                 mov     edi, eax        ; fd
.text:000000000040ADC4                 call    _send
.text:000000000040ADC9                 cmp     rax, 30h
.text:000000000040ADCD                 setnz   al
.text:000000000040ADD0                 test    al, al
.text:000000000040ADD2                 jnz     short loc_40AE36
.text:000000000040ADD4                 lea     rsi, [rbp+buf]  ; buf
.text:000000000040ADD8                 mov     eax, [rbp+fd]
.text:000000000040ADDB                 mov     ecx, 0          ; flags
.text:000000000040ADE0                 mov     edx, 30h        ; n
.text:000000000040ADE5                 mov     edi, eax        ; fd
.text:000000000040ADE7                 call    _recv
.text:000000000040ADEC                 cmp     rax, 30h
.text:000000000040ADF0                 setnz   al
.text:000000000040ADF3                 test    al, al
.text:000000000040ADF5                 jnz     short loc_40AE39
.text:000000000040ADF7                 mov     eax, [rbp+netlong]
.text:000000000040ADFA                 mov     edi, eax        ; netlong
.text:000000000040ADFC                 call    _ntohl
.text:000000000040AE01                 mov     [rbp+netlong], eax
.text:000000000040AE04                 mov     eax, [rbp+netlong]
.text:000000000040AE07                 cmp     eax, 83AA7E7Fh
.text:000000000040AE0C                 jbe     short loc_40AE3C
.text:000000000040AE0E                 mov     eax, [rbp+netlong]
.text:000000000040AE11                 add     eax, 7C558180h
.text:000000000040AE16                 mov     eax, eax
.text:000000000040AE18                 mov     cs:ntp_time, rax
.text:000000000040AE1F                 mov     eax, [rbp+fd]
.text:000000000040AE22                 mov     edi, eax        ; fd
.text:000000000040AE24                 call    _close
.text:000000000040AE29                 mov     eax, 1
.text:000000000040AE2E                 jmp     short locret_40AE4C
.text:000000000040AE30 ; ---------------------------------------------------------------------------
.text:000000000040AE30
.text:000000000040AE30 loc_40AE30:                             ; CODE XREF: GetNTPTime(void)+BC↑j
.text:000000000040AE30                 nop
.text:000000000040AE31                 jmp     short loc_40AE3D
.text:000000000040AE33 ; ---------------------------------------------------------------------------
.text:000000000040AE33
.text:000000000040AE33 loc_40AE33:                             ; CODE XREF: GetNTPTime(void)+ED↑j
.text:000000000040AE33                 nop
.text:000000000040AE34                 jmp     short loc_40AE3D
.text:000000000040AE36 ; ---------------------------------------------------------------------------
.text:000000000040AE36
.text:000000000040AE36 loc_40AE36:                             ; CODE XREF: GetNTPTime(void)+138↑j
.text:000000000040AE36                 nop
.text:000000000040AE37                 jmp     short loc_40AE3D
.text:000000000040AE39 ; ---------------------------------------------------------------------------
.text:000000000040AE39
.text:000000000040AE39 loc_40AE39:                             ; CODE XREF: GetNTPTime(void)+15B↑j
.text:000000000040AE39                 nop
.text:000000000040AE3A                 jmp     short loc_40AE3D
.text:000000000040AE3C ; ---------------------------------------------------------------------------
.text:000000000040AE3C
.text:000000000040AE3C loc_40AE3C:                             ; CODE XREF: GetNTPTime(void)+172↑j
.text:000000000040AE3C                 nop
.text:000000000040AE3D
.text:000000000040AE3D loc_40AE3D:                             ; CODE XREF: GetNTPTime(void)+197↑j
.text:000000000040AE3D                                         ; GetNTPTime(void)+19A↑j ...
.text:000000000040AE3D                 mov     eax, [rbp+fd]
.text:000000000040AE40                 mov     edi, eax        ; fd
.text:000000000040AE42                 call    _close
.text:000000000040AE47                 mov     eax, 0
.text:000000000040AE4C
.text:000000000040AE4C locret_40AE4C:                          ; CODE XREF: GetNTPTime(void)+6E↑j
.text:000000000040AE4C                                         ; GetNTPTime(void)+194↑j
.text:000000000040AE4C                 leave
.text:000000000040AE4D                 retn
.text:000000000040AE4D ; } // starts at 40AC9A
.text:000000000040AE4D _Z10GetNTPTimev endp
.text:000000000040AE4D
.text:000000000040AE4D ; ---------------------------------------------------------------------------
.text:000000000040AE4E                 align 10h
.text:000000000040AE50
.text:000000000040AE50 ; =============== S U B R O U T I N E =======================================
.text:000000000040AE50
.text:000000000040AE50
.text:000000000040AE50 ; void _libc_csu_init(void)
.text:000000000040AE50                 public __libc_csu_init
.text:000000000040AE50 __libc_csu_init proc near               ; DATA XREF: _start+16↑o
.text:000000000040AE50 ; __unwind {
.text:000000000040AE50                 push    r15
.text:000000000040AE52                 push    r14
.text:000000000040AE54                 mov     r15d, edi
.text:000000000040AE57                 push    r13
.text:000000000040AE59                 push    r12
.text:000000000040AE5B                 lea     r12, __frame_dummy_init_array_entry
.text:000000000040AE62                 push    rbp
.text:000000000040AE63                 lea     rbp, __do_global_dtors_aux_fini_array_entry
.text:000000000040AE6A                 push    rbx
.text:000000000040AE6B                 mov     r14, rsi
.text:000000000040AE6E                 mov     r13, rdx
.text:000000000040AE71                 sub     rbp, r12
.text:000000000040AE74                 sub     rsp, 8
.text:000000000040AE78                 sar     rbp, 3
.text:000000000040AE7C                 call    _init_proc
.text:000000000040AE81                 test    rbp, rbp
.text:000000000040AE84                 jz      short loc_40AEA6
.text:000000000040AE86                 xor     ebx, ebx
.text:000000000040AE88                 nop     dword ptr [rax+rax+00000000h]
.text:000000000040AE90
.text:000000000040AE90 loc_40AE90:                             ; CODE XREF: __libc_csu_init+54↓j
.text:000000000040AE90                 mov     rdx, r13
.text:000000000040AE93                 mov     rsi, r14
.text:000000000040AE96                 mov     edi, r15d
.text:000000000040AE99                 call    qword ptr [r12+rbx*8]
.text:000000000040AE9D                 add     rbx, 1
.text:000000000040AEA1                 cmp     rbp, rbx
.text:000000000040AEA4                 jnz     short loc_40AE90
.text:000000000040AEA6
.text:000000000040AEA6 loc_40AEA6:                             ; CODE XREF: __libc_csu_init+34↑j
.text:000000000040AEA6                 add     rsp, 8
.text:000000000040AEAA                 pop     rbx
.text:000000000040AEAB                 pop     rbp
.text:000000000040AEAC                 pop     r12
.text:000000000040AEAE                 pop     r13
.text:000000000040AEB0                 pop     r14
.text:000000000040AEB2                 pop     r15
.text:000000000040AEB4                 retn
.text:000000000040AEB4 ; } // starts at 40AE50
.text:000000000040AEB4 __libc_csu_init endp
.text:000000000040AEB4
.text:000000000040AEB4 ; ---------------------------------------------------------------------------
.text:000000000040AEB5                 align 20h
.text:000000000040AEC0
.text:000000000040AEC0 ; =============== S U B R O U T I N E =======================================
.text:000000000040AEC0
.text:000000000040AEC0
.text:000000000040AEC0 ; void _libc_csu_fini(void)
.text:000000000040AEC0                 public __libc_csu_fini
.text:000000000040AEC0 __libc_csu_fini proc near               ; DATA XREF: _start+F↑o
.text:000000000040AEC0 ; __unwind {
.text:000000000040AEC0                 rep retn
.text:000000000040AEC0 ; } // starts at 40AEC0
.text:000000000040AEC0 __libc_csu_fini endp
.text:000000000040AEC0
.text:000000000040AEC0 _text           ends
.text:000000000040AEC0
LOAD:000000000040AEC2 ; ===========================================================================
LOAD:000000000040AEC2
LOAD:000000000040AEC2 ; Segment type: Pure code
LOAD:000000000040AEC2 ; Segment permissions: Read/Execute
LOAD:000000000040AEC2 LOAD            segment byte public 'CODE' use64
LOAD:000000000040AEC2                 assume cs:LOAD
LOAD:000000000040AEC2                 ;org 40AEC2h
LOAD:000000000040AEC2                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:000000000040AEC2                 align 4
LOAD:000000000040AEC2 LOAD            ends
LOAD:000000000040AEC2
.fini:000000000040AEC4 ; ===========================================================================
.fini:000000000040AEC4
.fini:000000000040AEC4 ; Segment type: Pure code
.fini:000000000040AEC4 ; Segment permissions: Read/Execute
.fini:000000000040AEC4 _fini           segment dword public 'CODE' use64
.fini:000000000040AEC4                 assume cs:_fini
.fini:000000000040AEC4                 ;org 40AEC4h
.fini:000000000040AEC4                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.fini:000000000040AEC4
.fini:000000000040AEC4 ; =============== S U B R O U T I N E =======================================
.fini:000000000040AEC4
.fini:000000000040AEC4
.fini:000000000040AEC4                 public _term_proc
.fini:000000000040AEC4 _term_proc      proc near
.fini:000000000040AEC4                 sub     rsp, 8          ; _fini
.fini:000000000040AEC8                 add     rsp, 8
.fini:000000000040AECC                 retn
.fini:000000000040AECC _term_proc      endp
.fini:000000000040AECC
.fini:000000000040AECC _fini           ends
.fini:000000000040AECC
LOAD:000000000040AECD ; ===========================================================================
LOAD:000000000040AECD
LOAD:000000000040AECD ; Segment type: Pure code
LOAD:000000000040AECD ; Segment permissions: Read/Execute
LOAD:000000000040AECD LOAD            segment byte public 'CODE' use64
LOAD:000000000040AECD                 assume cs:LOAD
LOAD:000000000040AECD                 ;org 40AECDh
LOAD:000000000040AECD                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:000000000040AECD                 align 20h
LOAD:000000000040AECD LOAD            ends
LOAD:000000000040AECD
.rodata:000000000040AEE0 ; ===========================================================================
.rodata:000000000040AEE0
.rodata:000000000040AEE0 ; Segment type: Pure data
.rodata:000000000040AEE0 ; Segment permissions: Read
.rodata:000000000040AEE0 ; Segment alignment '32byte' can not be represented in assembly
.rodata:000000000040AEE0 _rodata         segment para public 'CONST' use64
.rodata:000000000040AEE0                 assume cs:_rodata
.rodata:000000000040AEE0                 ;org 40AEE0h
.rodata:000000000040AEE0                 public _IO_stdin_used
.rodata:000000000040AEE0 _IO_stdin_used  db    1
.rodata:000000000040AEE1                 db    0
.rodata:000000000040AEE2                 db    2
.rodata:000000000040AEE3 unk_40AEE3      db    0                 ; CODE XREF: .rodata:000000000040AF33↓j
.rodata:000000000040AEE4                 db    0
.rodata:000000000040AEE5                 db    0
.rodata:000000000040AEE6                 db    0
.rodata:000000000040AEE7                 db    0
.rodata:000000000040AEE8                 db    0
.rodata:000000000040AEE9                 db    0
.rodata:000000000040AEEA                 db    0
.rodata:000000000040AEEB                 db    0
.rodata:000000000040AEEC                 db    0
.rodata:000000000040AEED                 db    0
.rodata:000000000040AEEE                 db    0
.rodata:000000000040AEEF                 db    0
.rodata:000000000040AEF0                 db    0
.rodata:000000000040AEF1                 db    0
.rodata:000000000040AEF2                 db    0
.rodata:000000000040AEF3                 db    0
.rodata:000000000040AEF4                 db    0
.rodata:000000000040AEF5                 db    0
.rodata:000000000040AEF6                 db    0
.rodata:000000000040AEF7                 db    0
.rodata:000000000040AEF8                 db    0
.rodata:000000000040AEF9                 db    0
.rodata:000000000040AEFA                 db    0
.rodata:000000000040AEFB                 db    0
.rodata:000000000040AEFC                 db    0
.rodata:000000000040AEFD                 db    0
.rodata:000000000040AEFE                 db    0
.rodata:000000000040AEFF                 db    0
.rodata:000000000040AF00 ; _DWORD dword_40AF00[8]
.rodata:000000000040AF00 dword_40AF00    dd 0B65FB7B0h, 953D48A6h, 9E59DFC1h, 29CC334Eh, 0EEE87A54h
.rodata:000000000040AF00                                         ; DATA XREF: sub_4015E0+17B↑o
.rodata:000000000040AF00                 dd 0BA86EF92h, 0AC47B13Eh, 0CFDD4C5h
.rodata:000000000040AF20                 db  41h ; A
.rodata:000000000040AF21                 db    0
.rodata:000000000040AF22 ; ---------------------------------------------------------------------------
.rodata:000000000040AF22
.rodata:000000000040AF22 ; _DWORD loc_40AF22[2]
.rodata:000000000040AF22 loc_40AF22:                             ; DATA XREF: sub_400B97:loc_400BB4↑o
.rodata:000000000040AF22                 pop     rax
.rodata:000000000040AF23                 add     edx, esi
.rodata:000000000040AF25                 fldcw   word ptr [rsi+5B6737h]
.rodata:000000000040AF2B
.rodata:000000000040AF2B loc_40AF2B:                             ; DATA XREF: sub_400CED+3B↑o
.rodata:000000000040AF2B                 sbb     eax, 6CFE438Bh
.rodata:000000000040AF31                 cmp     ebp, ebx
.rodata:000000000040AF33                 ja      short near ptr unk_40AEE3
.rodata:000000000040AF35                 retn    0BC9Ah
.rodata:000000000040AF35 ; ---------------------------------------------------------------------------
.rodata:000000000040AF38                 db  14h
.rodata:000000000040AF39                 db    8
.rodata:000000000040AF3A                 db 0C7h
.rodata:000000000040AF3B                 db    0
.rodata:000000000040AF3C unk_40AF3C      db 0E5h                 ; DATA XREF: sub_400CED+139↑o
.rodata:000000000040AF3D                 db  8Eh
.rodata:000000000040AF3E                 db 0F6h
.rodata:000000000040AF3F                 db 0CCh
.rodata:000000000040AF40                 db  92h
.rodata:000000000040AF41                 db  65h ; e
.rodata:000000000040AF42                 db 0E0h
.rodata:000000000040AF43                 db  31h ; 1
.rodata:000000000040AF44                 db    0
.rodata:000000000040AF45 unk_40AF45      db 0A8h                 ; DATA XREF: sub_400CED:loc_400F51↑o
.rodata:000000000040AF46                 db 0BCh
.rodata:000000000040AF47                 db  0Fh
.rodata:000000000040AF48                 db  2Ah ; *
.rodata:000000000040AF49                 db 0A9h
.rodata:000000000040AF4A                 db  70h ; p
.rodata:000000000040AF4B                 db  89h
.rodata:000000000040AF4C                 db 0CBh
.rodata:000000000040AF4D                 db    0
.rodata:000000000040AF4E unk_40AF4E      db  6Eh ; n             ; DATA XREF: sub_400CED+384↑o
.rodata:000000000040AF4F                 db  13h
.rodata:000000000040AF50                 db 0A1h
.rodata:000000000040AF51                 db  6Bh ; k
.rodata:000000000040AF52                 db 0A1h
.rodata:000000000040AF53                 db  55h ; U
.rodata:000000000040AF54                 db 0D3h
.rodata:000000000040AF55                 db  14h
.rodata:000000000040AF56                 db    0
.rodata:000000000040AF57 unk_40AF57      db  80h                 ; DATA XREF: sub_400CED+4D4↑o
.rodata:000000000040AF58                 db  41h ; A
.rodata:000000000040AF59                 db  5Ch ; \
.rodata:000000000040AF5A                 db  93h
.rodata:000000000040AF5B                 db 0EBh
.rodata:000000000040AF5C                 db 0DCh
.rodata:000000000040AF5D                 db    5
.rodata:000000000040AF5E                 db  85h
.rodata:000000000040AF5F                 db  87h
.rodata:000000000040AF60                 db  66h ; f
.rodata:000000000040AF61                 db 0D6h
.rodata:000000000040AF62                 db 0D4h
.rodata:000000000040AF63                 db 0DEh
.rodata:000000000040AF64                 db  5Eh ; ^
.rodata:000000000040AF65                 db 0E3h
.rodata:000000000040AF66                 db  2Ah ; *
.rodata:000000000040AF67                 db  8Bh
.rodata:000000000040AF68                 db 0E6h
.rodata:000000000040AF69                 db  6Ah ; j
.rodata:000000000040AF6A                 db  2Ah ; *
.rodata:000000000040AF6B                 db    0
.rodata:000000000040AF6C unk_40AF6C      db 0AFh                 ; DATA XREF: sub_400CED+612↑o
.rodata:000000000040AF6D                 db 0F2h
.rodata:000000000040AF6E                 db  19h
.rodata:000000000040AF6F                 db  2Fh ; /
.rodata:000000000040AF70                 db 0F0h
.rodata:000000000040AF71                 db  79h ; y
.rodata:000000000040AF72                 db  45h ; E
.rodata:000000000040AF73                 db 0DAh
.rodata:000000000040AF74                 db  66h ; f
.rodata:000000000040AF75                 db 0B6h
.rodata:000000000040AF76                 db 0D2h
.rodata:000000000040AF77                 db  57h ; W
.rodata:000000000040AF78                 db    0
.rodata:000000000040AF79 unk_40AF79      db 0B7h                 ; DATA XREF: sub_400CED+79A↑o
.rodata:000000000040AF7A                 db 0ABh
.rodata:000000000040AF7B                 db 0F1h
.rodata:000000000040AF7C                 db  3Ah ; :
.rodata:000000000040AF7D                 db 0E6h
.rodata:000000000040AF7E                 db  1Ah
.rodata:000000000040AF7F                 db  96h
.rodata:000000000040AF80                 db 0CBh
.rodata:000000000040AF81                 db  1Ch
.rodata:000000000040AF82                 db 0A1h
.rodata:000000000040AF83                 db  35h ; 5
.rodata:000000000040AF84                 db 0B6h
.rodata:000000000040AF85                 db 0ECh
.rodata:000000000040AF86                 db 0E3h
.rodata:000000000040AF87                 db 0F4h
.rodata:000000000040AF88                 db 0B3h
.rodata:000000000040AF89                 db 0E7h
.rodata:000000000040AF8A                 db  10h
.rodata:000000000040AF8B                 db 0A3h
.rodata:000000000040AF8C                 db 0B1h
.rodata:000000000040AF8D                 db    0
.rodata:000000000040AF8E ; _DWORD dword_40AF8E[2]
.rodata:000000000040AF8E dword_40AF8E    dd 0AF9D07A9h, 0F4F23521h
.rodata:000000000040AF8E                                         ; DATA XREF: sub_4015E0+7D↑o
.rodata:000000000040AF96                 db    0
.rodata:000000000040AF97 ; _DWORD dword_40AF97[3]
.rodata:000000000040AF97 dword_40AF97    dd 0F5FFD703h, 95A283B5h, 0C982FDA6h
.rodata:000000000040AF97                                         ; DATA XREF: sub_4015E0+279↑o
.rodata:000000000040AFA3                 db    0
.rodata:000000000040AFA4 unk_40AFA4      db  2Ch ; ,             ; DATA XREF: sub_4019A0+BF↑o
.rodata:000000000040AFA5                 db  93h
.rodata:000000000040AFA6                 db  58h ; X
.rodata:000000000040AFA7                 db 0ACh
.rodata:000000000040AFA8                 db 0E4h
.rodata:000000000040AFA9                 db 0F1h
.rodata:000000000040AFAA                 db 0F2h
.rodata:000000000040AFAB                 db  4Bh ; K
.rodata:000000000040AFAC                 db    0
.rodata:000000000040AFAD unk_40AFAD      db  8Ah                 ; DATA XREF: sub_401C2B+20↑o
.rodata:000000000040AFAE                 db 0C3h
.rodata:000000000040AFAF                 db  4Ch ; L
.rodata:000000000040AFB0                 db  7Eh ; ~
.rodata:000000000040AFB1                 db  9Ch
.rodata:000000000040AFB2                 db  27h ; '
.rodata:000000000040AFB3                 db  24h ; $
.rodata:000000000040AFB4                 db 0FCh
.rodata:000000000040AFB5                 db    0
.rodata:000000000040AFB6 unk_40AFB6      db  80h                 ; DATA XREF: sub_401C2B+167↑o
.rodata:000000000040AFB7                 db  91h
.rodata:000000000040AFB8                 db 0F0h
.rodata:000000000040AFB9                 db  94h
.rodata:000000000040AFBA                 db  8Eh
.rodata:000000000040AFBB                 db 0F3h
.rodata:000000000040AFBC                 db  9Eh
.rodata:000000000040AFBD                 db  0Bh
.rodata:000000000040AFBE                 db    0
.rodata:000000000040AFBF unk_40AFBF      db  16h                 ; DATA XREF: sub_401C2B+28A↑o
.rodata:000000000040AFC0                 db 0CAh
.rodata:000000000040AFC1                 db 0FFh
.rodata:000000000040AFC2                 db 0A2h
.rodata:000000000040AFC3                 db 0D0h
.rodata:000000000040AFC4                 db 0D6h
.rodata:000000000040AFC5                 db  72h ; r
.rodata:000000000040AFC6                 db 0FAh
.rodata:000000000040AFC7                 db    0
.rodata:000000000040AFC8 unk_40AFC8      db 0D5h                 ; DATA XREF: sub_401FD3+41↑o
.rodata:000000000040AFC9                 db 0F7h
.rodata:000000000040AFCA                 db 0DEh
.rodata:000000000040AFCB                 db 0DAh
.rodata:000000000040AFCC                 db 0A0h
.rodata:000000000040AFCD                 db  0Bh
.rodata:000000000040AFCE                 db  37h ; 7
.rodata:000000000040AFCF                 db  15h
.rodata:000000000040AFD0                 db    0
.rodata:000000000040AFD1 unk_40AFD1      db  70h ; p             ; DATA XREF: sub_401FD3:loc_402145↑o
.rodata:000000000040AFD2                 db 0D7h
.rodata:000000000040AFD3                 db  78h ; x
.rodata:000000000040AFD4                 db  51h ; Q
.rodata:000000000040AFD5                 db  8Ch
.rodata:000000000040AFD6                 db 0ACh
.rodata:000000000040AFD7                 db 0E5h
.rodata:000000000040AFD8                 db 0CEh
.rodata:000000000040AFD9                 db  70h ; p
.rodata:000000000040AFDA                 db 0BDh
.rodata:000000000040AFDB                 db  53h ; S
.rodata:000000000040AFDC                 db  0Fh
.rodata:000000000040AFDD                 db    0
.rodata:000000000040AFDE unk_40AFDE      db  80h                 ; DATA XREF: sub_401FD3+2B8↑o
.rodata:000000000040AFDF                 db  98h
.rodata:000000000040AFE0                 db  69h ; i
.rodata:000000000040AFE1                 db 0FBh
.rodata:000000000040AFE2                 db 0C3h
.rodata:000000000040AFE3                 db 0D4h
.rodata:000000000040AFE4                 db 0EDh
.rodata:000000000040AFE5                 db 0ADh
.rodata:000000000040AFE6                 db    0
.rodata:000000000040AFE7 unk_40AFE7      db 0D9h                 ; DATA XREF: sub_401FD3+3D6↑o
.rodata:000000000040AFE8                 db  66h ; f
.rodata:000000000040AFE9                 db  11h
.rodata:000000000040AFEA                 db 0FBh
.rodata:000000000040AFEB                 db 0CBh
.rodata:000000000040AFEC                 db  57h ; W
.rodata:000000000040AFED                 db  55h ; U
.rodata:000000000040AFEE                 db  36h ; 6
.rodata:000000000040AFEF                 db    0
.rodata:000000000040AFF0 unk_40AFF0      db  0Dh                 ; DATA XREF: sub_401FD3+534↑o
.rodata:000000000040AFF1                 db 0DBh
.rodata:000000000040AFF2                 db  3Fh ; ?
.rodata:000000000040AFF3                 db 0D5h
.rodata:000000000040AFF4                 db  2Ch ; ,
.rodata:000000000040AFF5                 db 0E6h
.rodata:000000000040AFF6                 db  68h ; h
.rodata:000000000040AFF7                 db 0E2h
.rodata:000000000040AFF8                 db    0
.rodata:000000000040AFF9 unk_40AFF9      db 0B1h                 ; DATA XREF: sub_401FD3:loc_402661↑o
.rodata:000000000040AFFA                 db  50h ; P
.rodata:000000000040AFFB                 db 0E7h
.rodata:000000000040AFFC                 db  5Fh ; _
.rodata:000000000040AFFD                 db  6Ah ; j
.rodata:000000000040AFFE                 db 0E0h
.rodata:000000000040AFFF                 db  23h ; #
.rodata:000000000040B000                 db 0C2h
.rodata:000000000040B001                 db    0
.rodata:000000000040B002 unk_40B002      db 0FAh                 ; DATA XREF: sub_402807+50↑o
.rodata:000000000040B003                 db 0E8h
.rodata:000000000040B004                 db 0ACh
.rodata:000000000040B005                 db  40h ; @
.rodata:000000000040B006                 db 0B6h
.rodata:000000000040B007                 db  3Bh ; ;
.rodata:000000000040B008                 db 0C2h
.rodata:000000000040B009                 db  40h ; @
.rodata:000000000040B00A                 db    0
.rodata:000000000040B00B unk_40B00B      db 0C3h                 ; DATA XREF: sub_402807:loc_40298D↑o
.rodata:000000000040B00C                 db 0D7h
.rodata:000000000040B00D                 db  92h
.rodata:000000000040B00E                 db  74h ; t
.rodata:000000000040B00F                 db  33h ; 3
.rodata:000000000040B010                 db 0FDh
.rodata:000000000040B011                 db  80h
.rodata:000000000040B012                 db  84h
.rodata:000000000040B013                 db    0
.rodata:000000000040B014 unk_40B014      db  87h                 ; DATA XREF: sub_402807+2DA↑o
.rodata:000000000040B015                 db  39h ; 9
.rodata:000000000040B016                 db  58h ; X
.rodata:000000000040B017                 db  88h
.rodata:000000000040B018                 db 0A9h
.rodata:000000000040B019                 db  0Fh
.rodata:000000000040B01A                 db 0C1h
.rodata:000000000040B01B                 db  8Dh
.rodata:000000000040B01C                 db    0
.rodata:000000000040B01D unk_40B01D      db  91h                 ; DATA XREF: sub_402807+433↑o
.rodata:000000000040B01E                 db  4Ah ; J
.rodata:000000000040B01F                 db 0DEh
.rodata:000000000040B020                 db    5
.rodata:000000000040B021                 db  88h
.rodata:000000000040B022                 db  35h ; 5
.rodata:000000000040B023                 db  58h ; X
.rodata:000000000040B024                 db 0BFh
.rodata:000000000040B025                 db    0
.rodata:000000000040B026 ; _DWORD dword_40B026[2]
.rodata:000000000040B026 dword_40B026    dd 3FA2D60Fh, 9AFF8BB7h ; DATA XREF: sub_402D64+17↑o
.rodata:000000000040B02E                 db    0
.rodata:000000000040B02F unk_40B02F      db  95h                 ; DATA XREF: sub_402EAA+48↑o
.rodata:000000000040B030                 db  98h
.rodata:000000000040B031                 db 0B9h
.rodata:000000000040B032                 db 0C8h
.rodata:000000000040B033                 db  6Eh ; n
.rodata:000000000040B034                 db  18h
.rodata:000000000040B035                 db  3Fh ; ?
.rodata:000000000040B036                 db  24h ; $
.rodata:000000000040B037                 db    0
.rodata:000000000040B038 unk_40B038      db  28h ; (             ; DATA XREF: sub_402EAA+1A6↑o
.rodata:000000000040B039                 db  67h ; g
.rodata:000000000040B03A                 db 0BCh
.rodata:000000000040B03B                 db 0D4h
.rodata:000000000040B03C                 db 0ABh
.rodata:000000000040B03D                 db  6Ch ; l
.rodata:000000000040B03E                 db 0C1h
.rodata:000000000040B03F                 db 0B0h
.rodata:000000000040B040                 db    0
.rodata:000000000040B041 unk_40B041      db 0CCh                 ; DATA XREF: sub_402EAA+330↑o
.rodata:000000000040B042                 db 0E9h
.rodata:000000000040B043                 db  4Dh ; M
.rodata:000000000040B044                 db  1Ch
.rodata:000000000040B045                 db 0D7h
.rodata:000000000040B046                 db 0D0h
.rodata:000000000040B047                 db 0D1h
.rodata:000000000040B048                 db 0C7h
.rodata:000000000040B049                 db    0
.rodata:000000000040B04A unk_40B04A      db    9                 ; DATA XREF: sub_402EAA:loc_40334B↑o
.rodata:000000000040B04B                 db  95h
.rodata:000000000040B04C                 db 0A8h
.rodata:000000000040B04D                 db 0E0h
.rodata:000000000040B04E                 db  92h
.rodata:000000000040B04F                 db  31h ; 1
.rodata:000000000040B050                 db  78h ; x
.rodata:000000000040B051                 db 0D2h
.rodata:000000000040B052                 db    0
.rodata:000000000040B053 unk_40B053      db    3                 ; DATA XREF: sub_4034E7+B2↑o
.rodata:000000000040B053                                         ; sub_405008+55↑o
.rodata:000000000040B054                 db 0DEh
.rodata:000000000040B055                 db 0A3h
.rodata:000000000040B056                 db 0C8h
.rodata:000000000040B057                 db  5Fh ; _
.rodata:000000000040B058                 db 0FCh
.rodata:000000000040B059                 db  97h
.rodata:000000000040B05A                 db 0C1h
.rodata:000000000040B05B                 db    0
.rodata:000000000040B05C unk_40B05C      db  31h ; 1             ; DATA XREF: sub_4034E7+217↑o
.rodata:000000000040B05D                 db  37h ; 7
.rodata:000000000040B05E                 db 0E4h
.rodata:000000000040B05F                 db 0B0h
.rodata:000000000040B060                 db 0F7h
.rodata:000000000040B061                 db 0B1h
.rodata:000000000040B062                 db  80h
.rodata:000000000040B063                 db 0F3h
.rodata:000000000040B064                 db 0C1h
.rodata:000000000040B065                 db  74h ; t
.rodata:000000000040B066                 db    7
.rodata:000000000040B067                 db 0FFh
.rodata:000000000040B068                 db    0
.rodata:000000000040B069 unk_40B069      db  74h ; t             ; DATA XREF: sub_4034E7+4C8↑o
.rodata:000000000040B069                                         ; sub_405008+CFE↑o
.rodata:000000000040B06A                 db 0BFh
.rodata:000000000040B06B                 db    8
.rodata:000000000040B06C                 db  1Dh
.rodata:000000000040B06D                 db  51h ; Q
.rodata:000000000040B06E                 db    6
.rodata:000000000040B06F                 db  1Ah
.rodata:000000000040B070                 db  7Eh ; ~
.rodata:000000000040B071                 db    0
.rodata:000000000040B072 unk_40B072      db  54h ; T             ; DATA XREF: sub_4034E7:loc_403B8C↑o
.rodata:000000000040B073                 db 0B0h
.rodata:000000000040B074                 db  4Ah ; J
.rodata:000000000040B075                 db  5Bh ; [
.rodata:000000000040B076                 db 0E7h
.rodata:000000000040B077                 db  51h ; Q
.rodata:000000000040B078                 db 0A3h
.rodata:000000000040B079                 db 0DAh
.rodata:000000000040B07A                 db    0
.rodata:000000000040B07B unk_40B07B      db  91h                 ; DATA XREF: sub_4034E7+814↑o
.rodata:000000000040B07C                 db 0D7h
.rodata:000000000040B07D                 db  86h
.rodata:000000000040B07E                 db  3Ch ; <
.rodata:000000000040B07F                 db 0BDh
.rodata:000000000040B080                 db  3Ah ; :
.rodata:000000000040B081                 db 0B4h
.rodata:000000000040B082                 db 0C4h
.rodata:000000000040B083                 db    0
.rodata:000000000040B084 unk_40B084      db  81h                 ; DATA XREF: sub_4034E7+9C2↑o
.rodata:000000000040B085                 db  27h ; '
.rodata:000000000040B086                 db  89h
.rodata:000000000040B087                 db  70h ; p
.rodata:000000000040B088                 db  4Eh ; N
.rodata:000000000040B089                 db 0A3h
.rodata:000000000040B08A                 db 0FCh
.rodata:000000000040B08B                 db  7Ah ; z
.rodata:000000000040B08C                 db  8Dh
.rodata:000000000040B08D                 db  3Ch ; <
.rodata:000000000040B08E                 db 0AAh
.rodata:000000000040B08F                 db  4Bh ; K
.rodata:000000000040B090                 db 0E1h
.rodata:000000000040B091                 db  3Fh ; ?
.rodata:000000000040B092                 db  46h ; F
.rodata:000000000040B093                 db 0C6h
.rodata:000000000040B094                 db  5Eh ; ^
.rodata:000000000040B095                 db 0E1h
.rodata:000000000040B096                 db  28h ; (
.rodata:000000000040B097                 db  86h
.rodata:000000000040B098                 db    0
.rodata:000000000040B099 unk_40B099      db  59h ; Y             ; DATA XREF: sub_403FFF+45↑o
.rodata:000000000040B09A                 db  91h
.rodata:000000000040B09B                 db  37h ; 7
.rodata:000000000040B09C                 db  27h ; '
.rodata:000000000040B09D                 db 0C7h
.rodata:000000000040B09E                 db 0A5h
.rodata:000000000040B09F                 db  6Eh ; n
.rodata:000000000040B0A0                 db  3Dh ; =
.rodata:000000000040B0A1                 db    0
.rodata:000000000040B0A2 unk_40B0A2      db 0F2h                 ; DATA XREF: sub_403FFF+176↑o
.rodata:000000000040B0A3                 db 0C1h
.rodata:000000000040B0A4                 db  90h
.rodata:000000000040B0A5                 db    7
.rodata:000000000040B0A6                 db 0D7h
.rodata:000000000040B0A7                 db  5Ah ; Z
.rodata:000000000040B0A8                 db 0E9h
.rodata:000000000040B0A9                 db  7Eh ; ~
.rodata:000000000040B0AA                 db    0
.rodata:000000000040B0AB unk_40B0AB      db  54h ; T             ; DATA XREF: sub_403FFF:loc_404285↑o
.rodata:000000000040B0AC                 db 0A2h
.rodata:000000000040B0AD                 db 0C6h
.rodata:000000000040B0AE                 db  61h ; a
.rodata:000000000040B0AF                 db 0D5h
.rodata:000000000040B0B0                 db  7Ch ; |
.rodata:000000000040B0B1                 db  16h
.rodata:000000000040B0B2                 db  0Fh
.rodata:000000000040B0B3                 db    0
.rodata:000000000040B0B4 unk_40B0B4      db 0C7h                 ; DATA XREF: sub_404398+61↑o
.rodata:000000000040B0B5                 db 0B3h
.rodata:000000000040B0B6                 db 0CAh
.rodata:000000000040B0B7                 db 0B1h
.rodata:000000000040B0B8                 db 0ADh
.rodata:000000000040B0B9                 db  9Ch
.rodata:000000000040B0BA                 db 0FFh
.rodata:000000000040B0BB                 db  8Eh
.rodata:000000000040B0BC                 db    0
.rodata:000000000040B0BD unk_40B0BD      db  32h ; 2             ; DATA XREF: sub_404398:loc_404520↑o
.rodata:000000000040B0BE                 db 0F8h
.rodata:000000000040B0BF                 db  65h ; e
.rodata:000000000040B0C0                 db 0E1h
.rodata:000000000040B0C1                 db 0F7h
.rodata:000000000040B0C2                 db  51h ; Q
.rodata:000000000040B0C3                 db 0F9h
.rodata:000000000040B0C4                 db    5
.rodata:000000000040B0C5                 db    0
.rodata:000000000040B0C6 unk_40B0C6      db  55h ; U             ; DATA XREF: sub_404398:loc_404681↑o
.rodata:000000000040B0C7                 db  6Dh ; m
.rodata:000000000040B0C8                 db 0E2h
.rodata:000000000040B0C9                 db 0BCh
.rodata:000000000040B0CA                 db  9Bh
.rodata:000000000040B0CB                 db 0D4h
.rodata:000000000040B0CC                 db  6Eh ; n
.rodata:000000000040B0CD                 db  63h ; c
.rodata:000000000040B0CE                 db    0
.rodata:000000000040B0CF unk_40B0CF      db 0F0h                 ; DATA XREF: sub_404398+41A↑o
.rodata:000000000040B0D0                 db 0C8h
.rodata:000000000040B0D1                 db 0A9h
.rodata:000000000040B0D2                 db 0BDh
.rodata:000000000040B0D3                 db 0BBh
.rodata:000000000040B0D4                 db 0C9h
.rodata:000000000040B0D5                 db 0B1h
.rodata:000000000040B0D6                 db  89h
.rodata:000000000040B0D7                 db  7Fh ; 
.rodata:000000000040B0D8                 db  9Ah
.rodata:000000000040B0D9                 db  17h
.rodata:000000000040B0DA                 db 0B7h
.rodata:000000000040B0DB                 db  4Fh ; O
.rodata:000000000040B0DC                 db 0B4h
.rodata:000000000040B0DD                 db  43h ; C
.rodata:000000000040B0DE                 db 0F5h
.rodata:000000000040B0DF                 db  45h ; E
.rodata:000000000040B0E0                 db 0B0h
.rodata:000000000040B0E1                 db  98h
.rodata:000000000040B0E2                 db 0D0h
.rodata:000000000040B0E3                 db    0
.rodata:000000000040B0E4 unk_40B0E4      db  8Fh                 ; DATA XREF: sub_404398:loc_404917↑o
.rodata:000000000040B0E5                 db 0A7h
.rodata:000000000040B0E6                 db  6Fh ; o
.rodata:000000000040B0E7                 db  96h
.rodata:000000000040B0E8                 db 0D4h
.rodata:000000000040B0E9                 db 0EBh
.rodata:000000000040B0EA                 db    3
.rodata:000000000040B0EB                 db 0F6h
.rodata:000000000040B0EC                 db    0
.rodata:000000000040B0ED unk_40B0ED      db  29h ; )             ; DATA XREF: sub_404398+6D2↑o
.rodata:000000000040B0EE                 db 0EAh
.rodata:000000000040B0EF                 db  6Eh ; n
.rodata:000000000040B0F0                 db 0FFh
.rodata:000000000040B0F1                 db  36h ; 6
.rodata:000000000040B0F2                 db  36h ; 6
.rodata:000000000040B0F3                 db 0B2h
.rodata:000000000040B0F4                 db 0F9h
.rodata:000000000040B0F5                 db    0
.rodata:000000000040B0F6 unk_40B0F6      db  2Bh ; +             ; DATA XREF: sub_404398:loc_404BBF↑o
.rodata:000000000040B0F7                 db 0F0h
.rodata:000000000040B0F8                 db  3Dh ; =
.rodata:000000000040B0F9                 db  8Dh
.rodata:000000000040B0FA                 db 0D2h
.rodata:000000000040B0FB                 db 0C6h
.rodata:000000000040B0FC                 db  83h
.rodata:000000000040B0FD                 db 0B2h
.rodata:000000000040B0FE                 db    0
.rodata:000000000040B0FF unk_40B0FF      db  7Ch ; |             ; DATA XREF: sub_404398+980↑o
.rodata:000000000040B100                 db  72h ; r
.rodata:000000000040B101                 db  7Bh ; {
.rodata:000000000040B102                 db  3Fh ; ?
.rodata:000000000040B103                 db  14h
.rodata:000000000040B104                 db  43h ; C
.rodata:000000000040B105                 db  22h ; "
.rodata:000000000040B106                 db  13h
.rodata:000000000040B107                 db    0
.rodata:000000000040B108 unk_40B108      db  78h ; x             ; DATA XREF: sub_404398+AE0↑o
.rodata:000000000040B109                 db 0DCh
.rodata:000000000040B10A                 db 0ABh
.rodata:000000000040B10B                 db 0E9h
.rodata:000000000040B10C                 db  72h ; r
.rodata:000000000040B10D                 db 0D1h
.rodata:000000000040B10E                 db 0A8h
.rodata:000000000040B10F                 db 0A3h
.rodata:000000000040B110                 db  7Ch ; |
.rodata:000000000040B111                 db 0ADh
.rodata:000000000040B112                 db  97h
.rodata:000000000040B113                 db 0CCh
.rodata:000000000040B114                 db 0CCh
.rodata:000000000040B115                 db  59h ; Y
.rodata:000000000040B116                 db 0EDh
.rodata:000000000040B117                 db  88h
.rodata:000000000040B118                 db 0EDh
.rodata:000000000040B119                 db  9Dh
.rodata:000000000040B11A                 db  15h
.rodata:000000000040B11B                 db 0CEh
.rodata:000000000040B11C                 db    0
.rodata:000000000040B11D unk_40B11D      db  75h ; u             ; DATA XREF: sub_405008+1A1↑o
.rodata:000000000040B11D                                         ; sub_405008+36C↑o
.rodata:000000000040B11E                 db    7
.rodata:000000000040B11F                 db 0C8h
.rodata:000000000040B120                 db 0F8h
.rodata:000000000040B121                 db 0F1h
.rodata:000000000040B122                 db  6Fh ; o
.rodata:000000000040B123                 db  43h ; C
.rodata:000000000040B124                 db 0A8h
.rodata:000000000040B125                 db    0
.rodata:000000000040B126 unk_40B126      db 0D0h                 ; DATA XREF: sub_405008+4AA↑o
.rodata:000000000040B127                 db  5Bh ; [
.rodata:000000000040B128                 db 0AFh
.rodata:000000000040B129                 db 0C5h
.rodata:000000000040B12A                 db 0C4h
.rodata:000000000040B12B                 db    3
.rodata:000000000040B12C                 db 0BCh
.rodata:000000000040B12D                 db  3Eh ; >
.rodata:000000000040B12E                 db    0
.rodata:000000000040B12F unk_40B12F      db 0C4h                 ; DATA XREF: sub_405008+61A↑o
.rodata:000000000040B130                 db 0AFh
.rodata:000000000040B131                 db  1Eh
.rodata:000000000040B132                 db 0E8h
.rodata:000000000040B133                 db  54h ; T
.rodata:000000000040B134                 db  79h ; y
.rodata:000000000040B135                 db 0EEh
.rodata:000000000040B136                 db  4Ah ; J
.rodata:000000000040B137                 db    0
.rodata:000000000040B138 unk_40B138      db 0A5h                 ; DATA XREF: sub_405008+783↑o
.rodata:000000000040B139                 db 0DEh
.rodata:000000000040B13A                 db  62h ; b
.rodata:000000000040B13B                 db  5Fh ; _
.rodata:000000000040B13C                 db 0EAh
.rodata:000000000040B13D                 db  50h ; P
.rodata:000000000040B13E                 db 0F3h
.rodata:000000000040B13F                 db  0Ah
.rodata:000000000040B140                 db    0
.rodata:000000000040B141 unk_40B141      db  0Ch                 ; DATA XREF: sub_405008+8E0↑o
.rodata:000000000040B141                                         ; sub_405008:loc_407F9F↑o ...
.rodata:000000000040B142                 db 0B6h
.rodata:000000000040B143                 db 0BCh
.rodata:000000000040B144                 db  70h ; p
.rodata:000000000040B145                 db 0A1h
.rodata:000000000040B146                 db  95h
.rodata:000000000040B147                 db 0DCh
.rodata:000000000040B148                 db 0B5h
.rodata:000000000040B149                 db    0
.rodata:000000000040B14A unk_40B14A      db 0FBh                 ; DATA XREF: sub_405008+A69↑o
.rodata:000000000040B14B                 db  38h ; 8
.rodata:000000000040B14C                 db  82h
.rodata:000000000040B14D                 db 0C4h
.rodata:000000000040B14E                 db    0
.rodata:000000000040B14F unk_40B14F      db  1Fh                 ; DATA XREF: sub_405008+BAE↑o
.rodata:000000000040B150                 db  4Dh ; M
.rodata:000000000040B151                 db  69h ; i
.rodata:000000000040B152                 db  3Ch ; <
.rodata:000000000040B153                 db    0
.rodata:000000000040B154 unk_40B154      db  0Ah                 ; DATA XREF: sub_405008+E4C↑o
.rodata:000000000040B155                 db  99h
.rodata:000000000040B156                 db 0ABh
.rodata:000000000040B157                 db 0C3h
.rodata:000000000040B158                 db 0B5h
.rodata:000000000040B159                 db  5Ch ; \
.rodata:000000000040B15A                 db 0ADh
.rodata:000000000040B15B                 db  22h ; "
.rodata:000000000040B15C                 db    0
.rodata:000000000040B15D unk_40B15D      db 0F3h                 ; DATA XREF: sub_405008+FA4↑o
.rodata:000000000040B15E                 db  1Ah
.rodata:000000000040B15F                 db  91h
.rodata:000000000040B160                 db 0DEh
.rodata:000000000040B161                 db 0CCh
.rodata:000000000040B162                 db  18h
.rodata:000000000040B163                 db  7Ch ; |
.rodata:000000000040B164                 db  7Dh ; }
.rodata:000000000040B165                 db    0
.rodata:000000000040B166 unk_40B166      db 0ACh                 ; DATA XREF: sub_405008+10FC↑o
.rodata:000000000040B167                 db  60h ; `
.rodata:000000000040B168                 db  84h
.rodata:000000000040B169                 db  15h
.rodata:000000000040B16A                 db 0EFh
.rodata:000000000040B16B                 db  0Ch
.rodata:000000000040B16C                 db 0F6h
.rodata:000000000040B16D                 db  35h ; 5
.rodata:000000000040B16E                 db    0
.rodata:000000000040B16F unk_40B16F      db 0B0h                 ; DATA XREF: sub_405008+1254↑o
.rodata:000000000040B170                 db  0Ah
.rodata:000000000040B171                 db  23h ; #
.rodata:000000000040B172                 db 0DFh
.rodata:000000000040B173                 db    0
.rodata:000000000040B174 unk_40B174      db  2Bh ; +             ; DATA XREF: sub_405008+1392↑o
.rodata:000000000040B175                 db  4Fh ; O
.rodata:000000000040B176                 db  8Dh
.rodata:000000000040B177                 db  55h ; U
.rodata:000000000040B178                 db    0
.rodata:000000000040B179 unk_40B179      db  10h                 ; DATA XREF: sub_405008+14D0↑o
.rodata:000000000040B17A                 db 0D3h
.rodata:000000000040B17B                 db  95h
.rodata:000000000040B17C                 db  16h
.rodata:000000000040B17D                 db  3Fh ; ?
.rodata:000000000040B17E                 db 0E9h
.rodata:000000000040B17F                 db 0FAh
.rodata:000000000040B180                 db 0F6h
.rodata:000000000040B181                 db    0
.rodata:000000000040B182 unk_40B182      db  3Fh ; ?             ; DATA XREF: sub_405008+160E↑o
.rodata:000000000040B183                 db  4Ch ; L
.rodata:000000000040B184                 db 0BEh
.rodata:000000000040B185                 db 0E5h
.rodata:000000000040B186                 db 0B2h
.rodata:000000000040B187                 db  0Ah
.rodata:000000000040B188                 db  9Bh
.rodata:000000000040B189                 db 0ADh
.rodata:000000000040B18A                 db    0
.rodata:000000000040B18B unk_40B18B      db  88h                 ; DATA XREF: sub_405008+176F↑o
.rodata:000000000040B18C                 db  9Bh
.rodata:000000000040B18D                 db  29h ; )
.rodata:000000000040B18E                 db 0E3h
.rodata:000000000040B18F                 db  30h ; 0
.rodata:000000000040B190                 db 0F3h
.rodata:000000000040B191                 db  95h
.rodata:000000000040B192                 db 0E1h
.rodata:000000000040B193                 db    0
.rodata:000000000040B194 unk_40B194      db  35h ; 5             ; DATA XREF: sub_405008:loc_4068D1↑o
.rodata:000000000040B195                 db 0B9h
.rodata:000000000040B196                 db 0EFh
.rodata:000000000040B197                 db 0B9h
.rodata:000000000040B198                 db  5Eh ; ^
.rodata:000000000040B199                 db  20h
.rodata:000000000040B19A                 db  8Ah
.rodata:000000000040B19B                 db  47h ; G
.rodata:000000000040B19C                 db    0
.rodata:000000000040B19D unk_40B19D      db 0DFh                 ; DATA XREF: sub_405008+1A29↑o
.rodata:000000000040B19E                 db  97h
.rodata:000000000040B19F                 db 0DBh
.rodata:000000000040B1A0                 db 0AAh
.rodata:000000000040B1A1                 db    2
.rodata:000000000040B1A2                 db 0A7h
.rodata:000000000040B1A3                 db  4Ch ; L
.rodata:000000000040B1A4                 db  14h
.rodata:000000000040B1A5                 db 0A8h
.rodata:000000000040B1A6                 db  4Ah ; J
.rodata:000000000040B1A7                 db  56h ; V
.rodata:000000000040B1A8                 db 0DFh
.rodata:000000000040B1A9                 db 0DEh
.rodata:000000000040B1AA                 db  82h
.rodata:000000000040B1AB                 db 0A8h
.rodata:000000000040B1AC                 db 0E2h
.rodata:000000000040B1AD                 db 0DFh
.rodata:000000000040B1AE                 db 0D0h
.rodata:000000000040B1AF                 db  43h ; C
.rodata:000000000040B1B0                 db  26h ; &
.rodata:000000000040B1B1                 db    0
.rodata:000000000040B1B2 unk_40B1B2      db    3                 ; DATA XREF: sub_405008:loc_406B98↑o
.rodata:000000000040B1B3                 db  36h ; 6
.rodata:000000000040B1B4                 db 0BFh
.rodata:000000000040B1B5                 db  0Bh
.rodata:000000000040B1B6                 db  92h
.rodata:000000000040B1B7                 db 0F9h
.rodata:000000000040B1B8                 db  86h
.rodata:000000000040B1B9                 db  3Ch ; <
.rodata:000000000040B1BA                 db  28h ; (
.rodata:000000000040B1BB                 db 0EDh
.rodata:000000000040B1BC                 db 0CFh
.rodata:000000000040B1BD                 db 0F6h
.rodata:000000000040B1BE                 db    0
.rodata:000000000040B1BF unk_40B1BF      db  93h                 ; DATA XREF: sub_405008:loc_406CEB↑o
.rodata:000000000040B1BF                                         ; sub_405008+1EC0↑o
.rodata:000000000040B1C0                 db 0E2h
.rodata:000000000040B1C1                 db 0F3h
.rodata:000000000040B1C2                 db  24h ; $
.rodata:000000000040B1C3                 db    0
.rodata:000000000040B1C4 unk_40B1C4      db 0E7h                 ; DATA XREF: sub_405008+1FFE↑o
.rodata:000000000040B1C5                 db  6Bh ; k
.rodata:000000000040B1C6                 db  87h
.rodata:000000000040B1C7                 db  44h ; D
.rodata:000000000040B1C8                 db  7Fh ; 
.rodata:000000000040B1C9                 db  2Ah ; *
.rodata:000000000040B1CA                 db  16h
.rodata:000000000040B1CB                 db  18h
.rodata:000000000040B1CC                 db    0
.rodata:000000000040B1CD unk_40B1CD      db  99h                 ; DATA XREF: sub_405008+216E↑o
.rodata:000000000040B1CE                 db  3Eh ; >
.rodata:000000000040B1CF                 db 0D4h
.rodata:000000000040B1D0                 db 0E7h
.rodata:000000000040B1D1                 db 0B6h
.rodata:000000000040B1D2                 db  9Eh
.rodata:000000000040B1D3                 db 0E5h
.rodata:000000000040B1D4                 db  7Dh ; }
.rodata:000000000040B1D5                 db    0
.rodata:000000000040B1D6 unk_40B1D6      db  5Dh ; ]             ; DATA XREF: sub_405008+22D7↑o
.rodata:000000000040B1D7                 db 0FFh
.rodata:000000000040B1D8                 db 0E4h
.rodata:000000000040B1D9                 db 0C9h
.rodata:000000000040B1DA                 db  6Fh ; o
.rodata:000000000040B1DB                 db  86h
.rodata:000000000040B1DC                 db 0DBh
.rodata:000000000040B1DD                 db  74h ; t
.rodata:000000000040B1DE                 db    0
.rodata:000000000040B1DF unk_40B1DF      db 0EAh                 ; DATA XREF: sub_405008+2429↑o
.rodata:000000000040B1DF                                         ; sub_405008+2B89↑o ...
.rodata:000000000040B1E0                 db 0D8h
.rodata:000000000040B1E1                 db 0E9h
.rodata:000000000040B1E2                 db  36h ; 6
.rodata:000000000040B1E3                 db    0
.rodata:000000000040B1E4 unk_40B1E4      db 0CFh                 ; DATA XREF: sub_405008:loc_407584↑o
.rodata:000000000040B1E5                 db 0BFh
.rodata:000000000040B1E6                 db    6
.rodata:000000000040B1E7                 db 0DAh
.rodata:000000000040B1E8                 db    0
.rodata:000000000040B1E9 unk_40B1E9      db 0C6h                 ; DATA XREF: sub_405008+2779↑o
.rodata:000000000040B1EA                 db  63h ; c
.rodata:000000000040B1EB                 db 0CDh
.rodata:000000000040B1EC                 db  0Fh
.rodata:000000000040B1ED                 db  49h ; I
.rodata:000000000040B1EE                 db 0CAh
.rodata:000000000040B1EF                 db 0DCh
.rodata:000000000040B1F0                 db 0AAh
.rodata:000000000040B1F1                 db  55h ; U
.rodata:000000000040B1F2                 db  1Ch
.rodata:000000000040B1F3                 db 0A6h
.rodata:000000000040B1F4                 db  8Bh
.rodata:000000000040B1F5                 db 0D6h
.rodata:000000000040B1F6                 db  21h ; !
.rodata:000000000040B1F7                 db  62h ; b
.rodata:000000000040B1F8                 db  95h
.rodata:000000000040B1F9                 db    0
.rodata:000000000040B1FA unk_40B1FA      db  58h ; X             ; DATA XREF: sub_405008+28B7↑o
.rodata:000000000040B1FB                 db 0A9h
.rodata:000000000040B1FC                 db  0Ch
.rodata:000000000040B1FD                 db 0ADh
.rodata:000000000040B1FE                 db  6Fh ; o
.rodata:000000000040B1FF                 db 0D7h
.rodata:000000000040B200                 db  7Fh ; 
.rodata:000000000040B201                 db  26h ; &
.rodata:000000000040B202                 db 0AAh
.rodata:000000000040B203                 db  0Ah
.rodata:000000000040B204                 db  48h ; H
.rodata:000000000040B205                 db 0E4h
.rodata:000000000040B206                 db    0
.rodata:000000000040B207 unk_40B207      db  6Ah ; j             ; DATA XREF: sub_405008+2A1B↑o
.rodata:000000000040B208                 db  31h ; 1
.rodata:000000000040B209                 db  84h
.rodata:000000000040B20A                 db 0A0h
.rodata:000000000040B20B                 db  7Eh ; ~
.rodata:000000000040B20C                 db 0EFh
.rodata:000000000040B20D                 db  43h ; C
.rodata:000000000040B20E                 db  82h
.rodata:000000000040B20F                 db    0
.rodata:000000000040B210 unk_40B210      db  6Ah ; j             ; DATA XREF: sub_405008+2CEB↑o
.rodata:000000000040B211                 db  2Fh ; /
.rodata:000000000040B212                 db 0A2h
.rodata:000000000040B213                 db  97h
.rodata:000000000040B214                 db  7Eh ; ~
.rodata:000000000040B215                 db  0Eh
.rodata:000000000040B216                 db 0E7h
.rodata:000000000040B217                 db  2Bh ; +
.rodata:000000000040B218                 db    0
.rodata:000000000040B219 unk_40B219      db 0C8h                 ; DATA XREF: sub_405008:loc_407E45↑o
.rodata:000000000040B21A                 db  10h
.rodata:000000000040B21B                 db  35h ; 5
.rodata:000000000040B21C                 db  9Eh
.rodata:000000000040B21D                 db  63h ; c
.rodata:000000000040B21E                 db  64h ; d
.rodata:000000000040B21F                 db  94h
.rodata:000000000040B220                 db  11h
.rodata:000000000040B221                 db    0
.rodata:000000000040B222 unk_40B222      db 0A7h                 ; DATA XREF: sub_405008:loc_4080F2↑o
.rodata:000000000040B223                 db  36h ; 6
.rodata:000000000040B224                 db 0DAh
.rodata:000000000040B225                 db  7Dh ; }
.rodata:000000000040B226                 db 0F0h
.rodata:000000000040B227                 db  37h ; 7
.rodata:000000000040B228                 db  2Eh ; .
.rodata:000000000040B229                 db 0EDh
.rodata:000000000040B22A                 db    0
.rodata:000000000040B22B unk_40B22B      db  85h                 ; DATA XREF: sub_405008+357A↑o
.rodata:000000000040B22C                 db  7Ah ; z
.rodata:000000000040B22D                 db 0E3h
.rodata:000000000040B22E                 db  20h
.rodata:000000000040B22F                 db  51h ; Q
.rodata:000000000040B230                 db  86h
.rodata:000000000040B231                 db  2Dh ; -
.rodata:000000000040B232                 db  8Fh
.rodata:000000000040B233                 db    0
.rodata:000000000040B234 unk_40B234      db  5Dh ; ]             ; DATA XREF: sub_405008:loc_4086E4↑o
.rodata:000000000040B235                 db  3Bh ; ;
.rodata:000000000040B236                 db 0D3h
.rodata:000000000040B237                 db    8
.rodata:000000000040B238                 db    0
.rodata:000000000040B239 unk_40B239      db  31h ; 1             ; DATA XREF: sub_405008+3B81↑o
.rodata:000000000040B23A                 db  27h ; '
.rodata:000000000040B23B                 db 0AAh
.rodata:000000000040B23C                 db 0D7h
.rodata:000000000040B23D                 db 0DCh
.rodata:000000000040B23E                 db  7Ch ; |
.rodata:000000000040B23F                 db  48h ; H
.rodata:000000000040B240                 db  93h
.rodata:000000000040B241                 db 0DFh
.rodata:000000000040B242                 db  6Ch ; l
.rodata:000000000040B243                 db 0F6h
.rodata:000000000040B244                 db  22h ; "
.rodata:000000000040B245                 db  92h
.rodata:000000000040B246                 db 0BEh
.rodata:000000000040B247                 db 0D1h
.rodata:000000000040B248                 db  3Eh ; >
.rodata:000000000040B249                 db 0F9h
.rodata:000000000040B24A                 db  40h ; @
.rodata:000000000040B24B                 db  3Ah ; :
.rodata:000000000040B24C                 db  61h ; a
.rodata:000000000040B24D                 db    0
.rodata:000000000040B24E ; _DWORD dword_40B24E[2]
.rodata:000000000040B24E dword_40B24E    dd 0EE51806Dh, 0E41A98BEh
.rodata:000000000040B24E                                         ; DATA XREF: sub_408CE3+42↑o
.rodata:000000000040B256                 db    0
.rodata:000000000040B257 ; _DWORD dword_40B257[2]
.rodata:000000000040B257 dword_40B257    dd 7E40AB49h, 37A2FA86h ; DATA XREF: sub_408E38+5F↑o
.rodata:000000000040B25F                 db    0
.rodata:000000000040B260 unk_40B260      db 0C0h                 ; DATA XREF: randData+1A↑o
.rodata:000000000040B261                 db  5Fh ; _
.rodata:000000000040B262                 db 0D5h
.rodata:000000000040B263                 db  79h ; y
.rodata:000000000040B264                 db  70h ; p
.rodata:000000000040B265                 db  94h
.rodata:000000000040B266                 db  3Bh ; ;
.rodata:000000000040B267                 db  33h ; 3
.rodata:000000000040B268                 db  9Bh
.rodata:000000000040B269                 db  39h ; 9
.rodata:000000000040B26A                 db  9Ah
.rodata:000000000040B26B                 db  40h ; @
.rodata:000000000040B26C                 db 0CEh
.rodata:000000000040B26D                 db 0D3h
.rodata:000000000040B26E                 db 0A1h
.rodata:000000000040B26F                 db  6Eh ; n
.rodata:000000000040B270                 db    0
.rodata:000000000040B271 unk_40B271      db  81h                 ; DATA XREF: randData+165↑o
.rodata:000000000040B272                 db  41h ; A
.rodata:000000000040B273                 db 0B2h
.rodata:000000000040B274                 db 0B4h
.rodata:000000000040B275                 db 0B1h
.rodata:000000000040B276                 db  7Bh ; {
.rodata:000000000040B277                 db    2
.rodata:000000000040B278                 db 0F3h
.rodata:000000000040B279                 db    0
.rodata:000000000040B27A unk_40B27A      db  9Eh                 ; DATA XREF: randData+284↑o
.rodata:000000000040B27B                 db 0A9h
.rodata:000000000040B27C                 db 0EDh
.rodata:000000000040B27D                 db 0C7h
.rodata:000000000040B27E                 db 0D7h
.rodata:000000000040B27F                 db 0FFh
.rodata:000000000040B280                 db  94h
.rodata:000000000040B281                 db 0D0h
.rodata:000000000040B282                 db    0
.rodata:000000000040B283                 db    0
.rodata:000000000040B284                 db    0
.rodata:000000000040B285                 db    0
.rodata:000000000040B286                 db    0
.rodata:000000000040B287                 db    0
.rodata:000000000040B288 ; std::piecewise_construct
.rodata:000000000040B288 _ZStL19piecewise_construct db    0
.rodata:000000000040B289 aNtpClientV01   db 'NTP client v0.1 (',0
.rodata:000000000040B289                                         ; DATA XREF: main+16↑o
.rodata:000000000040B29B aSingle         db 'single',0           ; DATA XREF: main+32↑o
.rodata:000000000040B2A2 aDaemon         db 'daemon',0           ; DATA XREF: main:loc_40942D↑o
.rodata:000000000040B2A9 aMode           db ' mode)',0           ; DATA XREF: main+4D↑o
.rodata:000000000040B2B0 asc_40B2B0      db '---',0              ; DATA XREF: main+8C↑o
.rodata:000000000040B2B0                                         ; main+30F↑o
.rodata:000000000040B2B4 aErrorReadingLo db 'Error reading local time.',0
.rodata:000000000040B2B4                                         ; DATA XREF: main+C0↑o
.rodata:000000000040B2CE                 align 10h
.rodata:000000000040B2D0 aErrorFetchingR db 'Error fetching reference time.',0
.rodata:000000000040B2D0                                         ; DATA XREF: main+F9↑o
.rodata:000000000040B2EF aLocalTimeIs    db 'Local time is ',0   ; DATA XREF: main+17B↑o
.rodata:000000000040B2FE aSecond         db ' second',0          ; DATA XREF: main+1A0↑o
.rodata:000000000040B306 unk_40B306      db    0                 ; DATA XREF: main+1B9↑o
.rodata:000000000040B307 aS              db 's',0                ; DATA XREF: main:loc_4095B4↑o
.rodata:000000000040B309 aAhead          db ' ahead',0           ; DATA XREF: main+1E4↑o
.rodata:000000000040B310 aBehind         db ' behind',0          ; DATA XREF: main:loc_4095DF↑o
.rodata:000000000040B318 aLocalTime      db ' - local time: ',0  ; DATA XREF: main+214↑o
.rodata:000000000040B328 aReferenceTime  db ' - reference time: ',0
.rodata:000000000040B328                                         ; DATA XREF: main+249↑o
.rodata:000000000040B33C aAdjusting      db 'Adjusting... ',0    ; DATA XREF: main+27E↑o
.rodata:000000000040B34A aFailedAreYouRo db 'failed (are you root?)',0
.rodata:000000000040B34A                                         ; DATA XREF: main+2A2↑o
.rodata:000000000040B361 aOk             db 'OK.',0              ; DATA XREF: main:loc_40969D↑o
.rodata:000000000040B365                 align 8
.rodata:000000000040B368 aSystemTimeIsIn db 'System time is in perfect sync!',0
.rodata:000000000040B368                                         ; DATA XREF: main+2DE↑o
.rodata:000000000040B388 ; _DWORD dword_40B388[3]
.rodata:000000000040B388 dword_40B388    dd 238989F9h, 5547F170h, 0
.rodata:000000000040B388                                         ; DATA XREF: sub_4097FA+2E↑o
.rodata:000000000040B394 off_40B394      dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                                         ; DATA XREF: sub_4097FA+305↑o
.rodata:000000000040B394                                         ; sub_4097FA+312↑o
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h ; jump table for switch statement
.rodata:000000000040B394                 dd offset loc_409BAA - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409B18 - 40B394h
.rodata:000000000040B394                 dd offset loc_409B36 - 40B394h
.rodata:000000000040B394                 dd offset loc_409B6C - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409B74 - 40B394h
.rodata:000000000040B394                 dd offset loc_409B51 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409B74 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409BC4 - 40B394h
.rodata:000000000040B394                 dd offset loc_409B8F - 40B394h
.rodata:000000000040B3F4 unk_40B3F4      db  13h                 ; DATA XREF: sub_409E68+B3↑o
.rodata:000000000040B3F5                 db  85h
.rodata:000000000040B3F6                 db 0D3h
.rodata:000000000040B3F7                 db  48h ; H
.rodata:000000000040B3F8                 db  72h ; r
.rodata:000000000040B3F9                 db 0E5h
.rodata:000000000040B3FA                 db 0B8h
.rodata:000000000040B3FB                 db    7
.rodata:000000000040B3FC                 db    0
.rodata:000000000040B3FD ; _DWORD dword_40B3FD[2]
.rodata:000000000040B3FD dword_40B3FD    dd 0BBE2504Ah, 0B10B1EE8h
.rodata:000000000040B3FD                                         ; DATA XREF: sub_40A10B+56↑o
.rodata:000000000040B3FD                                         ; sub_40A2A2+56↑o
.rodata:000000000040B405                 db    0
.rodata:000000000040B406 unk_40B406      db  56h ; V             ; DATA XREF: sub_40A433+24↑o
.rodata:000000000040B407                 db 0F5h
.rodata:000000000040B408                 db  4Bh ; K
.rodata:000000000040B409                 db  89h
.rodata:000000000040B40A                 db  93h
.rodata:000000000040B40B                 db  2Eh ; .
.rodata:000000000040B40C                 db  4Fh ; O
.rodata:000000000040B40D                 db  1Dh
.rodata:000000000040B40E                 db    0
.rodata:000000000040B40F unk_40B40F      db  84h                 ; DATA XREF: sub_40A608+14↑o
.rodata:000000000040B410                 db  54h ; T
.rodata:000000000040B411                 db 0CFh
.rodata:000000000040B412                 db  6Bh ; k
.rodata:000000000040B413                 db  9Eh
.rodata:000000000040B414                 db 0D3h
.rodata:000000000040B415                 db 0D1h
.rodata:000000000040B416                 db  3Ah ; :
.rodata:000000000040B417                 db    0
.rodata:000000000040B418 ; _DWORD dword_40B418[2]
.rodata:000000000040B418 dword_40B418    dd 0A09CD95Dh, 0B9ADA460h
.rodata:000000000040B418                                         ; DATA XREF: afterClone+60↑o
.rodata:000000000040B420                 db    0
.rodata:000000000040B421 ; _DWORD dword_40B421[2]
.rodata:000000000040B421 dword_40B421    dd 5692ED3Dh, 0CB73BA2h ; DATA XREF: sub_40A8C3+11E↑o
.rodata:000000000040B429                 db    0
.rodata:000000000040B42A ; _DWORD dword_40B42A[2]
.rodata:000000000040B42A dword_40B42A    dd 95955710h, 5093FF94h ; DATA XREF: sub_40A8C3+262↑o
.rodata:000000000040B432                 db    0
.rodata:000000000040B433 ; char name[]
.rodata:000000000040B433 name            db 'time.google.com',0  ; DATA XREF: GetNTPTime(void)+87↑o
.rodata:000000000040B433 _rodata         ends
.rodata:000000000040B433
LOAD:000000000040B443 ; ===========================================================================
LOAD:000000000040B443
LOAD:000000000040B443 ; Segment type: Pure code
LOAD:000000000040B443 ; Segment permissions: Read/Execute
LOAD:000000000040B443 LOAD            segment byte public 'CODE' use64
LOAD:000000000040B443                 assume cs:LOAD
LOAD:000000000040B443                 ;org 40B443h
LOAD:000000000040B443                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
LOAD:000000000040B443                 align 4
LOAD:000000000040B443 LOAD            ends
LOAD:000000000040B443
.eh_frame_hdr:000000000040B444 ; ===========================================================================
.eh_frame_hdr:000000000040B444
.eh_frame_hdr:000000000040B444 ; Segment type: Pure data
.eh_frame_hdr:000000000040B444 ; Segment permissions: Read
.eh_frame_hdr:000000000040B444 _eh_frame_hdr   segment dword public 'CONST' use64
.eh_frame_hdr:000000000040B444                 assume cs:_eh_frame_hdr
.eh_frame_hdr:000000000040B444                 ;org 40B444h
.eh_frame_hdr:000000000040B444 __GNU_EH_FRAME_HDR db    1              ; DATA XREF: LOAD:00000000004001A0↑o
.eh_frame_hdr:000000000040B445                 db  1Bh
.eh_frame_hdr:000000000040B446                 db    3
.eh_frame_hdr:000000000040B447                 db  3Bh ; ;
.eh_frame_hdr:000000000040B448                 db  68h ; h
.eh_frame_hdr:000000000040B449                 db    1
.eh_frame_hdr:000000000040B44A                 db    0
.eh_frame_hdr:000000000040B44B                 db    0
.eh_frame_hdr:000000000040B44C                 db  2Ch ; ,
.eh_frame_hdr:000000000040B44D                 db    0
.eh_frame_hdr:000000000040B44E                 db    0
.eh_frame_hdr:000000000040B44F                 db    0
.eh_frame_hdr:000000000040B450                 db  3Ch ; <
.eh_frame_hdr:000000000040B451                 db  55h ; U
.eh_frame_hdr:000000000040B452                 db 0FFh
.eh_frame_hdr:000000000040B453                 db 0FFh
.eh_frame_hdr:000000000040B454                 db 0B4h
.eh_frame_hdr:000000000040B455                 db    1
.eh_frame_hdr:000000000040B456                 db    0
.eh_frame_hdr:000000000040B457                 db    0
.eh_frame_hdr:000000000040B458                 db  7Ch ; |
.eh_frame_hdr:000000000040B459                 db  56h ; V
.eh_frame_hdr:000000000040B45A                 db 0FFh
.eh_frame_hdr:000000000040B45B                 db 0FFh
.eh_frame_hdr:000000000040B45C                 db  84h
.eh_frame_hdr:000000000040B45D                 db    1
.eh_frame_hdr:000000000040B45E                 db    0
.eh_frame_hdr:000000000040B45F                 db    0
.eh_frame_hdr:000000000040B460                 db  53h ; S
.eh_frame_hdr:000000000040B461                 db  57h ; W
.eh_frame_hdr:000000000040B462                 db 0FFh
.eh_frame_hdr:000000000040B463                 db 0FFh
.eh_frame_hdr:000000000040B464                 db 0FCh
.eh_frame_hdr:000000000040B465                 db    1
.eh_frame_hdr:000000000040B466                 db    0
.eh_frame_hdr:000000000040B467                 db    0
.eh_frame_hdr:000000000040B468                 db 0A9h
.eh_frame_hdr:000000000040B469                 db  58h ; X
.eh_frame_hdr:000000000040B46A                 db 0FFh
.eh_frame_hdr:000000000040B46B                 db 0FFh
.eh_frame_hdr:000000000040B46C                 db  1Ch
.eh_frame_hdr:000000000040B46D                 db    2
.eh_frame_hdr:000000000040B46E                 db    0
.eh_frame_hdr:000000000040B46F                 db    0
.eh_frame_hdr:000000000040B470                 db  9Ch
.eh_frame_hdr:000000000040B471                 db  61h ; a
.eh_frame_hdr:000000000040B472                 db 0FFh
.eh_frame_hdr:000000000040B473                 db 0FFh
.eh_frame_hdr:000000000040B474                 db  40h ; @
.eh_frame_hdr:000000000040B475                 db    2
.eh_frame_hdr:000000000040B476                 db    0
.eh_frame_hdr:000000000040B477                 db    0
.eh_frame_hdr:000000000040B478                 db  5Ch ; \
.eh_frame_hdr:000000000040B479                 db  65h ; e
.eh_frame_hdr:000000000040B47A                 db 0FFh
.eh_frame_hdr:000000000040B47B                 db 0FFh
.eh_frame_hdr:000000000040B47C                 db  64h ; d
.eh_frame_hdr:000000000040B47D                 db    2
.eh_frame_hdr:000000000040B47E                 db    0
.eh_frame_hdr:000000000040B47F                 db    0
.eh_frame_hdr:000000000040B480                 db  40h ; @
.eh_frame_hdr:000000000040B481                 db  67h ; g
.eh_frame_hdr:000000000040B482                 db 0FFh
.eh_frame_hdr:000000000040B483                 db 0FFh
.eh_frame_hdr:000000000040B484                 db  88h
.eh_frame_hdr:000000000040B485                 db    2
.eh_frame_hdr:000000000040B486                 db    0
.eh_frame_hdr:000000000040B487                 db    0
.eh_frame_hdr:000000000040B488                 db 0E7h
.eh_frame_hdr:000000000040B489                 db  67h ; g
.eh_frame_hdr:000000000040B48A                 db 0FFh
.eh_frame_hdr:000000000040B48B                 db 0FFh
.eh_frame_hdr:000000000040B48C                 db 0A8h
.eh_frame_hdr:000000000040B48D                 db    2
.eh_frame_hdr:000000000040B48E                 db    0
.eh_frame_hdr:000000000040B48F                 db    0
.eh_frame_hdr:000000000040B490                 db  8Fh
.eh_frame_hdr:000000000040B491                 db  6Bh ; k
.eh_frame_hdr:000000000040B492                 db 0FFh
.eh_frame_hdr:000000000040B493                 db 0FFh
.eh_frame_hdr:000000000040B494                 db 0CCh
.eh_frame_hdr:000000000040B495                 db    2
.eh_frame_hdr:000000000040B496                 db    0
.eh_frame_hdr:000000000040B497                 db    0
.eh_frame_hdr:000000000040B498                 db  7Fh ; 
.eh_frame_hdr:000000000040B499                 db  73h ; s
.eh_frame_hdr:000000000040B49A                 db 0FFh
.eh_frame_hdr:000000000040B49B                 db 0FFh
.eh_frame_hdr:000000000040B49C                 db 0F0h
.eh_frame_hdr:000000000040B49D                 db    2
.eh_frame_hdr:000000000040B49E                 db    0
.eh_frame_hdr:000000000040B49F                 db    0
.eh_frame_hdr:000000000040B4A0                 db 0C3h
.eh_frame_hdr:000000000040B4A1                 db  73h ; s
.eh_frame_hdr:000000000040B4A2                 db 0FFh
.eh_frame_hdr:000000000040B4A3                 db 0FFh
.eh_frame_hdr:000000000040B4A4                 db  10h
.eh_frame_hdr:000000000040B4A5                 db    3
.eh_frame_hdr:000000000040B4A6                 db    0
.eh_frame_hdr:000000000040B4A7                 db    0
.eh_frame_hdr:000000000040B4A8                 db  20h
.eh_frame_hdr:000000000040B4A9                 db  79h ; y
.eh_frame_hdr:000000000040B4AA                 db 0FFh
.eh_frame_hdr:000000000040B4AB                 db 0FFh
.eh_frame_hdr:000000000040B4AC                 db  30h ; 0
.eh_frame_hdr:000000000040B4AD                 db    3
.eh_frame_hdr:000000000040B4AE                 db    0
.eh_frame_hdr:000000000040B4AF                 db    0
.eh_frame_hdr:000000000040B4B0                 db  66h ; f
.eh_frame_hdr:000000000040B4B1                 db  7Ah ; z
.eh_frame_hdr:000000000040B4B2                 db 0FFh
.eh_frame_hdr:000000000040B4B3                 db 0FFh
.eh_frame_hdr:000000000040B4B4                 db  54h ; T
.eh_frame_hdr:000000000040B4B5                 db    3
.eh_frame_hdr:000000000040B4B6                 db    0
.eh_frame_hdr:000000000040B4B7                 db    0
.eh_frame_hdr:000000000040B4B8                 db  73h ; s
.eh_frame_hdr:000000000040B4B9                 db  80h
.eh_frame_hdr:000000000040B4BA                 db 0FFh
.eh_frame_hdr:000000000040B4BB                 db 0FFh
.eh_frame_hdr:000000000040B4BC                 db  74h ; t
.eh_frame_hdr:000000000040B4BD                 db    3
.eh_frame_hdr:000000000040B4BE                 db    0
.eh_frame_hdr:000000000040B4BF                 db    0
.eh_frame_hdr:000000000040B4C0                 db 0A3h
.eh_frame_hdr:000000000040B4C1                 db  80h
.eh_frame_hdr:000000000040B4C2                 db 0FFh
.eh_frame_hdr:000000000040B4C3                 db 0FFh
.eh_frame_hdr:000000000040B4C4                 db  94h
.eh_frame_hdr:000000000040B4C5                 db    3
.eh_frame_hdr:000000000040B4C6                 db    0
.eh_frame_hdr:000000000040B4C7                 db    0
.eh_frame_hdr:000000000040B4C8                 db 0BBh
.eh_frame_hdr:000000000040B4C9                 db  8Bh
.eh_frame_hdr:000000000040B4CA                 db 0FFh
.eh_frame_hdr:000000000040B4CB                 db 0FFh
.eh_frame_hdr:000000000040B4CC                 db 0B8h
.eh_frame_hdr:000000000040B4CD                 db    3
.eh_frame_hdr:000000000040B4CE                 db    0
.eh_frame_hdr:000000000040B4CF                 db    0
.eh_frame_hdr:000000000040B4D0                 db  54h ; T
.eh_frame_hdr:000000000040B4D1                 db  8Fh
.eh_frame_hdr:000000000040B4D2                 db 0FFh
.eh_frame_hdr:000000000040B4D3                 db 0FFh
.eh_frame_hdr:000000000040B4D4                 db 0D8h
.eh_frame_hdr:000000000040B4D5                 db    3
.eh_frame_hdr:000000000040B4D6                 db    0
.eh_frame_hdr:000000000040B4D7                 db    0
.eh_frame_hdr:000000000040B4D8                 db 0C4h
.eh_frame_hdr:000000000040B4D9                 db  9Bh
.eh_frame_hdr:000000000040B4DA                 db 0FFh
.eh_frame_hdr:000000000040B4DB                 db 0FFh
.eh_frame_hdr:000000000040B4DC                 db 0FCh
.eh_frame_hdr:000000000040B4DD                 db    3
.eh_frame_hdr:000000000040B4DE                 db    0
.eh_frame_hdr:000000000040B4DF                 db    0
.eh_frame_hdr:000000000040B4E0                 db  9Fh
.eh_frame_hdr:000000000040B4E1                 db 0D8h
.eh_frame_hdr:000000000040B4E2                 db 0FFh
.eh_frame_hdr:000000000040B4E3                 db 0FFh
.eh_frame_hdr:000000000040B4E4                 db  24h ; $
.eh_frame_hdr:000000000040B4E5                 db    4
.eh_frame_hdr:000000000040B4E6                 db    0
.eh_frame_hdr:000000000040B4E7                 db    0
.eh_frame_hdr:000000000040B4E8                 db 0F4h
.eh_frame_hdr:000000000040B4E9                 db 0D9h
.eh_frame_hdr:000000000040B4EA                 db 0FFh
.eh_frame_hdr:000000000040B4EB                 db 0FFh
.eh_frame_hdr:000000000040B4EC                 db  44h ; D
.eh_frame_hdr:000000000040B4ED                 db    4
.eh_frame_hdr:000000000040B4EE                 db    0
.eh_frame_hdr:000000000040B4EF                 db    0
.eh_frame_hdr:000000000040B4F0                 db  67h ; g
.eh_frame_hdr:000000000040B4F1                 db 0DBh
.eh_frame_hdr:000000000040B4F2                 db 0FFh
.eh_frame_hdr:000000000040B4F3                 db 0FFh
.eh_frame_hdr:000000000040B4F4                 db 0DCh
.eh_frame_hdr:000000000040B4F5                 db    1
.eh_frame_hdr:000000000040B4F6                 db    0
.eh_frame_hdr:000000000040B4F7                 db    0
.eh_frame_hdr:000000000040B4F8                 db  8Ch
.eh_frame_hdr:000000000040B4F9                 db 0DBh
.eh_frame_hdr:000000000040B4FA                 db 0FFh
.eh_frame_hdr:000000000040B4FB                 db 0FFh
.eh_frame_hdr:000000000040B4FC                 db  6Ch ; l
.eh_frame_hdr:000000000040B4FD                 db    4
.eh_frame_hdr:000000000040B4FE                 db    0
.eh_frame_hdr:000000000040B4FF                 db    0
.eh_frame_hdr:000000000040B500                 db  7Ch ; |
.eh_frame_hdr:000000000040B501                 db 0DFh
.eh_frame_hdr:000000000040B502                 db 0FFh
.eh_frame_hdr:000000000040B503                 db 0FFh
.eh_frame_hdr:000000000040B504                 db  8Ch
.eh_frame_hdr:000000000040B505                 db    4
.eh_frame_hdr:000000000040B506                 db    0
.eh_frame_hdr:000000000040B507                 db    0
.eh_frame_hdr:000000000040B508                 db 0AEh
.eh_frame_hdr:000000000040B509                 db 0DFh
.eh_frame_hdr:000000000040B50A                 db 0FFh
.eh_frame_hdr:000000000040B50B                 db 0FFh
.eh_frame_hdr:000000000040B50C                 db 0ECh
.eh_frame_hdr:000000000040B50D                 db    4
.eh_frame_hdr:000000000040B50E                 db    0
.eh_frame_hdr:000000000040B50F                 db    0
.eh_frame_hdr:000000000040B510                 db    2
.eh_frame_hdr:000000000040B511                 db 0E3h
.eh_frame_hdr:000000000040B512                 db 0FFh
.eh_frame_hdr:000000000040B513                 db 0FFh
.eh_frame_hdr:000000000040B514                 db  10h
.eh_frame_hdr:000000000040B515                 db    5
.eh_frame_hdr:000000000040B516                 db    0
.eh_frame_hdr:000000000040B517                 db    0
.eh_frame_hdr:000000000040B518                 db  4Bh ; K
.eh_frame_hdr:000000000040B519                 db 0E3h
.eh_frame_hdr:000000000040B51A                 db 0FFh
.eh_frame_hdr:000000000040B51B                 db 0FFh
.eh_frame_hdr:000000000040B51C                 db  30h ; 0
.eh_frame_hdr:000000000040B51D                 db    5
.eh_frame_hdr:000000000040B51E                 db    0
.eh_frame_hdr:000000000040B51F                 db    0
.eh_frame_hdr:000000000040B520                 db  60h ; `
.eh_frame_hdr:000000000040B521                 db 0E3h
.eh_frame_hdr:000000000040B522                 db 0FFh
.eh_frame_hdr:000000000040B523                 db 0FFh
.eh_frame_hdr:000000000040B524                 db 0ACh
.eh_frame_hdr:000000000040B525                 db    4
.eh_frame_hdr:000000000040B526                 db    0
.eh_frame_hdr:000000000040B527                 db    0
.eh_frame_hdr:000000000040B528                 db  8Bh
.eh_frame_hdr:000000000040B529                 db 0E3h
.eh_frame_hdr:000000000040B52A                 db 0FFh
.eh_frame_hdr:000000000040B52B                 db 0FFh
.eh_frame_hdr:000000000040B52C                 db 0CCh
.eh_frame_hdr:000000000040B52D                 db    4
.eh_frame_hdr:000000000040B52E                 db    0
.eh_frame_hdr:000000000040B52F                 db    0
.eh_frame_hdr:000000000040B530                 db 0B6h
.eh_frame_hdr:000000000040B531                 db 0E3h
.eh_frame_hdr:000000000040B532                 db 0FFh
.eh_frame_hdr:000000000040B533                 db 0FFh
.eh_frame_hdr:000000000040B534                 db  54h ; T
.eh_frame_hdr:000000000040B535                 db    5
.eh_frame_hdr:000000000040B536                 db    0
.eh_frame_hdr:000000000040B537                 db    0
.eh_frame_hdr:000000000040B538                 db  24h ; $
.eh_frame_hdr:000000000040B539                 db 0EAh
.eh_frame_hdr:000000000040B53A                 db 0FFh
.eh_frame_hdr:000000000040B53B                 db 0FFh
.eh_frame_hdr:000000000040B53C                 db  74h ; t
.eh_frame_hdr:000000000040B53D                 db    5
.eh_frame_hdr:000000000040B53E                 db    0
.eh_frame_hdr:000000000040B53F                 db    0
.eh_frame_hdr:000000000040B540                 db 0FFh
.eh_frame_hdr:000000000040B541                 db 0EBh
.eh_frame_hdr:000000000040B542                 db 0FFh
.eh_frame_hdr:000000000040B543                 db 0FFh
.eh_frame_hdr:000000000040B544                 db  98h
.eh_frame_hdr:000000000040B545                 db    5
.eh_frame_hdr:000000000040B546                 db    0
.eh_frame_hdr:000000000040B547                 db    0
.eh_frame_hdr:000000000040B548                 db  38h ; 8
.eh_frame_hdr:000000000040B549                 db 0ECh
.eh_frame_hdr:000000000040B54A                 db 0FFh
.eh_frame_hdr:000000000040B54B                 db 0FFh
.eh_frame_hdr:000000000040B54C                 db 0B8h
.eh_frame_hdr:000000000040B54D                 db    5
.eh_frame_hdr:000000000040B54E                 db    0
.eh_frame_hdr:000000000040B54F                 db    0
.eh_frame_hdr:000000000040B550                 db 0C7h
.eh_frame_hdr:000000000040B551                 db 0ECh
.eh_frame_hdr:000000000040B552                 db 0FFh
.eh_frame_hdr:000000000040B553                 db 0FFh
.eh_frame_hdr:000000000040B554                 db 0DCh
.eh_frame_hdr:000000000040B555                 db    5
.eh_frame_hdr:000000000040B556                 db    0
.eh_frame_hdr:000000000040B557                 db    0
.eh_frame_hdr:000000000040B558                 db  5Eh ; ^
.eh_frame_hdr:000000000040B559                 db 0EEh
.eh_frame_hdr:000000000040B55A                 db 0FFh
.eh_frame_hdr:000000000040B55B                 db 0FFh
.eh_frame_hdr:000000000040B55C                 db 0FCh
.eh_frame_hdr:000000000040B55D                 db    5
.eh_frame_hdr:000000000040B55E                 db    0
.eh_frame_hdr:000000000040B55F                 db    0
.eh_frame_hdr:000000000040B560                 db 0EFh
.eh_frame_hdr:000000000040B561                 db 0EFh
.eh_frame_hdr:000000000040B562                 db 0FFh
.eh_frame_hdr:000000000040B563                 db 0FFh
.eh_frame_hdr:000000000040B564                 db  1Ch
.eh_frame_hdr:000000000040B565                 db    6
.eh_frame_hdr:000000000040B566                 db    0
.eh_frame_hdr:000000000040B567                 db    0
.eh_frame_hdr:000000000040B568                 db  6Ch ; l
.eh_frame_hdr:000000000040B569                 db 0F1h
.eh_frame_hdr:000000000040B56A                 db 0FFh
.eh_frame_hdr:000000000040B56B                 db 0FFh
.eh_frame_hdr:000000000040B56C                 db  3Ch ; <
.eh_frame_hdr:000000000040B56D                 db    6
.eh_frame_hdr:000000000040B56E                 db    0
.eh_frame_hdr:000000000040B56F                 db    0
.eh_frame_hdr:000000000040B570                 db 0C4h
.eh_frame_hdr:000000000040B571                 db 0F1h
.eh_frame_hdr:000000000040B572                 db 0FFh
.eh_frame_hdr:000000000040B573                 db 0FFh
.eh_frame_hdr:000000000040B574                 db  5Ch ; \
.eh_frame_hdr:000000000040B575                 db    6
.eh_frame_hdr:000000000040B576                 db    0
.eh_frame_hdr:000000000040B577                 db    0
.eh_frame_hdr:000000000040B578                 db 0FCh
.eh_frame_hdr:000000000040B579                 db 0F2h
.eh_frame_hdr:000000000040B57A                 db 0FFh
.eh_frame_hdr:000000000040B57B                 db 0FFh
.eh_frame_hdr:000000000040B57C                 db  7Ch ; |
.eh_frame_hdr:000000000040B57D                 db    6
.eh_frame_hdr:000000000040B57E                 db    0
.eh_frame_hdr:000000000040B57F                 db    0
.eh_frame_hdr:000000000040B580                 db  7Fh ; 
.eh_frame_hdr:000000000040B581                 db 0F4h
.eh_frame_hdr:000000000040B582                 db 0FFh
.eh_frame_hdr:000000000040B583                 db 0FFh
.eh_frame_hdr:000000000040B584                 db 0A0h
.eh_frame_hdr:000000000040B585                 db    6
.eh_frame_hdr:000000000040B586                 db    0
.eh_frame_hdr:000000000040B587                 db    0
.eh_frame_hdr:000000000040B588                 db 0FDh
.eh_frame_hdr:000000000040B589                 db 0F7h
.eh_frame_hdr:000000000040B58A                 db 0FFh
.eh_frame_hdr:000000000040B58B                 db 0FFh
.eh_frame_hdr:000000000040B58C                 db 0C0h
.eh_frame_hdr:000000000040B58D                 db    6
.eh_frame_hdr:000000000040B58E                 db    0
.eh_frame_hdr:000000000040B58F                 db    0
.eh_frame_hdr:000000000040B590                 db  3Dh ; =
.eh_frame_hdr:000000000040B591                 db 0F8h
.eh_frame_hdr:000000000040B592                 db 0FFh
.eh_frame_hdr:000000000040B593                 db 0FFh
.eh_frame_hdr:000000000040B594                 db 0E4h
.eh_frame_hdr:000000000040B595                 db    6
.eh_frame_hdr:000000000040B596                 db    0
.eh_frame_hdr:000000000040B597                 db    0
.eh_frame_hdr:000000000040B598                 db  56h ; V
.eh_frame_hdr:000000000040B599                 db 0F8h
.eh_frame_hdr:000000000040B59A                 db 0FFh
.eh_frame_hdr:000000000040B59B                 db 0FFh
.eh_frame_hdr:000000000040B59C                 db    4
.eh_frame_hdr:000000000040B59D                 db    7
.eh_frame_hdr:000000000040B59E                 db    0
.eh_frame_hdr:000000000040B59F                 db    0
.eh_frame_hdr:000000000040B5A0                 db  0Ch
.eh_frame_hdr:000000000040B5A1                 db 0FAh
.eh_frame_hdr:000000000040B5A2                 db 0FFh
.eh_frame_hdr:000000000040B5A3                 db 0FFh
.eh_frame_hdr:000000000040B5A4                 db  24h ; $
.eh_frame_hdr:000000000040B5A5                 db    7
.eh_frame_hdr:000000000040B5A6                 db    0
.eh_frame_hdr:000000000040B5A7                 db    0
.eh_frame_hdr:000000000040B5A8                 db  7Ch ; |
.eh_frame_hdr:000000000040B5A9                 db 0FAh
.eh_frame_hdr:000000000040B5AA                 db 0FFh
.eh_frame_hdr:000000000040B5AB                 db 0FFh
.eh_frame_hdr:000000000040B5AC                 db  6Ch ; l
.eh_frame_hdr:000000000040B5AD                 db    7
.eh_frame_hdr:000000000040B5AE                 db    0
.eh_frame_hdr:000000000040B5AF                 db    0
.eh_frame_hdr:000000000040B5AF _eh_frame_hdr   ends
.eh_frame_hdr:000000000040B5AF
.eh_frame:000000000040B5B0 ; ===========================================================================
.eh_frame:000000000040B5B0
.eh_frame:000000000040B5B0 ; Segment type: Pure data
.eh_frame:000000000040B5B0 ; Segment permissions: Read
.eh_frame:000000000040B5B0 ; Segment alignment 'qword' can not be represented in assembly
.eh_frame:000000000040B5B0 _eh_frame       segment para public 'CONST' use64
.eh_frame:000000000040B5B0                 assume cs:_eh_frame
.eh_frame:000000000040B5B0                 ;org 40B5B0h
.eh_frame:000000000040B5B0                 db  14h
.eh_frame:000000000040B5B1                 db    0
.eh_frame:000000000040B5B2                 db    0
.eh_frame:000000000040B5B3                 db    0
.eh_frame:000000000040B5B4                 db    0
.eh_frame:000000000040B5B5                 db    0
.eh_frame:000000000040B5B6                 db    0
.eh_frame:000000000040B5B7                 db    0
.eh_frame:000000000040B5B8                 db    1
.eh_frame:000000000040B5B9                 db  7Ah ; z
.eh_frame:000000000040B5BA                 db  52h ; R
.eh_frame:000000000040B5BB                 db    0
.eh_frame:000000000040B5BC                 db    1
.eh_frame:000000000040B5BD                 db  78h ; x
.eh_frame:000000000040B5BE                 db  10h
.eh_frame:000000000040B5BF                 db    1
.eh_frame:000000000040B5C0                 db  1Bh
.eh_frame:000000000040B5C1                 db  0Ch
.eh_frame:000000000040B5C2                 db    7
.eh_frame:000000000040B5C3                 db    8
.eh_frame:000000000040B5C4                 db  90h
.eh_frame:000000000040B5C5                 db    1
.eh_frame:000000000040B5C6                 db    7
.eh_frame:000000000040B5C7                 db  10h
.eh_frame:000000000040B5C8                 db  14h
.eh_frame:000000000040B5C9                 db    0
.eh_frame:000000000040B5CA                 db    0
.eh_frame:000000000040B5CB                 db    0
.eh_frame:000000000040B5CC                 db  1Ch
.eh_frame:000000000040B5CD                 db    0
.eh_frame:000000000040B5CE                 db    0
.eh_frame:000000000040B5CF                 db    0
.eh_frame:000000000040B5D0                 db 0F0h
.eh_frame:000000000040B5D1                 db  54h ; T
.eh_frame:000000000040B5D2                 db 0FFh
.eh_frame:000000000040B5D3                 db 0FFh
.eh_frame:000000000040B5D4                 db  2Bh ; +
.eh_frame:000000000040B5D5                 db    0
.eh_frame:000000000040B5D6                 db    0
.eh_frame:000000000040B5D7                 db    0
.eh_frame:000000000040B5D8                 db    0
.eh_frame:000000000040B5D9                 db    0
.eh_frame:000000000040B5DA                 db    0
.eh_frame:000000000040B5DB                 db    0
.eh_frame:000000000040B5DC                 db    0
.eh_frame:000000000040B5DD                 db    0
.eh_frame:000000000040B5DE                 db    0
.eh_frame:000000000040B5DF                 db    0
.eh_frame:000000000040B5E0                 db  14h
.eh_frame:000000000040B5E1                 db    0
.eh_frame:000000000040B5E2                 db    0
.eh_frame:000000000040B5E3                 db    0
.eh_frame:000000000040B5E4                 db    0
.eh_frame:000000000040B5E5                 db    0
.eh_frame:000000000040B5E6                 db    0
.eh_frame:000000000040B5E7                 db    0
.eh_frame:000000000040B5E8                 db    1
.eh_frame:000000000040B5E9                 db  7Ah ; z
.eh_frame:000000000040B5EA                 db  52h ; R
.eh_frame:000000000040B5EB                 db    0
.eh_frame:000000000040B5EC                 db    1
.eh_frame:000000000040B5ED                 db  78h ; x
.eh_frame:000000000040B5EE                 db  10h
.eh_frame:000000000040B5EF                 db    1
.eh_frame:000000000040B5F0                 db  1Bh
.eh_frame:000000000040B5F1                 db  0Ch
.eh_frame:000000000040B5F2                 db    7
.eh_frame:000000000040B5F3                 db    8
.eh_frame:000000000040B5F4                 db  90h
.eh_frame:000000000040B5F5                 db    1
.eh_frame:000000000040B5F6                 db    0
.eh_frame:000000000040B5F7                 db    0
.eh_frame:000000000040B5F8                 db  24h ; $
.eh_frame:000000000040B5F9                 db    0
.eh_frame:000000000040B5FA                 db    0
.eh_frame:000000000040B5FB                 db    0
.eh_frame:000000000040B5FC                 db  1Ch
.eh_frame:000000000040B5FD                 db    0
.eh_frame:000000000040B5FE                 db    0
.eh_frame:000000000040B5FF                 db    0
.eh_frame:000000000040B600                 db  80h
.eh_frame:000000000040B601                 db  53h ; S
.eh_frame:000000000040B602                 db 0FFh
.eh_frame:000000000040B603                 db 0FFh
.eh_frame:000000000040B604                 db  40h ; @
.eh_frame:000000000040B605                 db    1
.eh_frame:000000000040B606                 db    0
.eh_frame:000000000040B607                 db    0
.eh_frame:000000000040B608                 db    0
.eh_frame:000000000040B609                 db  0Eh
.eh_frame:000000000040B60A                 db  10h
.eh_frame:000000000040B60B                 db  46h ; F
.eh_frame:000000000040B60C                 db  0Eh
.eh_frame:000000000040B60D                 db  18h
.eh_frame:000000000040B60E                 db  4Ah ; J
.eh_frame:000000000040B60F                 db  0Fh
.eh_frame:000000000040B610                 db  0Bh
.eh_frame:000000000040B611                 db  77h ; w
.eh_frame:000000000040B612                 db    8
.eh_frame:000000000040B613                 db  80h
.eh_frame:000000000040B614                 db    0
.eh_frame:000000000040B615                 db  3Fh ; ?
.eh_frame:000000000040B616                 db  1Ah
.eh_frame:000000000040B617                 db  3Bh ; ;
.eh_frame:000000000040B618                 db  2Ah ; *
.eh_frame:000000000040B619                 db  33h ; 3
.eh_frame:000000000040B61A                 db  24h ; $
.eh_frame:000000000040B61B                 db  22h ; "
.eh_frame:000000000040B61C                 db    0
.eh_frame:000000000040B61D                 db    0
.eh_frame:000000000040B61E                 db    0
.eh_frame:000000000040B61F                 db    0
.eh_frame:000000000040B620                 db  1Ch
.eh_frame:000000000040B621                 db    0
.eh_frame:000000000040B622                 db    0
.eh_frame:000000000040B623                 db    0
.eh_frame:000000000040B624                 db  44h ; D
.eh_frame:000000000040B625                 db    0
.eh_frame:000000000040B626                 db    0
.eh_frame:000000000040B627                 db    0
.eh_frame:000000000040B628                 db  83h
.eh_frame:000000000040B629                 db 0D9h
.eh_frame:000000000040B62A                 db 0FFh
.eh_frame:000000000040B62B                 db 0FFh
.eh_frame:000000000040B62C                 db  25h ; %
.eh_frame:000000000040B62D                 db    0
.eh_frame:000000000040B62E                 db    0
.eh_frame:000000000040B62F                 db    0
.eh_frame:000000000040B630                 db    0
.eh_frame:000000000040B631                 db  41h ; A
.eh_frame:000000000040B632                 db  0Eh
.eh_frame:000000000040B633                 db  10h
.eh_frame:000000000040B634                 db  86h
.eh_frame:000000000040B635                 db    2
.eh_frame:000000000040B636                 db  43h ; C
.eh_frame:000000000040B637                 db  0Dh
.eh_frame:000000000040B638                 db    6
.eh_frame:000000000040B639                 db  60h ; `
.eh_frame:000000000040B63A                 db  0Ch
.eh_frame:000000000040B63B                 db    7
.eh_frame:000000000040B63C                 db    8
.eh_frame:000000000040B63D                 db    0
.eh_frame:000000000040B63E                 db    0
.eh_frame:000000000040B63F                 db    0
.eh_frame:000000000040B640                 db  1Ch
.eh_frame:000000000040B641                 db    0
.eh_frame:000000000040B642                 db    0
.eh_frame:000000000040B643                 db    0
.eh_frame:000000000040B644                 db  64h ; d
.eh_frame:000000000040B645                 db    0
.eh_frame:000000000040B646                 db    0
.eh_frame:000000000040B647                 db    0
.eh_frame:000000000040B648                 db  4Fh ; O
.eh_frame:000000000040B649                 db  55h ; U
.eh_frame:000000000040B64A                 db 0FFh
.eh_frame:000000000040B64B                 db 0FFh
.eh_frame:000000000040B64C                 db  56h ; V
.eh_frame:000000000040B64D                 db    1
.eh_frame:000000000040B64E                 db    0
.eh_frame:000000000040B64F                 db    0
.eh_frame:000000000040B650                 db    0
.eh_frame:000000000040B651                 db  41h ; A
.eh_frame:000000000040B652                 db  0Eh
.eh_frame:000000000040B653                 db  10h
.eh_frame:000000000040B654                 db  86h
.eh_frame:000000000040B655                 db    2
.eh_frame:000000000040B656                 db  43h ; C
.eh_frame:000000000040B657                 db  0Dh
.eh_frame:000000000040B658                 db    6
.eh_frame:000000000040B659                 db    3
.eh_frame:000000000040B65A                 db  51h ; Q
.eh_frame:000000000040B65B                 db    1
.eh_frame:000000000040B65C                 db  0Ch
.eh_frame:000000000040B65D                 db    7
.eh_frame:000000000040B65E                 db    8
.eh_frame:000000000040B65F                 db    0
.eh_frame:000000000040B660                 db  20h
.eh_frame:000000000040B661                 db    0
.eh_frame:000000000040B662                 db    0
.eh_frame:000000000040B663                 db    0
.eh_frame:000000000040B664                 db  84h
.eh_frame:000000000040B665                 db    0
.eh_frame:000000000040B666                 db    0
.eh_frame:000000000040B667                 db    0
.eh_frame:000000000040B668                 db  85h
.eh_frame:000000000040B669                 db  56h ; V
.eh_frame:000000000040B66A                 db 0FFh
.eh_frame:000000000040B66B                 db 0FFh
.eh_frame:000000000040B66C                 db 0F3h
.eh_frame:000000000040B66D                 db    8
.eh_frame:000000000040B66E                 db    0
.eh_frame:000000000040B66F                 db    0
.eh_frame:000000000040B670                 db    0
.eh_frame:000000000040B671                 db  41h ; A
.eh_frame:000000000040B672                 db  0Eh
.eh_frame:000000000040B673                 db  10h
.eh_frame:000000000040B674                 db  86h
.eh_frame:000000000040B675                 db    2
.eh_frame:000000000040B676                 db  43h ; C
.eh_frame:000000000040B677                 db  0Dh
.eh_frame:000000000040B678                 db    6
.eh_frame:000000000040B679                 db  4Ah ; J
.eh_frame:000000000040B67A                 db  8Ch
.eh_frame:000000000040B67B                 db    3
.eh_frame:000000000040B67C                 db  83h
.eh_frame:000000000040B67D                 db    4
.eh_frame:000000000040B67E                 db    3
.eh_frame:000000000040B67F                 db 0E4h
.eh_frame:000000000040B680                 db    8
.eh_frame:000000000040B681                 db  0Ch
.eh_frame:000000000040B682                 db    7
.eh_frame:000000000040B683                 db    8
.eh_frame:000000000040B684                 db  20h
.eh_frame:000000000040B685                 db    0
.eh_frame:000000000040B686                 db    0
.eh_frame:000000000040B687                 db    0
.eh_frame:000000000040B688                 db 0A8h
.eh_frame:000000000040B689                 db    0
.eh_frame:000000000040B68A                 db    0
.eh_frame:000000000040B68B                 db    0
.eh_frame:000000000040B68C                 db  54h ; T
.eh_frame:000000000040B68D                 db  5Fh ; _
.eh_frame:000000000040B68E                 db 0FFh
.eh_frame:000000000040B68F                 db 0FFh
.eh_frame:000000000040B690                 db 0C0h
.eh_frame:000000000040B691                 db    3
.eh_frame:000000000040B692                 db    0
.eh_frame:000000000040B693                 db    0
.eh_frame:000000000040B694                 db    0
.eh_frame:000000000040B695                 db  41h ; A
.eh_frame:000000000040B696                 db  0Eh
.eh_frame:000000000040B697                 db  10h
.eh_frame:000000000040B698                 db  86h
.eh_frame:000000000040B699                 db    2
.eh_frame:000000000040B69A                 db  43h ; C
.eh_frame:000000000040B69B                 db  0Dh
.eh_frame:000000000040B69C                 db    6
.eh_frame:000000000040B69D                 db  4Ah ; J
.eh_frame:000000000040B69E                 db  8Ch
.eh_frame:000000000040B69F                 db    3
.eh_frame:000000000040B6A0                 db  83h
.eh_frame:000000000040B6A1                 db    4
.eh_frame:000000000040B6A2                 db    3
.eh_frame:000000000040B6A3                 db 0B1h
.eh_frame:000000000040B6A4                 db    3
.eh_frame:000000000040B6A5                 db  0Ch
.eh_frame:000000000040B6A6                 db    7
.eh_frame:000000000040B6A7                 db    8
.eh_frame:000000000040B6A8                 db  20h
.eh_frame:000000000040B6A9                 db    0
.eh_frame:000000000040B6AA                 db    0
.eh_frame:000000000040B6AB                 db    0
.eh_frame:000000000040B6AC                 db 0CCh
.eh_frame:000000000040B6AD                 db    0
.eh_frame:000000000040B6AE                 db    0
.eh_frame:000000000040B6AF                 db    0
.eh_frame:000000000040B6B0                 db 0F0h
.eh_frame:000000000040B6B1                 db  62h ; b
.eh_frame:000000000040B6B2                 db 0FFh
.eh_frame:000000000040B6B3                 db 0FFh
.eh_frame:000000000040B6B4                 db 0E4h
.eh_frame:000000000040B6B5                 db    1
.eh_frame:000000000040B6B6                 db    0
.eh_frame:000000000040B6B7                 db    0
.eh_frame:000000000040B6B8                 db    0
.eh_frame:000000000040B6B9                 db  41h ; A
.eh_frame:000000000040B6BA                 db  0Eh
.eh_frame:000000000040B6BB                 db  10h
.eh_frame:000000000040B6BC                 db  86h
.eh_frame:000000000040B6BD                 db    2
.eh_frame:000000000040B6BE                 db  43h ; C
.eh_frame:000000000040B6BF                 db  0Dh
.eh_frame:000000000040B6C0                 db    6
.eh_frame:000000000040B6C1                 db  45h ; E
.eh_frame:000000000040B6C2                 db  83h
.eh_frame:000000000040B6C3                 db    3
.eh_frame:000000000040B6C4                 db    3
.eh_frame:000000000040B6C5                 db 0DAh
.eh_frame:000000000040B6C6                 db    1
.eh_frame:000000000040B6C7                 db  0Ch
.eh_frame:000000000040B6C8                 db    7
.eh_frame:000000000040B6C9                 db    8
.eh_frame:000000000040B6CA                 db    0
.eh_frame:000000000040B6CB                 db    0
.eh_frame:000000000040B6CC                 db  1Ch
.eh_frame:000000000040B6CD                 db    0
.eh_frame:000000000040B6CE                 db    0
.eh_frame:000000000040B6CF                 db    0
.eh_frame:000000000040B6D0                 db 0F0h
.eh_frame:000000000040B6D1                 db    0
.eh_frame:000000000040B6D2                 db    0
.eh_frame:000000000040B6D3                 db    0
.eh_frame:000000000040B6D4                 db 0B0h
.eh_frame:000000000040B6D5                 db  64h ; d
.eh_frame:000000000040B6D6                 db 0FFh
.eh_frame:000000000040B6D7                 db 0FFh
.eh_frame:000000000040B6D8                 db 0A7h
.eh_frame:000000000040B6D9                 db    0
.eh_frame:000000000040B6DA                 db    0
.eh_frame:000000000040B6DB                 db    0
.eh_frame:000000000040B6DC                 db    0
.eh_frame:000000000040B6DD                 db  41h ; A
.eh_frame:000000000040B6DE                 db  0Eh
.eh_frame:000000000040B6DF                 db  10h
.eh_frame:000000000040B6E0                 db  86h
.eh_frame:000000000040B6E1                 db    2
.eh_frame:000000000040B6E2                 db  43h ; C
.eh_frame:000000000040B6E3                 db  0Dh
.eh_frame:000000000040B6E4                 db    6
.eh_frame:000000000040B6E5                 db    2
.eh_frame:000000000040B6E6                 db 0A2h
.eh_frame:000000000040B6E7                 db  0Ch
.eh_frame:000000000040B6E8                 db    7
.eh_frame:000000000040B6E9                 db    8
.eh_frame:000000000040B6EA                 db    0
.eh_frame:000000000040B6EB                 db    0
.eh_frame:000000000040B6EC                 db  20h
.eh_frame:000000000040B6ED                 db    0
.eh_frame:000000000040B6EE                 db    0
.eh_frame:000000000040B6EF                 db    0
.eh_frame:000000000040B6F0                 db  10h
.eh_frame:000000000040B6F1                 db    1
.eh_frame:000000000040B6F2                 db    0
.eh_frame:000000000040B6F3                 db    0
.eh_frame:000000000040B6F4                 db  37h ; 7
.eh_frame:000000000040B6F5                 db  65h ; e
.eh_frame:000000000040B6F6                 db 0FFh
.eh_frame:000000000040B6F7                 db 0FFh
.eh_frame:000000000040B6F8                 db 0A8h
.eh_frame:000000000040B6F9                 db    3
.eh_frame:000000000040B6FA                 db    0
.eh_frame:000000000040B6FB                 db    0
.eh_frame:000000000040B6FC                 db    0
.eh_frame:000000000040B6FD                 db  41h ; A
.eh_frame:000000000040B6FE                 db  0Eh
.eh_frame:000000000040B6FF                 db  10h
.eh_frame:000000000040B700                 db  86h
.eh_frame:000000000040B701                 db    2
.eh_frame:000000000040B702                 db  43h ; C
.eh_frame:000000000040B703                 db  0Dh
.eh_frame:000000000040B704                 db    6
.eh_frame:000000000040B705                 db  47h ; G
.eh_frame:000000000040B706                 db  8Ch
.eh_frame:000000000040B707                 db    3
.eh_frame:000000000040B708                 db  83h
.eh_frame:000000000040B709                 db    4
.eh_frame:000000000040B70A                 db    3
.eh_frame:000000000040B70B                 db  9Ch
.eh_frame:000000000040B70C                 db    3
.eh_frame:000000000040B70D                 db  0Ch
.eh_frame:000000000040B70E                 db    7
.eh_frame:000000000040B70F                 db    8
.eh_frame:000000000040B710                 db  20h
.eh_frame:000000000040B711                 db    0
.eh_frame:000000000040B712                 db    0
.eh_frame:000000000040B713                 db    0
.eh_frame:000000000040B714                 db  34h ; 4
.eh_frame:000000000040B715                 db    1
.eh_frame:000000000040B716                 db    0
.eh_frame:000000000040B717                 db    0
.eh_frame:000000000040B718                 db 0BBh
.eh_frame:000000000040B719                 db  68h ; h
.eh_frame:000000000040B71A                 db 0FFh
.eh_frame:000000000040B71B                 db 0FFh
.eh_frame:000000000040B71C                 db 0F0h
.eh_frame:000000000040B71D                 db    7
.eh_frame:000000000040B71E                 db    0
.eh_frame:000000000040B71F                 db    0
.eh_frame:000000000040B720                 db    0
.eh_frame:000000000040B721                 db  41h ; A
.eh_frame:000000000040B722                 db  0Eh
.eh_frame:000000000040B723                 db  10h
.eh_frame:000000000040B724                 db  86h
.eh_frame:000000000040B725                 db    2
.eh_frame:000000000040B726                 db  43h ; C
.eh_frame:000000000040B727                 db  0Dh
.eh_frame:000000000040B728                 db    6
.eh_frame:000000000040B729                 db  48h ; H
.eh_frame:000000000040B72A                 db  83h
.eh_frame:000000000040B72B                 db    3
.eh_frame:000000000040B72C                 db    3
.eh_frame:000000000040B72D                 db 0E3h
.eh_frame:000000000040B72E                 db    7
.eh_frame:000000000040B72F                 db  0Ch
.eh_frame:000000000040B730                 db    7
.eh_frame:000000000040B731                 db    8
.eh_frame:000000000040B732                 db    0
.eh_frame:000000000040B733                 db    0
.eh_frame:000000000040B734                 db  1Ch
.eh_frame:000000000040B735                 db    0
.eh_frame:000000000040B736                 db    0
.eh_frame:000000000040B737                 db    0
.eh_frame:000000000040B738                 db  58h ; X
.eh_frame:000000000040B739                 db    1
.eh_frame:000000000040B73A                 db    0
.eh_frame:000000000040B73B                 db    0
.eh_frame:000000000040B73C                 db  87h
.eh_frame:000000000040B73D                 db  70h ; p
.eh_frame:000000000040B73E                 db 0FFh
.eh_frame:000000000040B73F                 db 0FFh
.eh_frame:000000000040B740                 db  44h ; D
.eh_frame:000000000040B741                 db    0
.eh_frame:000000000040B742                 db    0
.eh_frame:000000000040B743                 db    0
.eh_frame:000000000040B744                 db    0
.eh_frame:000000000040B745                 db  41h ; A
.eh_frame:000000000040B746                 db  0Eh
.eh_frame:000000000040B747                 db  10h
.eh_frame:000000000040B748                 db  86h
.eh_frame:000000000040B749                 db    2
.eh_frame:000000000040B74A                 db  43h ; C
.eh_frame:000000000040B74B                 db  0Dh
.eh_frame:000000000040B74C                 db    6
.eh_frame:000000000040B74D                 db  7Fh ; 
.eh_frame:000000000040B74E                 db  0Ch
.eh_frame:000000000040B74F                 db    7
.eh_frame:000000000040B750                 db    8
.eh_frame:000000000040B751                 db    0
.eh_frame:000000000040B752                 db    0
.eh_frame:000000000040B753                 db    0
.eh_frame:000000000040B754                 db  1Ch
.eh_frame:000000000040B755                 db    0
.eh_frame:000000000040B756                 db    0
.eh_frame:000000000040B757                 db    0
.eh_frame:000000000040B758                 db  78h ; x
.eh_frame:000000000040B759                 db    1
.eh_frame:000000000040B75A                 db    0
.eh_frame:000000000040B75B                 db    0
.eh_frame:000000000040B75C                 db 0ABh
.eh_frame:000000000040B75D                 db  70h ; p
.eh_frame:000000000040B75E                 db 0FFh
.eh_frame:000000000040B75F                 db 0FFh
.eh_frame:000000000040B760                 db  5Dh ; ]
.eh_frame:000000000040B761                 db    5
.eh_frame:000000000040B762                 db    0
.eh_frame:000000000040B763                 db    0
.eh_frame:000000000040B764                 db    0
.eh_frame:000000000040B765                 db  41h ; A
.eh_frame:000000000040B766                 db  0Eh
.eh_frame:000000000040B767                 db  10h
.eh_frame:000000000040B768                 db  86h
.eh_frame:000000000040B769                 db    2
.eh_frame:000000000040B76A                 db  43h ; C
.eh_frame:000000000040B76B                 db  0Dh
.eh_frame:000000000040B76C                 db    6
.eh_frame:000000000040B76D                 db    3
.eh_frame:000000000040B76E                 db  58h ; X
.eh_frame:000000000040B76F                 db    5
.eh_frame:000000000040B770                 db  0Ch
.eh_frame:000000000040B771                 db    7
.eh_frame:000000000040B772                 db    8
.eh_frame:000000000040B773                 db    0
.eh_frame:000000000040B774                 db  20h
.eh_frame:000000000040B775                 db    0
.eh_frame:000000000040B776                 db    0
.eh_frame:000000000040B777                 db    0
.eh_frame:000000000040B778                 db  98h
.eh_frame:000000000040B779                 db    1
.eh_frame:000000000040B77A                 db    0
.eh_frame:000000000040B77B                 db    0
.eh_frame:000000000040B77C                 db 0E8h
.eh_frame:000000000040B77D                 db  75h ; u
.eh_frame:000000000040B77E                 db 0FFh
.eh_frame:000000000040B77F                 db 0FFh
.eh_frame:000000000040B780                 db  46h ; F
.eh_frame:000000000040B781                 db    1
.eh_frame:000000000040B782                 db    0
.eh_frame:000000000040B783                 db    0
.eh_frame:000000000040B784                 db    0
.eh_frame:000000000040B785                 db  41h ; A
.eh_frame:000000000040B786                 db  0Eh
.eh_frame:000000000040B787                 db  10h
.eh_frame:000000000040B788                 db  86h
.eh_frame:000000000040B789                 db    2
.eh_frame:000000000040B78A                 db  43h ; C
.eh_frame:000000000040B78B                 db  0Dh
.eh_frame:000000000040B78C                 db    6
.eh_frame:000000000040B78D                 db  45h ; E
.eh_frame:000000000040B78E                 db  83h
.eh_frame:000000000040B78F                 db    3
.eh_frame:000000000040B790                 db    3
.eh_frame:000000000040B791                 db  3Ch ; <
.eh_frame:000000000040B792                 db    1
.eh_frame:000000000040B793                 db  0Ch
.eh_frame:000000000040B794                 db    7
.eh_frame:000000000040B795                 db    8
.eh_frame:000000000040B796                 db    0
.eh_frame:000000000040B797                 db    0
.eh_frame:000000000040B798                 db  1Ch
.eh_frame:000000000040B799                 db    0
.eh_frame:000000000040B79A                 db    0
.eh_frame:000000000040B79B                 db    0
.eh_frame:000000000040B79C                 db 0BCh
.eh_frame:000000000040B79D                 db    1
.eh_frame:000000000040B79E                 db    0
.eh_frame:000000000040B79F                 db    0
.eh_frame:000000000040B7A0                 db  0Ah
.eh_frame:000000000040B7A1                 db  77h ; w
.eh_frame:000000000040B7A2                 db 0FFh
.eh_frame:000000000040B7A3                 db 0FFh
.eh_frame:000000000040B7A4                 db  0Dh
.eh_frame:000000000040B7A5                 db    6
.eh_frame:000000000040B7A6                 db    0
.eh_frame:000000000040B7A7                 db    0
.eh_frame:000000000040B7A8                 db    0
.eh_frame:000000000040B7A9                 db  41h ; A
.eh_frame:000000000040B7AA                 db  0Eh
.eh_frame:000000000040B7AB                 db  10h
.eh_frame:000000000040B7AC                 db  86h
.eh_frame:000000000040B7AD                 db    2
.eh_frame:000000000040B7AE                 db  43h ; C
.eh_frame:000000000040B7AF                 db  0Dh
.eh_frame:000000000040B7B0                 db    6
.eh_frame:000000000040B7B1                 db    3
.eh_frame:000000000040B7B2                 db    8
.eh_frame:000000000040B7B3                 db    6
.eh_frame:000000000040B7B4                 db  0Ch
.eh_frame:000000000040B7B5                 db    7
.eh_frame:000000000040B7B6                 db    8
.eh_frame:000000000040B7B7                 db    0
.eh_frame:000000000040B7B8                 db  1Ch
.eh_frame:000000000040B7B9                 db    0
.eh_frame:000000000040B7BA                 db    0
.eh_frame:000000000040B7BB                 db    0
.eh_frame:000000000040B7BC                 db 0DCh
.eh_frame:000000000040B7BD                 db    1
.eh_frame:000000000040B7BE                 db    0
.eh_frame:000000000040B7BF                 db    0
.eh_frame:000000000040B7C0                 db 0F7h
.eh_frame:000000000040B7C1                 db  7Ch ; |
.eh_frame:000000000040B7C2                 db 0FFh
.eh_frame:000000000040B7C3                 db 0FFh
.eh_frame:000000000040B7C4                 db  30h ; 0
.eh_frame:000000000040B7C5                 db    0
.eh_frame:000000000040B7C6                 db    0
.eh_frame:000000000040B7C7                 db    0
.eh_frame:000000000040B7C8                 db    0
.eh_frame:000000000040B7C9                 db  41h ; A
.eh_frame:000000000040B7CA                 db  0Eh
.eh_frame:000000000040B7CB                 db  10h
.eh_frame:000000000040B7CC                 db  86h
.eh_frame:000000000040B7CD                 db    2
.eh_frame:000000000040B7CE                 db  43h ; C
.eh_frame:000000000040B7CF                 db  0Dh
.eh_frame:000000000040B7D0                 db    6
.eh_frame:000000000040B7D1                 db  6Bh ; k
.eh_frame:000000000040B7D2                 db  0Ch
.eh_frame:000000000040B7D3                 db    7
.eh_frame:000000000040B7D4                 db    8
.eh_frame:000000000040B7D5                 db    0
.eh_frame:000000000040B7D6                 db    0
.eh_frame:000000000040B7D7                 db    0
.eh_frame:000000000040B7D8                 db  20h
.eh_frame:000000000040B7D9                 db    0
.eh_frame:000000000040B7DA                 db    0
.eh_frame:000000000040B7DB                 db    0
.eh_frame:000000000040B7DC                 db 0FCh
.eh_frame:000000000040B7DD                 db    1
.eh_frame:000000000040B7DE                 db    0
.eh_frame:000000000040B7DF                 db    0
.eh_frame:000000000040B7E0                 db    7
.eh_frame:000000000040B7E1                 db  7Dh ; }
.eh_frame:000000000040B7E2                 db 0FFh
.eh_frame:000000000040B7E3                 db 0FFh
.eh_frame:000000000040B7E4                 db  18h
.eh_frame:000000000040B7E5                 db  0Bh
.eh_frame:000000000040B7E6                 db    0
.eh_frame:000000000040B7E7                 db    0
.eh_frame:000000000040B7E8                 db    0
.eh_frame:000000000040B7E9                 db  41h ; A
.eh_frame:000000000040B7EA                 db  0Eh
.eh_frame:000000000040B7EB                 db  10h
.eh_frame:000000000040B7EC                 db  86h
.eh_frame:000000000040B7ED                 db    2
.eh_frame:000000000040B7EE                 db  43h ; C
.eh_frame:000000000040B7EF                 db  0Dh
.eh_frame:000000000040B7F0                 db    6
.eh_frame:000000000040B7F1                 db  48h ; H
.eh_frame:000000000040B7F2                 db  83h
.eh_frame:000000000040B7F3                 db    3
.eh_frame:000000000040B7F4                 db    3
.eh_frame:000000000040B7F5                 db  0Bh
.eh_frame:000000000040B7F6                 db  0Bh
.eh_frame:000000000040B7F7                 db  0Ch
.eh_frame:000000000040B7F8                 db    7
.eh_frame:000000000040B7F9                 db    8
.eh_frame:000000000040B7FA                 db    0
.eh_frame:000000000040B7FB                 db    0
.eh_frame:000000000040B7FC                 db  1Ch
.eh_frame:000000000040B7FD                 db    0
.eh_frame:000000000040B7FE                 db    0
.eh_frame:000000000040B7FF                 db    0
.eh_frame:000000000040B800                 db  20h
.eh_frame:000000000040B801                 db    2
.eh_frame:000000000040B802                 db    0
.eh_frame:000000000040B803                 db    0
.eh_frame:000000000040B804                 db 0FBh
.eh_frame:000000000040B805                 db  87h
.eh_frame:000000000040B806                 db 0FFh
.eh_frame:000000000040B807                 db 0FFh
.eh_frame:000000000040B808                 db  99h
.eh_frame:000000000040B809                 db    3
.eh_frame:000000000040B80A                 db    0
.eh_frame:000000000040B80B                 db    0
.eh_frame:000000000040B80C                 db    0
.eh_frame:000000000040B80D                 db  41h ; A
.eh_frame:000000000040B80E                 db  0Eh
.eh_frame:000000000040B80F                 db  10h
.eh_frame:000000000040B810                 db  86h
.eh_frame:000000000040B811                 db    2
.eh_frame:000000000040B812                 db  43h ; C
.eh_frame:000000000040B813                 db  0Dh
.eh_frame:000000000040B814                 db    6
.eh_frame:000000000040B815                 db    3
.eh_frame:000000000040B816                 db  94h
.eh_frame:000000000040B817                 db    3
.eh_frame:000000000040B818                 db  0Ch
.eh_frame:000000000040B819                 db    7
.eh_frame:000000000040B81A                 db    8
.eh_frame:000000000040B81B                 db    0
.eh_frame:000000000040B81C                 db  20h
.eh_frame:000000000040B81D                 db    0
.eh_frame:000000000040B81E                 db    0
.eh_frame:000000000040B81F                 db    0
.eh_frame:000000000040B820                 db  40h ; @
.eh_frame:000000000040B821                 db    2
.eh_frame:000000000040B822                 db    0
.eh_frame:000000000040B823                 db    0
.eh_frame:000000000040B824                 db  74h ; t
.eh_frame:000000000040B825                 db  8Bh
.eh_frame:000000000040B826                 db 0FFh
.eh_frame:000000000040B827                 db 0FFh
.eh_frame:000000000040B828                 db  70h ; p
.eh_frame:000000000040B829                 db  0Ch
.eh_frame:000000000040B82A                 db    0
.eh_frame:000000000040B82B                 db    0
.eh_frame:000000000040B82C                 db    0
.eh_frame:000000000040B82D                 db  41h ; A
.eh_frame:000000000040B82E                 db  0Eh
.eh_frame:000000000040B82F                 db  10h
.eh_frame:000000000040B830                 db  86h
.eh_frame:000000000040B831                 db    2
.eh_frame:000000000040B832                 db  43h ; C
.eh_frame:000000000040B833                 db  0Dh
.eh_frame:000000000040B834                 db    6
.eh_frame:000000000040B835                 db  48h ; H
.eh_frame:000000000040B836                 db  83h
.eh_frame:000000000040B837                 db    3
.eh_frame:000000000040B838                 db    3
.eh_frame:000000000040B839                 db  63h ; c
.eh_frame:000000000040B83A                 db  0Ch
.eh_frame:000000000040B83B                 db  0Ch
.eh_frame:000000000040B83C                 db    7
.eh_frame:000000000040B83D                 db    8
.eh_frame:000000000040B83E                 db    0
.eh_frame:000000000040B83F                 db    0
.eh_frame:000000000040B840                 db  24h ; $
.eh_frame:000000000040B841                 db    0
.eh_frame:000000000040B842                 db    0
.eh_frame:000000000040B843                 db    0
.eh_frame:000000000040B844                 db  64h ; d
.eh_frame:000000000040B845                 db    2
.eh_frame:000000000040B846                 db    0
.eh_frame:000000000040B847                 db    0
.eh_frame:000000000040B848                 db 0C0h
.eh_frame:000000000040B849                 db  97h
.eh_frame:000000000040B84A                 db 0FFh
.eh_frame:000000000040B84B                 db 0FFh
.eh_frame:000000000040B84C                 db 0DBh
.eh_frame:000000000040B84D                 db  3Ch ; <
.eh_frame:000000000040B84E                 db    0
.eh_frame:000000000040B84F                 db    0
.eh_frame:000000000040B850                 db    0
.eh_frame:000000000040B851                 db  41h ; A
.eh_frame:000000000040B852                 db  0Eh
.eh_frame:000000000040B853                 db  10h
.eh_frame:000000000040B854                 db  86h
.eh_frame:000000000040B855                 db    2
.eh_frame:000000000040B856                 db  43h ; C
.eh_frame:000000000040B857                 db  0Dh
.eh_frame:000000000040B858                 db    6
.eh_frame:000000000040B859                 db  4Ch ; L
.eh_frame:000000000040B85A                 db  8Dh
.eh_frame:000000000040B85B                 db    3
.eh_frame:000000000040B85C                 db  8Ch
.eh_frame:000000000040B85D                 db    4
.eh_frame:000000000040B85E                 db  83h
.eh_frame:000000000040B85F                 db    5
.eh_frame:000000000040B860                 db    3
.eh_frame:000000000040B861                 db 0CAh
.eh_frame:000000000040B862                 db  3Ch ; <
.eh_frame:000000000040B863                 db  0Ch
.eh_frame:000000000040B864                 db    7
.eh_frame:000000000040B865                 db    8
.eh_frame:000000000040B866                 db    0
.eh_frame:000000000040B867                 db    0
.eh_frame:000000000040B868                 db  1Ch
.eh_frame:000000000040B869                 db    0
.eh_frame:000000000040B86A                 db    0
.eh_frame:000000000040B86B                 db    0
.eh_frame:000000000040B86C                 db  8Ch
.eh_frame:000000000040B86D                 db    2
.eh_frame:000000000040B86E                 db    0
.eh_frame:000000000040B86F                 db    0
.eh_frame:000000000040B870                 db  73h ; s
.eh_frame:000000000040B871                 db 0D4h
.eh_frame:000000000040B872                 db 0FFh
.eh_frame:000000000040B873                 db 0FFh
.eh_frame:000000000040B874                 db  55h ; U
.eh_frame:000000000040B875                 db    1
.eh_frame:000000000040B876                 db    0
.eh_frame:000000000040B877                 db    0
.eh_frame:000000000040B878                 db    0
.eh_frame:000000000040B879                 db  41h ; A
.eh_frame:000000000040B87A                 db  0Eh
.eh_frame:000000000040B87B                 db  10h
.eh_frame:000000000040B87C                 db  86h
.eh_frame:000000000040B87D                 db    2
.eh_frame:000000000040B87E                 db  43h ; C
.eh_frame:000000000040B87F                 db  0Dh
.eh_frame:000000000040B880                 db    6
.eh_frame:000000000040B881                 db    3
.eh_frame:000000000040B882                 db  50h ; P
.eh_frame:000000000040B883                 db    1
.eh_frame:000000000040B884                 db  0Ch
.eh_frame:000000000040B885                 db    7
.eh_frame:000000000040B886                 db    8
.eh_frame:000000000040B887                 db    0
.eh_frame:000000000040B888                 db  24h ; $
.eh_frame:000000000040B889                 db    0
.eh_frame:000000000040B88A                 db    0
.eh_frame:000000000040B88B                 db    0
.eh_frame:000000000040B88C                 db 0ACh
.eh_frame:000000000040B88D                 db    2
.eh_frame:000000000040B88E                 db    0
.eh_frame:000000000040B88F                 db    0
.eh_frame:000000000040B890                 db 0A8h
.eh_frame:000000000040B891                 db 0D5h
.eh_frame:000000000040B892                 db 0FFh
.eh_frame:000000000040B893                 db 0FFh
.eh_frame:000000000040B894                 db  73h ; s
.eh_frame:000000000040B895                 db    1
.eh_frame:000000000040B896                 db    0
.eh_frame:000000000040B897                 db    0
.eh_frame:000000000040B898                 db    0
.eh_frame:000000000040B899                 db  41h ; A
.eh_frame:000000000040B89A                 db  0Eh
.eh_frame:000000000040B89B                 db  10h
.eh_frame:000000000040B89C                 db  86h
.eh_frame:000000000040B89D                 db    2
.eh_frame:000000000040B89E                 db  43h ; C
.eh_frame:000000000040B89F                 db  0Dh
.eh_frame:000000000040B8A0                 db    6
.eh_frame:000000000040B8A1                 db  45h ; E
.eh_frame:000000000040B8A2                 db  83h
.eh_frame:000000000040B8A3                 db    3
.eh_frame:000000000040B8A4                 db    3
.eh_frame:000000000040B8A5                 db  69h ; i
.eh_frame:000000000040B8A6                 db    1
.eh_frame:000000000040B8A7                 db  0Ch
.eh_frame:000000000040B8A8                 db    7
.eh_frame:000000000040B8A9                 db    8
.eh_frame:000000000040B8AA                 db    0
.eh_frame:000000000040B8AB                 db    0
.eh_frame:000000000040B8AC                 db    0
.eh_frame:000000000040B8AD                 db    0
.eh_frame:000000000040B8AE                 db    0
.eh_frame:000000000040B8AF                 db    0
.eh_frame:000000000040B8B0                 db  1Ch
.eh_frame:000000000040B8B1                 db    0
.eh_frame:000000000040B8B2                 db    0
.eh_frame:000000000040B8B3                 db    0
.eh_frame:000000000040B8B4                 db 0D4h
.eh_frame:000000000040B8B5                 db    2
.eh_frame:000000000040B8B6                 db    0
.eh_frame:000000000040B8B7                 db    0
.eh_frame:000000000040B8B8                 db  18h
.eh_frame:000000000040B8B9                 db 0D7h
.eh_frame:000000000040B8BA                 db 0FFh
.eh_frame:000000000040B8BB                 db 0FFh
.eh_frame:000000000040B8BC                 db 0F0h
.eh_frame:000000000040B8BD                 db    3
.eh_frame:000000000040B8BE                 db    0
.eh_frame:000000000040B8BF                 db    0
.eh_frame:000000000040B8C0                 db    0
.eh_frame:000000000040B8C1                 db  41h ; A
.eh_frame:000000000040B8C2                 db  0Eh
.eh_frame:000000000040B8C3                 db  10h
.eh_frame:000000000040B8C4                 db  86h
.eh_frame:000000000040B8C5                 db    2
.eh_frame:000000000040B8C6                 db  43h ; C
.eh_frame:000000000040B8C7                 db  0Dh
.eh_frame:000000000040B8C8                 db    6
.eh_frame:000000000040B8C9                 db    3
.eh_frame:000000000040B8CA                 db 0EBh
.eh_frame:000000000040B8CB                 db    3
.eh_frame:000000000040B8CC                 db  0Ch
.eh_frame:000000000040B8CD                 db    7
.eh_frame:000000000040B8CE                 db    8
.eh_frame:000000000040B8CF                 db    0
.eh_frame:000000000040B8D0                 db  1Ch
.eh_frame:000000000040B8D1                 db    0
.eh_frame:000000000040B8D2                 db    0
.eh_frame:000000000040B8D3                 db    0
.eh_frame:000000000040B8D4                 db 0F4h
.eh_frame:000000000040B8D5                 db    2
.eh_frame:000000000040B8D6                 db    0
.eh_frame:000000000040B8D7                 db    0
.eh_frame:000000000040B8D8                 db 0E8h
.eh_frame:000000000040B8D9                 db 0DAh
.eh_frame:000000000040B8DA                 db 0FFh
.eh_frame:000000000040B8DB                 db 0FFh
.eh_frame:000000000040B8DC                 db  32h ; 2
.eh_frame:000000000040B8DD                 db    0
.eh_frame:000000000040B8DE                 db    0
.eh_frame:000000000040B8DF                 db    0
.eh_frame:000000000040B8E0                 db    0
.eh_frame:000000000040B8E1                 db  41h ; A
.eh_frame:000000000040B8E2                 db  0Eh
.eh_frame:000000000040B8E3                 db  10h
.eh_frame:000000000040B8E4                 db  86h
.eh_frame:000000000040B8E5                 db    2
.eh_frame:000000000040B8E6                 db  43h ; C
.eh_frame:000000000040B8E7                 db  0Dh
.eh_frame:000000000040B8E8                 db    6
.eh_frame:000000000040B8E9                 db  6Dh ; m
.eh_frame:000000000040B8EA                 db  0Ch
.eh_frame:000000000040B8EB                 db    7
.eh_frame:000000000040B8EC                 db    8
.eh_frame:000000000040B8ED                 db    0
.eh_frame:000000000040B8EE                 db    0
.eh_frame:000000000040B8EF                 db    0
.eh_frame:000000000040B8F0                 db  1Ch
.eh_frame:000000000040B8F1                 db    0
.eh_frame:000000000040B8F2                 db    0
.eh_frame:000000000040B8F3                 db    0
.eh_frame:000000000040B8F4                 db  14h
.eh_frame:000000000040B8F5                 db    3
.eh_frame:000000000040B8F6                 db    0
.eh_frame:000000000040B8F7                 db    0
.eh_frame:000000000040B8F8                 db 0ACh
.eh_frame:000000000040B8F9                 db 0DEh
.eh_frame:000000000040B8FA                 db 0FFh
.eh_frame:000000000040B8FB                 db 0FFh
.eh_frame:000000000040B8FC                 db  2Bh ; +
.eh_frame:000000000040B8FD                 db    0
.eh_frame:000000000040B8FE                 db    0
.eh_frame:000000000040B8FF                 db    0
.eh_frame:000000000040B900                 db    0
.eh_frame:000000000040B901                 db  41h ; A
.eh_frame:000000000040B902                 db  0Eh
.eh_frame:000000000040B903                 db  10h
.eh_frame:000000000040B904                 db  86h
.eh_frame:000000000040B905                 db    2
.eh_frame:000000000040B906                 db  43h ; C
.eh_frame:000000000040B907                 db  0Dh
.eh_frame:000000000040B908                 db    6
.eh_frame:000000000040B909                 db  66h ; f
.eh_frame:000000000040B90A                 db  0Ch
.eh_frame:000000000040B90B                 db    7
.eh_frame:000000000040B90C                 db    8
.eh_frame:000000000040B90D                 db    0
.eh_frame:000000000040B90E                 db    0
.eh_frame:000000000040B90F                 db    0
.eh_frame:000000000040B910                 db  1Ch
.eh_frame:000000000040B911                 db    0
.eh_frame:000000000040B912                 db    0
.eh_frame:000000000040B913                 db    0
.eh_frame:000000000040B914                 db  34h ; 4
.eh_frame:000000000040B915                 db    3
.eh_frame:000000000040B916                 db    0
.eh_frame:000000000040B917                 db    0
.eh_frame:000000000040B918                 db 0B7h
.eh_frame:000000000040B919                 db 0DEh
.eh_frame:000000000040B91A                 db 0FFh
.eh_frame:000000000040B91B                 db 0FFh
.eh_frame:000000000040B91C                 db  2Bh ; +
.eh_frame:000000000040B91D                 db    0
.eh_frame:000000000040B91E                 db    0
.eh_frame:000000000040B91F                 db    0
.eh_frame:000000000040B920                 db    0
.eh_frame:000000000040B921                 db  41h ; A
.eh_frame:000000000040B922                 db  0Eh
.eh_frame:000000000040B923                 db  10h
.eh_frame:000000000040B924                 db  86h
.eh_frame:000000000040B925                 db    2
.eh_frame:000000000040B926                 db  43h ; C
.eh_frame:000000000040B927                 db  0Dh
.eh_frame:000000000040B928                 db    6
.eh_frame:000000000040B929                 db  66h ; f
.eh_frame:000000000040B92A                 db  0Ch
.eh_frame:000000000040B92B                 db    7
.eh_frame:000000000040B92C                 db    8
.eh_frame:000000000040B92D                 db    0
.eh_frame:000000000040B92E                 db    0
.eh_frame:000000000040B92F                 db    0
.eh_frame:000000000040B930                 db  20h
.eh_frame:000000000040B931                 db    0
.eh_frame:000000000040B932                 db    0
.eh_frame:000000000040B933                 db    0
.eh_frame:000000000040B934                 db  54h ; T
.eh_frame:000000000040B935                 db    3
.eh_frame:000000000040B936                 db    0
.eh_frame:000000000040B937                 db    0
.eh_frame:000000000040B938                 db 0BAh
.eh_frame:000000000040B939                 db 0DAh
.eh_frame:000000000040B93A                 db 0FFh
.eh_frame:000000000040B93B                 db 0FFh
.eh_frame:000000000040B93C                 db  54h ; T
.eh_frame:000000000040B93D                 db    3
.eh_frame:000000000040B93E                 db    0
.eh_frame:000000000040B93F                 db    0
.eh_frame:000000000040B940                 db    0
.eh_frame:000000000040B941                 db  41h ; A
.eh_frame:000000000040B942                 db  0Eh
.eh_frame:000000000040B943                 db  10h
.eh_frame:000000000040B944                 db  86h
.eh_frame:000000000040B945                 db    2
.eh_frame:000000000040B946                 db  43h ; C
.eh_frame:000000000040B947                 db  0Dh
.eh_frame:000000000040B948                 db    6
.eh_frame:000000000040B949                 db  45h ; E
.eh_frame:000000000040B94A                 db  83h
.eh_frame:000000000040B94B                 db    3
.eh_frame:000000000040B94C                 db    3
.eh_frame:000000000040B94D                 db  4Ah ; J
.eh_frame:000000000040B94E                 db    3
.eh_frame:000000000040B94F                 db  0Ch
.eh_frame:000000000040B950                 db    7
.eh_frame:000000000040B951                 db    8
.eh_frame:000000000040B952                 db    0
.eh_frame:000000000040B953                 db    0
.eh_frame:000000000040B954                 db  1Ch
.eh_frame:000000000040B955                 db    0
.eh_frame:000000000040B956                 db    0
.eh_frame:000000000040B957                 db    0
.eh_frame:000000000040B958                 db  78h ; x
.eh_frame:000000000040B959                 db    3
.eh_frame:000000000040B95A                 db    0
.eh_frame:000000000040B95B                 db    0
.eh_frame:000000000040B95C                 db 0EAh
.eh_frame:000000000040B95D                 db 0DDh
.eh_frame:000000000040B95E                 db 0FFh
.eh_frame:000000000040B95F                 db 0FFh
.eh_frame:000000000040B960                 db  49h ; I
.eh_frame:000000000040B961                 db    0
.eh_frame:000000000040B962                 db    0
.eh_frame:000000000040B963                 db    0
.eh_frame:000000000040B964                 db    0
.eh_frame:000000000040B965                 db  41h ; A
.eh_frame:000000000040B966                 db  0Eh
.eh_frame:000000000040B967                 db  10h
.eh_frame:000000000040B968                 db  86h
.eh_frame:000000000040B969                 db    2
.eh_frame:000000000040B96A                 db  43h ; C
.eh_frame:000000000040B96B                 db  0Dh
.eh_frame:000000000040B96C                 db    6
.eh_frame:000000000040B96D                 db    2
.eh_frame:000000000040B96E                 db  44h ; D
.eh_frame:000000000040B96F                 db  0Ch
.eh_frame:000000000040B970                 db    7
.eh_frame:000000000040B971                 db    8
.eh_frame:000000000040B972                 db    0
.eh_frame:000000000040B973                 db    0
.eh_frame:000000000040B974                 db  20h
.eh_frame:000000000040B975                 db    0
.eh_frame:000000000040B976                 db    0
.eh_frame:000000000040B977                 db    0
.eh_frame:000000000040B978                 db  98h
.eh_frame:000000000040B979                 db    3
.eh_frame:000000000040B97A                 db    0
.eh_frame:000000000040B97B                 db    0
.eh_frame:000000000040B97C                 db  13h
.eh_frame:000000000040B97D                 db 0DEh
.eh_frame:000000000040B97E                 db 0FFh
.eh_frame:000000000040B97F                 db 0FFh
.eh_frame:000000000040B980                 db  15h
.eh_frame:000000000040B981                 db    0
.eh_frame:000000000040B982                 db    0
.eh_frame:000000000040B983                 db    0
.eh_frame:000000000040B984                 db    0
.eh_frame:000000000040B985                 db  41h ; A
.eh_frame:000000000040B986                 db  0Eh
.eh_frame:000000000040B987                 db  10h
.eh_frame:000000000040B988                 db  86h
.eh_frame:000000000040B989                 db    2
.eh_frame:000000000040B98A                 db  43h ; C
.eh_frame:000000000040B98B                 db  0Dh
.eh_frame:000000000040B98C                 db    6
.eh_frame:000000000040B98D                 db  50h ; P
.eh_frame:000000000040B98E                 db  0Ch
.eh_frame:000000000040B98F                 db    7
.eh_frame:000000000040B990                 db    8
.eh_frame:000000000040B991                 db    0
.eh_frame:000000000040B992                 db    0
.eh_frame:000000000040B993                 db    0
.eh_frame:000000000040B994                 db    0
.eh_frame:000000000040B995                 db    0
.eh_frame:000000000040B996                 db    0
.eh_frame:000000000040B997                 db    0
.eh_frame:000000000040B998                 db  1Ch
.eh_frame:000000000040B999                 db    0
.eh_frame:000000000040B99A                 db    0
.eh_frame:000000000040B99B                 db    0
.eh_frame:000000000040B99C                 db 0BCh
.eh_frame:000000000040B99D                 db    3
.eh_frame:000000000040B99E                 db    0
.eh_frame:000000000040B99F                 db    0
.eh_frame:000000000040B9A0                 db  5Ah ; Z
.eh_frame:000000000040B9A1                 db 0DEh
.eh_frame:000000000040B9A2                 db 0FFh
.eh_frame:000000000040B9A3                 db 0FFh
.eh_frame:000000000040B9A4                 db  6Eh ; n
.eh_frame:000000000040B9A5                 db    6
.eh_frame:000000000040B9A6                 db    0
.eh_frame:000000000040B9A7                 db    0
.eh_frame:000000000040B9A8                 db    0
.eh_frame:000000000040B9A9                 db  41h ; A
.eh_frame:000000000040B9AA                 db  0Eh
.eh_frame:000000000040B9AB                 db  10h
.eh_frame:000000000040B9AC                 db  86h
.eh_frame:000000000040B9AD                 db    2
.eh_frame:000000000040B9AE                 db  43h ; C
.eh_frame:000000000040B9AF                 db  0Dh
.eh_frame:000000000040B9B0                 db    6
.eh_frame:000000000040B9B1                 db    3
.eh_frame:000000000040B9B2                 db  69h ; i
.eh_frame:000000000040B9B3                 db    6
.eh_frame:000000000040B9B4                 db  0Ch
.eh_frame:000000000040B9B5                 db    7
.eh_frame:000000000040B9B6                 db    8
.eh_frame:000000000040B9B7                 db    0
.eh_frame:000000000040B9B8                 db  20h
.eh_frame:000000000040B9B9                 db    0
.eh_frame:000000000040B9BA                 db    0
.eh_frame:000000000040B9BB                 db    0
.eh_frame:000000000040B9BC                 db 0DCh
.eh_frame:000000000040B9BD                 db    3
.eh_frame:000000000040B9BE                 db    0
.eh_frame:000000000040B9BF                 db    0
.eh_frame:000000000040B9C0                 db 0A8h
.eh_frame:000000000040B9C1                 db 0E4h
.eh_frame:000000000040B9C2                 db 0FFh
.eh_frame:000000000040B9C3                 db 0FFh
.eh_frame:000000000040B9C4                 db 0DBh
.eh_frame:000000000040B9C5                 db    1
.eh_frame:000000000040B9C6                 db    0
.eh_frame:000000000040B9C7                 db    0
.eh_frame:000000000040B9C8                 db    0
.eh_frame:000000000040B9C9                 db  41h ; A
.eh_frame:000000000040B9CA                 db  0Eh
.eh_frame:000000000040B9CB                 db  10h
.eh_frame:000000000040B9CC                 db  86h
.eh_frame:000000000040B9CD                 db    2
.eh_frame:000000000040B9CE                 db  43h ; C
.eh_frame:000000000040B9CF                 db  0Dh
.eh_frame:000000000040B9D0                 db    6
.eh_frame:000000000040B9D1                 db  45h ; E
.eh_frame:000000000040B9D2                 db  83h
.eh_frame:000000000040B9D3                 db    3
.eh_frame:000000000040B9D4                 db    3
.eh_frame:000000000040B9D5                 db 0D1h
.eh_frame:000000000040B9D6                 db    1
.eh_frame:000000000040B9D7                 db  0Ch
.eh_frame:000000000040B9D8                 db    7
.eh_frame:000000000040B9D9                 db    8
.eh_frame:000000000040B9DA                 db    0
.eh_frame:000000000040B9DB                 db    0
.eh_frame:000000000040B9DC                 db  1Ch
.eh_frame:000000000040B9DD                 db    0
.eh_frame:000000000040B9DE                 db    0
.eh_frame:000000000040B9DF                 db    0
.eh_frame:000000000040B9E0                 db    0
.eh_frame:000000000040B9E1                 db    4
.eh_frame:000000000040B9E2                 db    0
.eh_frame:000000000040B9E3                 db    0
.eh_frame:000000000040B9E4                 db  5Fh ; _
.eh_frame:000000000040B9E5                 db 0E6h
.eh_frame:000000000040B9E6                 db 0FFh
.eh_frame:000000000040B9E7                 db 0FFh
.eh_frame:000000000040B9E8                 db  39h ; 9
.eh_frame:000000000040B9E9                 db    0
.eh_frame:000000000040B9EA                 db    0
.eh_frame:000000000040B9EB                 db    0
.eh_frame:000000000040B9EC                 db    0
.eh_frame:000000000040B9ED                 db  41h ; A
.eh_frame:000000000040B9EE                 db  0Eh
.eh_frame:000000000040B9EF                 db  10h
.eh_frame:000000000040B9F0                 db  86h
.eh_frame:000000000040B9F1                 db    2
.eh_frame:000000000040B9F2                 db  43h ; C
.eh_frame:000000000040B9F3                 db  0Dh
.eh_frame:000000000040B9F4                 db    6
.eh_frame:000000000040B9F5                 db  74h ; t
.eh_frame:000000000040B9F6                 db  0Ch
.eh_frame:000000000040B9F7                 db    7
.eh_frame:000000000040B9F8                 db    8
.eh_frame:000000000040B9F9                 db    0
.eh_frame:000000000040B9FA                 db    0
.eh_frame:000000000040B9FB                 db    0
.eh_frame:000000000040B9FC                 db  20h
.eh_frame:000000000040B9FD                 db    0
.eh_frame:000000000040B9FE                 db    0
.eh_frame:000000000040B9FF                 db    0
.eh_frame:000000000040BA00                 db  20h
.eh_frame:000000000040BA01                 db    4
.eh_frame:000000000040BA02                 db    0
.eh_frame:000000000040BA03                 db    0
.eh_frame:000000000040BA04                 db  78h ; x
.eh_frame:000000000040BA05                 db 0E6h
.eh_frame:000000000040BA06                 db 0FFh
.eh_frame:000000000040BA07                 db 0FFh
.eh_frame:000000000040BA08                 db  8Fh
.eh_frame:000000000040BA09                 db    0
.eh_frame:000000000040BA0A                 db    0
.eh_frame:000000000040BA0B                 db    0
.eh_frame:000000000040BA0C                 db    0
.eh_frame:000000000040BA0D                 db  41h ; A
.eh_frame:000000000040BA0E                 db  0Eh
.eh_frame:000000000040BA0F                 db  10h
.eh_frame:000000000040BA10                 db  86h
.eh_frame:000000000040BA11                 db    2
.eh_frame:000000000040BA12                 db  43h ; C
.eh_frame:000000000040BA13                 db  0Dh
.eh_frame:000000000040BA14                 db    6
.eh_frame:000000000040BA15                 db    2
.eh_frame:000000000040BA16                 db  8Ah
.eh_frame:000000000040BA17                 db  0Ch
.eh_frame:000000000040BA18                 db    7
.eh_frame:000000000040BA19                 db    8
.eh_frame:000000000040BA1A                 db    0
.eh_frame:000000000040BA1B                 db    0
.eh_frame:000000000040BA1C                 db    0
.eh_frame:000000000040BA1D                 db    0
.eh_frame:000000000040BA1E                 db    0
.eh_frame:000000000040BA1F                 db    0
.eh_frame:000000000040BA20                 db  1Ch
.eh_frame:000000000040BA21                 db    0
.eh_frame:000000000040BA22                 db    0
.eh_frame:000000000040BA23                 db    0
.eh_frame:000000000040BA24                 db  44h ; D
.eh_frame:000000000040BA25                 db    4
.eh_frame:000000000040BA26                 db    0
.eh_frame:000000000040BA27                 db    0
.eh_frame:000000000040BA28                 db 0E3h
.eh_frame:000000000040BA29                 db 0E6h
.eh_frame:000000000040BA2A                 db 0FFh
.eh_frame:000000000040BA2B                 db 0FFh
.eh_frame:000000000040BA2C                 db  97h
.eh_frame:000000000040BA2D                 db    1
.eh_frame:000000000040BA2E                 db    0
.eh_frame:000000000040BA2F                 db    0
.eh_frame:000000000040BA30                 db    0
.eh_frame:000000000040BA31                 db  41h ; A
.eh_frame:000000000040BA32                 db  0Eh
.eh_frame:000000000040BA33                 db  10h
.eh_frame:000000000040BA34                 db  86h
.eh_frame:000000000040BA35                 db    2
.eh_frame:000000000040BA36                 db  43h ; C
.eh_frame:000000000040BA37                 db  0Dh
.eh_frame:000000000040BA38                 db    6
.eh_frame:000000000040BA39                 db    3
.eh_frame:000000000040BA3A                 db  92h
.eh_frame:000000000040BA3B                 db    1
.eh_frame:000000000040BA3C                 db  0Ch
.eh_frame:000000000040BA3D                 db    7
.eh_frame:000000000040BA3E                 db    8
.eh_frame:000000000040BA3F                 db    0
.eh_frame:000000000040BA40                 db  1Ch
.eh_frame:000000000040BA41                 db    0
.eh_frame:000000000040BA42                 db    0
.eh_frame:000000000040BA43                 db    0
.eh_frame:000000000040BA44                 db  64h ; d
.eh_frame:000000000040BA45                 db    4
.eh_frame:000000000040BA46                 db    0
.eh_frame:000000000040BA47                 db    0
.eh_frame:000000000040BA48                 db  5Ah ; Z
.eh_frame:000000000040BA49                 db 0E8h
.eh_frame:000000000040BA4A                 db 0FFh
.eh_frame:000000000040BA4B                 db 0FFh
.eh_frame:000000000040BA4C                 db  91h
.eh_frame:000000000040BA4D                 db    1
.eh_frame:000000000040BA4E                 db    0
.eh_frame:000000000040BA4F                 db    0
.eh_frame:000000000040BA50                 db    0
.eh_frame:000000000040BA51                 db  41h ; A
.eh_frame:000000000040BA52                 db  0Eh
.eh_frame:000000000040BA53                 db  10h
.eh_frame:000000000040BA54                 db  86h
.eh_frame:000000000040BA55                 db    2
.eh_frame:000000000040BA56                 db  43h ; C
.eh_frame:000000000040BA57                 db  0Dh
.eh_frame:000000000040BA58                 db    6
.eh_frame:000000000040BA59                 db    3
.eh_frame:000000000040BA5A                 db  8Ch
.eh_frame:000000000040BA5B                 db    1
.eh_frame:000000000040BA5C                 db  0Ch
.eh_frame:000000000040BA5D                 db    7
.eh_frame:000000000040BA5E                 db    8
.eh_frame:000000000040BA5F                 db    0
.eh_frame:000000000040BA60                 db  1Ch
.eh_frame:000000000040BA61                 db    0
.eh_frame:000000000040BA62                 db    0
.eh_frame:000000000040BA63                 db    0
.eh_frame:000000000040BA64                 db  84h
.eh_frame:000000000040BA65                 db    4
.eh_frame:000000000040BA66                 db    0
.eh_frame:000000000040BA67                 db    0
.eh_frame:000000000040BA68                 db 0CBh
.eh_frame:000000000040BA69                 db 0E9h
.eh_frame:000000000040BA6A                 db 0FFh
.eh_frame:000000000040BA6B                 db 0FFh
.eh_frame:000000000040BA6C                 db  7Dh ; }
.eh_frame:000000000040BA6D                 db    1
.eh_frame:000000000040BA6E                 db    0
.eh_frame:000000000040BA6F                 db    0
.eh_frame:000000000040BA70                 db    0
.eh_frame:000000000040BA71                 db  41h ; A
.eh_frame:000000000040BA72                 db  0Eh
.eh_frame:000000000040BA73                 db  10h
.eh_frame:000000000040BA74                 db  86h
.eh_frame:000000000040BA75                 db    2
.eh_frame:000000000040BA76                 db  43h ; C
.eh_frame:000000000040BA77                 db  0Dh
.eh_frame:000000000040BA78                 db    6
.eh_frame:000000000040BA79                 db    3
.eh_frame:000000000040BA7A                 db  78h ; x
.eh_frame:000000000040BA7B                 db    1
.eh_frame:000000000040BA7C                 db  0Ch
.eh_frame:000000000040BA7D                 db    7
.eh_frame:000000000040BA7E                 db    8
.eh_frame:000000000040BA7F                 db    0
.eh_frame:000000000040BA80                 db  1Ch
.eh_frame:000000000040BA81                 db    0
.eh_frame:000000000040BA82                 db    0
.eh_frame:000000000040BA83                 db    0
.eh_frame:000000000040BA84                 db 0A4h
.eh_frame:000000000040BA85                 db    4
.eh_frame:000000000040BA86                 db    0
.eh_frame:000000000040BA87                 db    0
.eh_frame:000000000040BA88                 db  28h ; (
.eh_frame:000000000040BA89                 db 0EBh
.eh_frame:000000000040BA8A                 db 0FFh
.eh_frame:000000000040BA8B                 db 0FFh
.eh_frame:000000000040BA8C                 db  58h ; X
.eh_frame:000000000040BA8D                 db    0
.eh_frame:000000000040BA8E                 db    0
.eh_frame:000000000040BA8F                 db    0
.eh_frame:000000000040BA90                 db    0
.eh_frame:000000000040BA91                 db  41h ; A
.eh_frame:000000000040BA92                 db  0Eh
.eh_frame:000000000040BA93                 db  10h
.eh_frame:000000000040BA94                 db  86h
.eh_frame:000000000040BA95                 db    2
.eh_frame:000000000040BA96                 db  43h ; C
.eh_frame:000000000040BA97                 db  0Dh
.eh_frame:000000000040BA98                 db    6
.eh_frame:000000000040BA99                 db    2
.eh_frame:000000000040BA9A                 db  53h ; S
.eh_frame:000000000040BA9B                 db  0Ch
.eh_frame:000000000040BA9C                 db    7
.eh_frame:000000000040BA9D                 db    8
.eh_frame:000000000040BA9E                 db    0
.eh_frame:000000000040BA9F                 db    0
.eh_frame:000000000040BAA0                 db  1Ch
.eh_frame:000000000040BAA1                 db    0
.eh_frame:000000000040BAA2                 db    0
.eh_frame:000000000040BAA3                 db    0
.eh_frame:000000000040BAA4                 db 0C4h
.eh_frame:000000000040BAA5                 db    4
.eh_frame:000000000040BAA6                 db    0
.eh_frame:000000000040BAA7                 db    0
.eh_frame:000000000040BAA8                 db  60h ; `
.eh_frame:000000000040BAA9                 db 0EBh
.eh_frame:000000000040BAAA                 db 0FFh
.eh_frame:000000000040BAAB                 db 0FFh
.eh_frame:000000000040BAAC                 db  38h ; 8
.eh_frame:000000000040BAAD                 db    1
.eh_frame:000000000040BAAE                 db    0
.eh_frame:000000000040BAAF                 db    0
.eh_frame:000000000040BAB0                 db    0
.eh_frame:000000000040BAB1                 db  41h ; A
.eh_frame:000000000040BAB2                 db  0Eh
.eh_frame:000000000040BAB3                 db  10h
.eh_frame:000000000040BAB4                 db  86h
.eh_frame:000000000040BAB5                 db    2
.eh_frame:000000000040BAB6                 db  43h ; C
.eh_frame:000000000040BAB7                 db  0Dh
.eh_frame:000000000040BAB8                 db    6
.eh_frame:000000000040BAB9                 db    3
.eh_frame:000000000040BABA                 db  33h ; 3
.eh_frame:000000000040BABB                 db    1
.eh_frame:000000000040BABC                 db  0Ch
.eh_frame:000000000040BABD                 db    7
.eh_frame:000000000040BABE                 db    8
.eh_frame:000000000040BABF                 db    0
.eh_frame:000000000040BAC0                 db  20h
.eh_frame:000000000040BAC1                 db    0
.eh_frame:000000000040BAC2                 db    0
.eh_frame:000000000040BAC3                 db    0
.eh_frame:000000000040BAC4                 db 0E4h
.eh_frame:000000000040BAC5                 db    4
.eh_frame:000000000040BAC6                 db    0
.eh_frame:000000000040BAC7                 db    0
.eh_frame:000000000040BAC8                 db  78h ; x
.eh_frame:000000000040BAC9                 db 0ECh
.eh_frame:000000000040BACA                 db 0FFh
.eh_frame:000000000040BACB                 db 0FFh
.eh_frame:000000000040BACC                 db  83h
.eh_frame:000000000040BACD                 db    1
.eh_frame:000000000040BACE                 db    0
.eh_frame:000000000040BACF                 db    0
.eh_frame:000000000040BAD0                 db    0
.eh_frame:000000000040BAD1                 db  41h ; A
.eh_frame:000000000040BAD2                 db  0Eh
.eh_frame:000000000040BAD3                 db  10h
.eh_frame:000000000040BAD4                 db  86h
.eh_frame:000000000040BAD5                 db    2
.eh_frame:000000000040BAD6                 db  43h ; C
.eh_frame:000000000040BAD7                 db  0Dh
.eh_frame:000000000040BAD8                 db    6
.eh_frame:000000000040BAD9                 db  47h ; G
.eh_frame:000000000040BADA                 db  8Ch
.eh_frame:000000000040BADB                 db    3
.eh_frame:000000000040BADC                 db  83h
.eh_frame:000000000040BADD                 db    4
.eh_frame:000000000040BADE                 db    3
.eh_frame:000000000040BADF                 db  77h ; w
.eh_frame:000000000040BAE0                 db    1
.eh_frame:000000000040BAE1                 db  0Ch
.eh_frame:000000000040BAE2                 db    7
.eh_frame:000000000040BAE3                 db    8
.eh_frame:000000000040BAE4                 db  1Ch
.eh_frame:000000000040BAE5                 db    0
.eh_frame:000000000040BAE6                 db    0
.eh_frame:000000000040BAE7                 db    0
.eh_frame:000000000040BAE8                 db    8
.eh_frame:000000000040BAE9                 db    5
.eh_frame:000000000040BAEA                 db    0
.eh_frame:000000000040BAEB                 db    0
.eh_frame:000000000040BAEC                 db 0D7h
.eh_frame:000000000040BAED                 db 0EDh
.eh_frame:000000000040BAEE                 db 0FFh
.eh_frame:000000000040BAEF                 db 0FFh
.eh_frame:000000000040BAF0                 db  7Eh ; ~
.eh_frame:000000000040BAF1                 db    3
.eh_frame:000000000040BAF2                 db    0
.eh_frame:000000000040BAF3                 db    0
.eh_frame:000000000040BAF4                 db    0
.eh_frame:000000000040BAF5                 db  41h ; A
.eh_frame:000000000040BAF6                 db  0Eh
.eh_frame:000000000040BAF7                 db  10h
.eh_frame:000000000040BAF8                 db  86h
.eh_frame:000000000040BAF9                 db    2
.eh_frame:000000000040BAFA                 db  43h ; C
.eh_frame:000000000040BAFB                 db  0Dh
.eh_frame:000000000040BAFC                 db    6
.eh_frame:000000000040BAFD                 db    3
.eh_frame:000000000040BAFE                 db  79h ; y
.eh_frame:000000000040BAFF                 db    3
.eh_frame:000000000040BB00                 db  0Ch
.eh_frame:000000000040BB01                 db    7
.eh_frame:000000000040BB02                 db    8
.eh_frame:000000000040BB03                 db    0
.eh_frame:000000000040BB04                 db  20h
.eh_frame:000000000040BB05                 db    0
.eh_frame:000000000040BB06                 db    0
.eh_frame:000000000040BB07                 db    0
.eh_frame:000000000040BB08                 db  28h ; (
.eh_frame:000000000040BB09                 db    5
.eh_frame:000000000040BB0A                 db    0
.eh_frame:000000000040BB0B                 db    0
.eh_frame:000000000040BB0C                 db  35h ; 5
.eh_frame:000000000040BB0D                 db 0F1h
.eh_frame:000000000040BB0E                 db 0FFh
.eh_frame:000000000040BB0F                 db 0FFh
.eh_frame:000000000040BB10                 db  40h ; @
.eh_frame:000000000040BB11                 db    0
.eh_frame:000000000040BB12                 db    0
.eh_frame:000000000040BB13                 db    0
.eh_frame:000000000040BB14                 db    0
.eh_frame:000000000040BB15                 db  41h ; A
.eh_frame:000000000040BB16                 db  0Eh
.eh_frame:000000000040BB17                 db  10h
.eh_frame:000000000040BB18                 db  86h
.eh_frame:000000000040BB19                 db    2
.eh_frame:000000000040BB1A                 db  43h ; C
.eh_frame:000000000040BB1B                 db  0Dh
.eh_frame:000000000040BB1C                 db    6
.eh_frame:000000000040BB1D                 db  7Bh ; {
.eh_frame:000000000040BB1E                 db  0Ch
.eh_frame:000000000040BB1F                 db    7
.eh_frame:000000000040BB20                 db    8
.eh_frame:000000000040BB21                 db    0
.eh_frame:000000000040BB22                 db    0
.eh_frame:000000000040BB23                 db    0
.eh_frame:000000000040BB24                 db    0
.eh_frame:000000000040BB25                 db    0
.eh_frame:000000000040BB26                 db    0
.eh_frame:000000000040BB27                 db    0
.eh_frame:000000000040BB28                 db  1Ch
.eh_frame:000000000040BB29                 db    0
.eh_frame:000000000040BB2A                 db    0
.eh_frame:000000000040BB2B                 db    0
.eh_frame:000000000040BB2C                 db  4Ch ; L
.eh_frame:000000000040BB2D                 db    5
.eh_frame:000000000040BB2E                 db    0
.eh_frame:000000000040BB2F                 db    0
.eh_frame:000000000040BB30                 db  51h ; Q
.eh_frame:000000000040BB31                 db 0F1h
.eh_frame:000000000040BB32                 db 0FFh
.eh_frame:000000000040BB33                 db 0FFh
.eh_frame:000000000040BB34                 db  19h
.eh_frame:000000000040BB35                 db    0
.eh_frame:000000000040BB36                 db    0
.eh_frame:000000000040BB37                 db    0
.eh_frame:000000000040BB38                 db    0
.eh_frame:000000000040BB39                 db  41h ; A
.eh_frame:000000000040BB3A                 db  0Eh
.eh_frame:000000000040BB3B                 db  10h
.eh_frame:000000000040BB3C                 db  86h
.eh_frame:000000000040BB3D                 db    2
.eh_frame:000000000040BB3E                 db  43h ; C
.eh_frame:000000000040BB3F                 db  0Dh
.eh_frame:000000000040BB40                 db    6
.eh_frame:000000000040BB41                 db  54h ; T
.eh_frame:000000000040BB42                 db  0Ch
.eh_frame:000000000040BB43                 db    7
.eh_frame:000000000040BB44                 db    8
.eh_frame:000000000040BB45                 db    0
.eh_frame:000000000040BB46                 db    0
.eh_frame:000000000040BB47                 db    0
.eh_frame:000000000040BB48                 db  1Ch
.eh_frame:000000000040BB49                 db    0
.eh_frame:000000000040BB4A                 db    0
.eh_frame:000000000040BB4B                 db    0
.eh_frame:000000000040BB4C                 db  6Ch ; l
.eh_frame:000000000040BB4D                 db    5
.eh_frame:000000000040BB4E                 db    0
.eh_frame:000000000040BB4F                 db    0
.eh_frame:000000000040BB50                 db  4Ah ; J
.eh_frame:000000000040BB51                 db 0F1h
.eh_frame:000000000040BB52                 db 0FFh
.eh_frame:000000000040BB53                 db 0FFh
.eh_frame:000000000040BB54                 db 0B4h
.eh_frame:000000000040BB55                 db    1
.eh_frame:000000000040BB56                 db    0
.eh_frame:000000000040BB57                 db    0
.eh_frame:000000000040BB58                 db    0
.eh_frame:000000000040BB59                 db  41h ; A
.eh_frame:000000000040BB5A                 db  0Eh
.eh_frame:000000000040BB5B                 db  10h
.eh_frame:000000000040BB5C                 db  86h
.eh_frame:000000000040BB5D                 db    2
.eh_frame:000000000040BB5E                 db  43h ; C
.eh_frame:000000000040BB5F                 db  0Dh
.eh_frame:000000000040BB60                 db    6
.eh_frame:000000000040BB61                 db    3
.eh_frame:000000000040BB62                 db 0AFh
.eh_frame:000000000040BB63                 db    1
.eh_frame:000000000040BB64                 db  0Ch
.eh_frame:000000000040BB65                 db    7
.eh_frame:000000000040BB66                 db    8
.eh_frame:000000000040BB67                 db    0
.eh_frame:000000000040BB68                 db  44h ; D
.eh_frame:000000000040BB69                 db    0
.eh_frame:000000000040BB6A                 db    0
.eh_frame:000000000040BB6B                 db    0
.eh_frame:000000000040BB6C                 db  8Ch
.eh_frame:000000000040BB6D                 db    5
.eh_frame:000000000040BB6E                 db    0
.eh_frame:000000000040BB6F                 db    0
.eh_frame:000000000040BB70                 db 0E0h
.eh_frame:000000000040BB71                 db 0F2h
.eh_frame:000000000040BB72                 db 0FFh
.eh_frame:000000000040BB73                 db 0FFh
.eh_frame:000000000040BB74                 db  65h ; e
.eh_frame:000000000040BB75                 db    0
.eh_frame:000000000040BB76                 db    0
.eh_frame:000000000040BB77                 db    0
.eh_frame:000000000040BB78                 db    0
.eh_frame:000000000040BB79                 db  42h ; B
.eh_frame:000000000040BB7A                 db  0Eh
.eh_frame:000000000040BB7B                 db  10h
.eh_frame:000000000040BB7C                 db  8Fh
.eh_frame:000000000040BB7D                 db    2
.eh_frame:000000000040BB7E                 db  42h ; B
.eh_frame:000000000040BB7F                 db  0Eh
.eh_frame:000000000040BB80                 db  18h
.eh_frame:000000000040BB81                 db  8Eh
.eh_frame:000000000040BB82                 db    3
.eh_frame:000000000040BB83                 db  45h ; E
.eh_frame:000000000040BB84                 db  0Eh
.eh_frame:000000000040BB85                 db  20h
.eh_frame:000000000040BB86                 db  8Dh
.eh_frame:000000000040BB87                 db    4
.eh_frame:000000000040BB88                 db  42h ; B
.eh_frame:000000000040BB89                 db  0Eh
.eh_frame:000000000040BB8A                 db  28h ; (
.eh_frame:000000000040BB8B                 db  8Ch
.eh_frame:000000000040BB8C                 db    5
.eh_frame:000000000040BB8D                 db  48h ; H
.eh_frame:000000000040BB8E                 db  0Eh
.eh_frame:000000000040BB8F                 db  30h ; 0
.eh_frame:000000000040BB90                 db  86h
.eh_frame:000000000040BB91                 db    6
.eh_frame:000000000040BB92                 db  48h ; H
.eh_frame:000000000040BB93                 db  0Eh
.eh_frame:000000000040BB94                 db  38h ; 8
.eh_frame:000000000040BB95                 db  83h
.eh_frame:000000000040BB96                 db    7
.eh_frame:000000000040BB97                 db  4Dh ; M
.eh_frame:000000000040BB98                 db  0Eh
.eh_frame:000000000040BB99                 db  40h ; @
.eh_frame:000000000040BB9A                 db  72h ; r
.eh_frame:000000000040BB9B                 db  0Eh
.eh_frame:000000000040BB9C                 db  38h ; 8
.eh_frame:000000000040BB9D                 db  41h ; A
.eh_frame:000000000040BB9E                 db  0Eh
.eh_frame:000000000040BB9F                 db  30h ; 0
.eh_frame:000000000040BBA0                 db  41h ; A
.eh_frame:000000000040BBA1                 db  0Eh
.eh_frame:000000000040BBA2                 db  28h ; (
.eh_frame:000000000040BBA3                 db  42h ; B
.eh_frame:000000000040BBA4                 db  0Eh
.eh_frame:000000000040BBA5                 db  20h
.eh_frame:000000000040BBA6                 db  42h ; B
.eh_frame:000000000040BBA7                 db  0Eh
.eh_frame:000000000040BBA8                 db  18h
.eh_frame:000000000040BBA9                 db  42h ; B
.eh_frame:000000000040BBAA                 db  0Eh
.eh_frame:000000000040BBAB                 db  10h
.eh_frame:000000000040BBAC                 db  42h ; B
.eh_frame:000000000040BBAD                 db  0Eh
.eh_frame:000000000040BBAE                 db    8
.eh_frame:000000000040BBAF                 db    0
.eh_frame:000000000040BBB0                 db  10h
.eh_frame:000000000040BBB1                 db    0
.eh_frame:000000000040BBB2                 db    0
.eh_frame:000000000040BBB3                 db    0
.eh_frame:000000000040BBB4                 db 0D4h
.eh_frame:000000000040BBB5                 db    5
.eh_frame:000000000040BBB6                 db    0
.eh_frame:000000000040BBB7                 db    0
.eh_frame:000000000040BBB8                 db    8
.eh_frame:000000000040BBB9                 db 0F3h
.eh_frame:000000000040BBBA                 db 0FFh
.eh_frame:000000000040BBBB                 db 0FFh
.eh_frame:000000000040BBBC                 db    2
.eh_frame:000000000040BBBD                 db    0
.eh_frame:000000000040BBBE                 db    0
.eh_frame:000000000040BBBF                 db    0
.eh_frame:000000000040BBC0                 db    0
.eh_frame:000000000040BBC1                 db    0
.eh_frame:000000000040BBC2                 db    0
.eh_frame:000000000040BBC3                 db    0
.eh_frame:000000000040BBC4 __FRAME_END__   db    0
.eh_frame:000000000040BBC5                 db    0
.eh_frame:000000000040BBC6                 db    0
.eh_frame:000000000040BBC7                 db    0
.eh_frame:000000000040BBC7 _eh_frame       ends
.eh_frame:000000000040BBC7
.init_array:000000000060BDC8 ; ELF Initialization Function Table
.init_array:000000000060BDC8 ; ===========================================================================
.init_array:000000000060BDC8
.init_array:000000000060BDC8 ; Segment type: Pure data
.init_array:000000000060BDC8 ; Segment permissions: Read/Write
.init_array:000000000060BDC8 ; Segment alignment 'qword' can not be represented in assembly
.init_array:000000000060BDC8 _init_array     segment para public 'DATA' use64
.init_array:000000000060BDC8                 assume cs:_init_array
.init_array:000000000060BDC8                 ;org 60BDC8h
.init_array:000000000060BDC8 __frame_dummy_init_array_entry dq offset frame_dummy
.init_array:000000000060BDC8                                         ; DATA XREF: LOAD:00000000004000F8↑o
.init_array:000000000060BDC8                                         ; LOAD:0000000000400210↑o ...
.init_array:000000000060BDC8                                         ; Alternative name is '__init_array_start'
.init_array:000000000060BDD0                 dq offset _GLOBAL__sub_I_main
.init_array:000000000060BDD0 _init_array     ends
.init_array:000000000060BDD0
.fini_array:000000000060BDD8 ; ELF Termination Function Table
.fini_array:000000000060BDD8 ; ===========================================================================
.fini_array:000000000060BDD8
.fini_array:000000000060BDD8 ; Segment type: Pure data
.fini_array:000000000060BDD8 ; Segment permissions: Read/Write
.fini_array:000000000060BDD8 ; Segment alignment 'qword' can not be represented in assembly
.fini_array:000000000060BDD8 _fini_array     segment para public 'DATA' use64
.fini_array:000000000060BDD8                 assume cs:_fini_array
.fini_array:000000000060BDD8                 ;org 60BDD8h
.fini_array:000000000060BDD8 __do_global_dtors_aux_fini_array_entry dq offset __do_global_dtors_aux
.fini_array:000000000060BDD8                                         ; DATA XREF: __libc_csu_init+13↑o
.fini_array:000000000060BDD8 _fini_array     ends                    ; Alternative name is '__init_array_end'
.fini_array:000000000060BDD8
LOAD:000000000060BDE0 ; ELF Dynamic Information
LOAD:000000000060BDE0 ; ===========================================================================
LOAD:000000000060BDE0
LOAD:000000000060BDE0 ; Segment type: Pure data
LOAD:000000000060BDE0 ; Segment permissions: Read/Write
LOAD:000000000060BDE0 LOAD            segment byte public 'DATA' use64
LOAD:000000000060BDE0                 assume cs:LOAD
LOAD:000000000060BDE0                 ;org 60BDE0h
LOAD:000000000060BDE0 _DYNAMIC        Elf64_Dyn <1, 1>        ; DATA XREF: LOAD:0000000000400130↑o
LOAD:000000000060BDE0                                         ; .got.plt:_GLOBAL_OFFSET_TABLE_↓o
LOAD:000000000060BDE0                                         ; DT_NEEDED libstdc++.so.6
LOAD:000000000060BDF0                 Elf64_Dyn <1, 0E7h>     ; DT_NEEDED libm.so.6
LOAD:000000000060BE00                 Elf64_Dyn <1, 0F1h>     ; DT_NEEDED libgcc_s.so.1
LOAD:000000000060BE10                 Elf64_Dyn <1, 0FFh>     ; DT_NEEDED libc.so.6
LOAD:000000000060BE20                 Elf64_Dyn <0Ch, 400968h> ; DT_INIT
LOAD:000000000060BE30                 Elf64_Dyn <0Dh, 40AEC4h> ; DT_FINI
LOAD:000000000060BE40                 Elf64_Dyn <19h, 60BDC8h> ; DT_INIT_ARRAY
LOAD:000000000060BE50                 Elf64_Dyn <1Bh, 10h>    ; DT_INIT_ARRAYSZ
LOAD:000000000060BE60                 Elf64_Dyn <1Ah, 60BDD8h> ; DT_FINI_ARRAY
LOAD:000000000060BE70                 Elf64_Dyn <1Ch, 8>      ; DT_FINI_ARRAYSZ
LOAD:000000000060BE80                 Elf64_Dyn <6FFFFEF5h, 400298h> ; DT_GNU_HASH
LOAD:000000000060BE90                 Elf64_Dyn <5, 400518h>  ; DT_STRTAB
LOAD:000000000060BEA0                 Elf64_Dyn <6, 4002C0h>  ; DT_SYMTAB
LOAD:000000000060BEB0                 Elf64_Dyn <0Ah, 19Eh>   ; DT_STRSZ
LOAD:000000000060BEC0                 Elf64_Dyn <0Bh, 18h>    ; DT_SYMENT
LOAD:000000000060BED0                 Elf64_Dyn <15h, 0>      ; DT_DEBUG
LOAD:000000000060BEE0                 Elf64_Dyn <3, 60C000h>  ; DT_PLTGOT
LOAD:000000000060BEF0                 Elf64_Dyn <2, 1C8h>     ; DT_PLTRELSZ
LOAD:000000000060BF00                 Elf64_Dyn <14h, 7>      ; DT_PLTREL
LOAD:000000000060BF10                 Elf64_Dyn <17h, 4007A0h> ; DT_JMPREL
LOAD:000000000060BF20                 Elf64_Dyn <7, 400728h>  ; DT_RELA
LOAD:000000000060BF30                 Elf64_Dyn <8, 78h>      ; DT_RELASZ
LOAD:000000000060BF40                 Elf64_Dyn <9, 18h>      ; DT_RELAENT
LOAD:000000000060BF50                 Elf64_Dyn <6FFFFFFEh, 4006E8h> ; DT_VERNEED
LOAD:000000000060BF60                 Elf64_Dyn <6FFFFFFFh, 2> ; DT_VERNEEDNUM
LOAD:000000000060BF70                 Elf64_Dyn <6FFFFFF0h, 4006B6h> ; DT_VERSYM
LOAD:000000000060BF80                 Elf64_Dyn <0>           ; DT_NULL
LOAD:000000000060BF90                 db    0
LOAD:000000000060BF91                 db    0
LOAD:000000000060BF92                 db    0
LOAD:000000000060BF93                 db    0
LOAD:000000000060BF94                 db    0
LOAD:000000000060BF95                 db    0
LOAD:000000000060BF96                 db    0
LOAD:000000000060BF97                 db    0
LOAD:000000000060BF98                 db    0
LOAD:000000000060BF99                 db    0
LOAD:000000000060BF9A                 db    0
LOAD:000000000060BF9B                 db    0
LOAD:000000000060BF9C                 db    0
LOAD:000000000060BF9D                 db    0
LOAD:000000000060BF9E                 db    0
LOAD:000000000060BF9F                 db    0
LOAD:000000000060BFA0                 db    0
LOAD:000000000060BFA1                 db    0
LOAD:000000000060BFA2                 db    0
LOAD:000000000060BFA3                 db    0
LOAD:000000000060BFA4                 db    0
LOAD:000000000060BFA5                 db    0
LOAD:000000000060BFA6                 db    0
LOAD:000000000060BFA7                 db    0
LOAD:000000000060BFA8                 db    0
LOAD:000000000060BFA9                 db    0
LOAD:000000000060BFAA                 db    0
LOAD:000000000060BFAB                 db    0
LOAD:000000000060BFAC                 db    0
LOAD:000000000060BFAD                 db    0
LOAD:000000000060BFAE                 db    0
LOAD:000000000060BFAF                 db    0
LOAD:000000000060BFB0                 db    0
LOAD:000000000060BFB1                 db    0
LOAD:000000000060BFB2                 db    0
LOAD:000000000060BFB3                 db    0
LOAD:000000000060BFB4                 db    0
LOAD:000000000060BFB5                 db    0
LOAD:000000000060BFB6                 db    0
LOAD:000000000060BFB7                 db    0
LOAD:000000000060BFB8                 db    0
LOAD:000000000060BFB9                 db    0
LOAD:000000000060BFBA                 db    0
LOAD:000000000060BFBB                 db    0
LOAD:000000000060BFBC                 db    0
LOAD:000000000060BFBD                 db    0
LOAD:000000000060BFBE                 db    0
LOAD:000000000060BFBF                 db    0
LOAD:000000000060BFC0                 db    0
LOAD:000000000060BFC1                 db    0
LOAD:000000000060BFC2                 db    0
LOAD:000000000060BFC3                 db    0
LOAD:000000000060BFC4                 db    0
LOAD:000000000060BFC5                 db    0
LOAD:000000000060BFC6                 db    0
LOAD:000000000060BFC7                 db    0
LOAD:000000000060BFC8                 db    0
LOAD:000000000060BFC9                 db    0
LOAD:000000000060BFCA                 db    0
LOAD:000000000060BFCB                 db    0
LOAD:000000000060BFCC                 db    0
LOAD:000000000060BFCD                 db    0
LOAD:000000000060BFCE                 db    0
LOAD:000000000060BFCF                 db    0
LOAD:000000000060BFD0                 db    0
LOAD:000000000060BFD1                 db    0
LOAD:000000000060BFD2                 db    0
LOAD:000000000060BFD3                 db    0
LOAD:000000000060BFD4                 db    0
LOAD:000000000060BFD5                 db    0
LOAD:000000000060BFD6                 db    0
LOAD:000000000060BFD7                 db    0
LOAD:000000000060BFD8                 db    0
LOAD:000000000060BFD9                 db    0
LOAD:000000000060BFDA                 db    0
LOAD:000000000060BFDB                 db    0
LOAD:000000000060BFDC                 db    0
LOAD:000000000060BFDD                 db    0
LOAD:000000000060BFDE                 db    0
LOAD:000000000060BFDF                 db    0
LOAD:000000000060BFDF LOAD            ends
LOAD:000000000060BFDF
.got:000000000060BFE0 ; ===========================================================================
.got:000000000060BFE0
.got:000000000060BFE0 ; Segment type: Pure data
.got:000000000060BFE0 ; Segment permissions: Read/Write
.got:000000000060BFE0 ; Segment alignment 'qword' can not be represented in assembly
.got:000000000060BFE0 _got            segment para public 'DATA' use64
.got:000000000060BFE0                 assume cs:_got
.got:000000000060BFE0                 ;org 60BFE0h
.got:000000000060BFE0 __gmon_start___ptr dq offset __gmon_start__
.got:000000000060BFE0                                         ; DATA XREF: _init_proc+4↑r
.got:000000000060BFE8 __libc_start_main_ptr dq offset __libc_start_main
.got:000000000060BFE8                                         ; DATA XREF: _start+24↑r
.got:000000000060BFF0 _ZNSt8ios_base4InitD1Ev_ptr dq offset _ZNSt8ios_base4InitD1Ev
.got:000000000060BFF0                                         ; DATA XREF: __static_initialization_and_destruction_0(int,int)+37↑r
.got:000000000060BFF0                                         ; std::ios_base::Init::~Init()
.got:000000000060BFF8 _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr dq offset _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.got:000000000060BFF8                                         ; DATA XREF: main+5F↑r
.got:000000000060BFF8                                         ; main+74↑r ...
.got:000000000060BFF8 _got            ends                    ; std::endl<char,std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &)
.got:000000000060BFF8
.got.plt:000000000060C000 ; ===========================================================================
.got.plt:000000000060C000
.got.plt:000000000060C000 ; Segment type: Pure data
.got.plt:000000000060C000 ; Segment permissions: Read/Write
.got.plt:000000000060C000 ; Segment alignment 'qword' can not be represented in assembly
.got.plt:000000000060C000 _got_plt        segment para public 'DATA' use64
.got.plt:000000000060C000                 assume cs:_got_plt
.got.plt:000000000060C000                 ;org 60C000h
.got.plt:000000000060C000 _GLOBAL_OFFSET_TABLE_ dq offset _DYNAMIC
.got.plt:000000000060C008 qword_60C008    dq 0                    ; DATA XREF: sub_400980↑r
.got.plt:000000000060C010 qword_60C010    dq 0                    ; DATA XREF: sub_400980+6↑r
.got.plt:000000000060C018 off_60C018      dq offset _ZNSolsEl     ; DATA XREF: std::ostream::operator<<(long)↑r
.got.plt:000000000060C018                                         ; std::ostream::operator<<(long)
.got.plt:000000000060C020 off_60C020      dq offset close         ; DATA XREF: _close↑r
.got.plt:000000000060C028 off_60C028      dq offset asctime       ; DATA XREF: _asctime↑r
.got.plt:000000000060C030 off_60C030      dq offset isatty        ; DATA XREF: _isatty↑r
.got.plt:000000000060C038 off_60C038      dq offset gethostbyname ; DATA XREF: _gethostbyname↑r
.got.plt:000000000060C040 off_60C040      dq offset htons         ; DATA XREF: _htons↑r
.got.plt:000000000060C048 off_60C048      dq offset _ZNSt8ios_base4InitC1Ev
.got.plt:000000000060C048                                         ; DATA XREF: std::ios_base::Init::Init(void)↑r
.got.plt:000000000060C048                                         ; std::ios_base::Init::Init(void)
.got.plt:000000000060C050 off_60C050      dq offset recv          ; DATA XREF: _recv↑r
.got.plt:000000000060C058 off_60C058      dq offset __cxa_atexit  ; DATA XREF: ___cxa_atexit↑r
.got.plt:000000000060C060 off_60C060      dq offset _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.got.plt:000000000060C060                                         ; DATA XREF: std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)↑r
.got.plt:000000000060C060                                         ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.got.plt:000000000060C068 off_60C068      dq offset ntohl         ; DATA XREF: _ntohl↑r
.got.plt:000000000060C070 off_60C070      dq offset sub_408E38    ; DATA XREF: sub_400A40↑r
.got.plt:000000000060C078 off_60C078      dq offset connect       ; DATA XREF: _connect↑r
.got.plt:000000000060C080 off_60C080      dq offset stime         ; DATA XREF: _stime↑r
.got.plt:000000000060C088 off_60C088      dq offset socket        ; DATA XREF: _socket↑r
.got.plt:000000000060C090 off_60C090      dq offset send          ; DATA XREF: _send↑r
.got.plt:000000000060C098 off_60C098      dq offset _ZNSolsEPFRSoS_E
.got.plt:000000000060C098                                         ; DATA XREF: std::ostream::operator<<(std::ostream & (*)(std::ostream &))↑r
.got.plt:000000000060C098                                         ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.got.plt:000000000060C0A0 off_60C0A0      dq offset localtime     ; DATA XREF: _localtime↑r
.got.plt:000000000060C0A8 off_60C0A8      dq offset time          ; DATA XREF: _time↑r
.got.plt:000000000060C0A8 _got_plt        ends
.got.plt:000000000060C0A8
LOAD:000000000060C0B0 ; ===========================================================================
LOAD:000000000060C0B0
LOAD:000000000060C0B0 ; Segment type: Pure data
LOAD:000000000060C0B0 ; Segment permissions: Read/Write
LOAD:000000000060C0B0 LOAD            segment byte public 'DATA' use64
LOAD:000000000060C0B0                 assume cs:LOAD
LOAD:000000000060C0B0                 ;org 60C0B0h
LOAD:000000000060C0B0                 align 20h
LOAD:000000000060C0B0 LOAD            ends
LOAD:000000000060C0B0
.data:000000000060C0C0 ; ===========================================================================
.data:000000000060C0C0
.data:000000000060C0C0 ; Segment type: Pure data
.data:000000000060C0C0 ; Segment permissions: Read/Write
.data:000000000060C0C0 ; Segment alignment '32byte' can not be represented in assembly
.data:000000000060C0C0 _data           segment para public 'DATA' use64
.data:000000000060C0C0                 assume cs:_data
.data:000000000060C0C0                 ;org 60C0C0h
.data:000000000060C0C0                 public __data_start ; weak
.data:000000000060C0C0 __data_start    db    0                 ; Alternative name is '__data_start'
.data:000000000060C0C0                                         ; data_start
.data:000000000060C0C1                 db    0
.data:000000000060C0C2                 db    0
.data:000000000060C0C3                 db    0
.data:000000000060C0C4                 db    0
.data:000000000060C0C5                 db    0
.data:000000000060C0C6                 db    0
.data:000000000060C0C7                 db    0
.data:000000000060C0C8                 public __dso_handle
.data:000000000060C0C8 __dso_handle    db    0                 ; DATA XREF: __static_initialization_and_destruction_0(int,int)+29↑o
.data:000000000060C0C9                 db    0
.data:000000000060C0CA                 db    0
.data:000000000060C0CB                 db    0
.data:000000000060C0CC                 db    0
.data:000000000060C0CD                 db    0
.data:000000000060C0CE                 db    0
.data:000000000060C0CF                 db    0
.data:000000000060C0D0 qword_60C0D0    dq 0                    ; DATA XREF: sub_4019A0+29↑r
.data:000000000060C0D0                                         ; sub_4019A0+4E↑w ...
.data:000000000060C0D8                 align 20h
.data:000000000060C0E0 unk_60C0E0      db    1                 ; DATA XREF: sub_40A433+8↑o
.data:000000000060C0E0                                         ; sub_40A433:loc_40A59E↑o ...
.data:000000000060C0E1                 db    0
.data:000000000060C0E2                 db    0
.data:000000000060C0E3                 db    0
.data:000000000060C0E4                 db    0
.data:000000000060C0E5                 db    0
.data:000000000060C0E6                 db    0
.data:000000000060C0E7                 db    0
.data:000000000060C0E8                 db    0
.data:000000000060C0E9                 db    0
.data:000000000060C0EA                 db    0
.data:000000000060C0EB                 db    0
.data:000000000060C0EC                 db    0
.data:000000000060C0ED                 db    0
.data:000000000060C0EE                 db    0
.data:000000000060C0EF                 db    0
.data:000000000060C0F0                 db    0
.data:000000000060C0F1                 db    0
.data:000000000060C0F2                 db    0
.data:000000000060C0F3                 db    0
.data:000000000060C0F4                 db    0
.data:000000000060C0F5                 db    0
.data:000000000060C0F6                 db    0
.data:000000000060C0F7                 db    0
.data:000000000060C0F8                 db    0
.data:000000000060C0F9                 db    0
.data:000000000060C0FA                 db    0
.data:000000000060C0FB                 db    0
.data:000000000060C0FC                 db    0
.data:000000000060C0FD                 db    0
.data:000000000060C0FE                 db    0
.data:000000000060C0FF                 db    0
.data:000000000060C100 unk_60C100      db    9                 ; DATA XREF: getMem:loc_40AC78↑o
.data:000000000060C101                 db    0
.data:000000000060C102                 db    0
.data:000000000060C103                 db    0
.data:000000000060C104                 db    0
.data:000000000060C105                 db    0
.data:000000000060C106                 db    0
.data:000000000060C107                 db    0
.data:000000000060C108                 db    0
.data:000000000060C109                 db    0
.data:000000000060C10A                 db    0
.data:000000000060C10B                 db    0
.data:000000000060C10C                 db    0
.data:000000000060C10D                 db    0
.data:000000000060C10E                 db    0
.data:000000000060C10F                 db    0
.data:000000000060C110                 db    0
.data:000000000060C111                 db    0
.data:000000000060C112                 db    0
.data:000000000060C113                 db    0
.data:000000000060C114                 db    0
.data:000000000060C115                 db    0
.data:000000000060C116                 db    0
.data:000000000060C117                 db    0
.data:000000000060C118                 db    0
.data:000000000060C119                 db    0
.data:000000000060C11A                 db    0
.data:000000000060C11B                 db    0
.data:000000000060C11C                 db    0
.data:000000000060C11D                 db    0
.data:000000000060C11E                 db    0
.data:000000000060C11F                 db    0
.data:000000000060C120                 db    0
.data:000000000060C121                 db    0
.data:000000000060C122                 db    0
.data:000000000060C123                 db    0
.data:000000000060C124                 db    0
.data:000000000060C125                 db    0
.data:000000000060C126                 db    0
.data:000000000060C127                 db    0
.data:000000000060C128                 db    0
.data:000000000060C129                 db    0
.data:000000000060C12A                 db    0
.data:000000000060C12B                 db    0
.data:000000000060C12C                 db    0
.data:000000000060C12D                 db    0
.data:000000000060C12E                 db    0
.data:000000000060C12F                 db    0
.data:000000000060C130                 db    0
.data:000000000060C131                 db    0
.data:000000000060C132                 db    0
.data:000000000060C133                 db    0
.data:000000000060C134                 db    0
.data:000000000060C135                 db    0
.data:000000000060C136                 db    0
.data:000000000060C137                 db    0
.data:000000000060C138                 db    0
.data:000000000060C139                 db    0
.data:000000000060C13A                 db    0
.data:000000000060C13B                 db    0
.data:000000000060C13C                 db    0
.data:000000000060C13D                 db    0
.data:000000000060C13E                 db    0
.data:000000000060C13F                 db    0
.data:000000000060C140                 db    0
.data:000000000060C141                 db    0
.data:000000000060C142                 db    0
.data:000000000060C143                 db    0
.data:000000000060C144                 db    0
.data:000000000060C145                 db    0
.data:000000000060C146                 db    0
.data:000000000060C147                 db    0
.data:000000000060C148                 db    0
.data:000000000060C149                 db    0
.data:000000000060C14A                 db    0
.data:000000000060C14B                 db    0
.data:000000000060C14C                 db    0
.data:000000000060C14D                 db    0
.data:000000000060C14E                 db    0
.data:000000000060C14F                 db    0
.data:000000000060C150                 db    0
.data:000000000060C151                 db    0
.data:000000000060C152                 db    0
.data:000000000060C153                 db    0
.data:000000000060C154                 db    0
.data:000000000060C155                 db    0
.data:000000000060C156                 db    0
.data:000000000060C157                 db    0
.data:000000000060C158                 db    0
.data:000000000060C159                 db    0
.data:000000000060C15A                 db    0
.data:000000000060C15B                 db    0
.data:000000000060C15C                 db    0
.data:000000000060C15D                 db    0
.data:000000000060C15E                 db    0
.data:000000000060C15F                 db    0
.data:000000000060C160                 db    0
.data:000000000060C161                 db    0
.data:000000000060C162                 db    0
.data:000000000060C163                 db    0
.data:000000000060C164                 db    0
.data:000000000060C165                 db    0
.data:000000000060C166                 db    0
.data:000000000060C167                 db    0
.data:000000000060C168                 db    0
.data:000000000060C169                 db    0
.data:000000000060C16A                 db    0
.data:000000000060C16B                 db    0
.data:000000000060C16C                 db    0
.data:000000000060C16D                 db    0
.data:000000000060C16E                 db    0
.data:000000000060C16F                 db    0
.data:000000000060C170                 db    0
.data:000000000060C171                 db    0
.data:000000000060C172                 db    0
.data:000000000060C173                 db    0
.data:000000000060C174                 db    0
.data:000000000060C175                 db    0
.data:000000000060C176                 db    0
.data:000000000060C177                 db    0
.data:000000000060C178                 db    0
.data:000000000060C179                 db    0
.data:000000000060C17A                 db    0
.data:000000000060C17B                 db    0
.data:000000000060C17C                 db    0
.data:000000000060C17D                 db    0
.data:000000000060C17E                 db    0
.data:000000000060C17F                 db    0
.data:000000000060C180                 db    0
.data:000000000060C181                 db    0
.data:000000000060C182                 db    0
.data:000000000060C183                 db    0
.data:000000000060C184                 db    0
.data:000000000060C185                 db    0
.data:000000000060C186                 db    0
.data:000000000060C187                 db    0
.data:000000000060C188                 db    0
.data:000000000060C189                 db    0
.data:000000000060C18A                 db    0
.data:000000000060C18B                 db    0
.data:000000000060C18C                 db    0
.data:000000000060C18D                 db    0
.data:000000000060C18E                 db    0
.data:000000000060C18F                 db    0
.data:000000000060C190                 db    0
.data:000000000060C191                 db    0
.data:000000000060C192                 db    0
.data:000000000060C193                 db    0
.data:000000000060C194                 db    0
.data:000000000060C195                 db    0
.data:000000000060C196                 db    0
.data:000000000060C197                 db    0
.data:000000000060C198                 db    0
.data:000000000060C199                 db    0
.data:000000000060C19A                 db    0
.data:000000000060C19B                 db    0
.data:000000000060C19C                 db    0
.data:000000000060C19D                 db    0
.data:000000000060C19E                 db    0
.data:000000000060C19F                 db    0
.data:000000000060C1A0                 db    0
.data:000000000060C1A1                 db    0
.data:000000000060C1A2                 db    0
.data:000000000060C1A3                 db    0
.data:000000000060C1A4                 db    0
.data:000000000060C1A5                 db    0
.data:000000000060C1A6                 db    0
.data:000000000060C1A7                 db    0
.data:000000000060C1A8                 db    0
.data:000000000060C1A9                 db    0
.data:000000000060C1AA                 db    0
.data:000000000060C1AB                 db    0
.data:000000000060C1AC                 db    0
.data:000000000060C1AD                 db    0
.data:000000000060C1AE                 db    0
.data:000000000060C1AF                 db    0
.data:000000000060C1B0                 db    0
.data:000000000060C1B1                 db    0
.data:000000000060C1B2                 db    0
.data:000000000060C1B3                 db    0
.data:000000000060C1B4                 db    0
.data:000000000060C1B5                 db    0
.data:000000000060C1B6                 db    0
.data:000000000060C1B7                 db    0
.data:000000000060C1B8                 db    0
.data:000000000060C1B9                 db    0
.data:000000000060C1BA                 db    0
.data:000000000060C1BB                 db    0
.data:000000000060C1BC                 db    0
.data:000000000060C1BD                 db    0
.data:000000000060C1BE                 db    0
.data:000000000060C1BF                 db    0
.data:000000000060C1C0                 db    0
.data:000000000060C1C1                 db    0
.data:000000000060C1C2                 db    0
.data:000000000060C1C3                 db    0
.data:000000000060C1C4                 db    0
.data:000000000060C1C5                 db    0
.data:000000000060C1C6                 db    0
.data:000000000060C1C7                 db    0
.data:000000000060C1C8                 db    0
.data:000000000060C1C9                 db    0
.data:000000000060C1CA                 db    0
.data:000000000060C1CB                 db    0
.data:000000000060C1CC                 db    0
.data:000000000060C1CD                 db    0
.data:000000000060C1CE                 db    0
.data:000000000060C1CF                 db    0
.data:000000000060C1D0                 db    0
.data:000000000060C1D1                 db    0
.data:000000000060C1D2                 db    0
.data:000000000060C1D3                 db    0
.data:000000000060C1D4                 db    0
.data:000000000060C1D5                 db    0
.data:000000000060C1D6                 db    0
.data:000000000060C1D7                 db    0
.data:000000000060C1D8                 db    0
.data:000000000060C1D9                 db    0
.data:000000000060C1DA                 db    0
.data:000000000060C1DB                 db    0
.data:000000000060C1DC                 db    0
.data:000000000060C1DD                 db    0
.data:000000000060C1DE                 db    0
.data:000000000060C1DF                 db    0
.data:000000000060C1E0                 db    0
.data:000000000060C1E1                 db    0
.data:000000000060C1E2                 db    0
.data:000000000060C1E3                 db    0
.data:000000000060C1E4                 db    0
.data:000000000060C1E5                 db    0
.data:000000000060C1E6                 db    0
.data:000000000060C1E7                 db    0
.data:000000000060C1E8                 db    0
.data:000000000060C1E9                 db    0
.data:000000000060C1EA                 db    0
.data:000000000060C1EB                 db    0
.data:000000000060C1EC                 db    0
.data:000000000060C1ED                 db    0
.data:000000000060C1EE                 db    0
.data:000000000060C1EF                 db    0
.data:000000000060C1F0                 db    0
.data:000000000060C1F1                 db    0
.data:000000000060C1F2                 db    0
.data:000000000060C1F3                 db    0
.data:000000000060C1F4                 db    0
.data:000000000060C1F5                 db    0
.data:000000000060C1F6                 db    0
.data:000000000060C1F7                 db    0
.data:000000000060C1F8                 db    0
.data:000000000060C1F9                 db    0
.data:000000000060C1FA                 db    0
.data:000000000060C1FB                 db    0
.data:000000000060C1FC                 db    0
.data:000000000060C1FD                 db    0
.data:000000000060C1FE                 db    0
.data:000000000060C1FF                 db    0
.data:000000000060C200                 db    0
.data:000000000060C201                 db    0
.data:000000000060C202                 db    0
.data:000000000060C203                 db    0
.data:000000000060C204                 db    0
.data:000000000060C205                 db    0
.data:000000000060C206                 db    0
.data:000000000060C207                 db    0
.data:000000000060C208                 db    0
.data:000000000060C209                 db    0
.data:000000000060C20A                 db    0
.data:000000000060C20B                 db    0
.data:000000000060C20C                 db    0
.data:000000000060C20D                 db    0
.data:000000000060C20E                 db    0
.data:000000000060C20F                 db    0
.data:000000000060C210                 db    0
.data:000000000060C211                 db    0
.data:000000000060C212                 db    0
.data:000000000060C213                 db    0
.data:000000000060C214                 db    0
.data:000000000060C215                 db    0
.data:000000000060C216                 db    0
.data:000000000060C217                 db    0
.data:000000000060C218                 db    0
.data:000000000060C219                 db    0
.data:000000000060C21A                 db    0
.data:000000000060C21B                 db    0
.data:000000000060C21C                 db    0
.data:000000000060C21D                 db    0
.data:000000000060C21E                 db    0
.data:000000000060C21F                 db    0
.data:000000000060C220                 db    0
.data:000000000060C221                 db    0
.data:000000000060C222                 db    0
.data:000000000060C223                 db    0
.data:000000000060C224                 db    0
.data:000000000060C225                 db    0
.data:000000000060C226                 db    0
.data:000000000060C227                 db    0
.data:000000000060C228                 db    0
.data:000000000060C229                 db    0
.data:000000000060C22A                 db    0
.data:000000000060C22B                 db    0
.data:000000000060C22C                 db    0
.data:000000000060C22D                 db    0
.data:000000000060C22E                 db    0
.data:000000000060C22F                 db    0
.data:000000000060C230                 db    0
.data:000000000060C231                 db    0
.data:000000000060C232                 db    0
.data:000000000060C233                 db    0
.data:000000000060C234                 db    0
.data:000000000060C235                 db    0
.data:000000000060C236                 db    0
.data:000000000060C237                 db    0
.data:000000000060C238                 db    0
.data:000000000060C239                 db    0
.data:000000000060C23A                 db    0
.data:000000000060C23B                 db    0
.data:000000000060C23C                 db    0
.data:000000000060C23D                 db    0
.data:000000000060C23E                 db    0
.data:000000000060C23F                 db    0
.data:000000000060C240                 db    0
.data:000000000060C241                 db    0
.data:000000000060C242                 db    0
.data:000000000060C243                 db    0
.data:000000000060C244                 db    0
.data:000000000060C245                 db    0
.data:000000000060C246                 db    0
.data:000000000060C247                 db    0
.data:000000000060C248                 db    0
.data:000000000060C249                 db    0
.data:000000000060C24A                 db    0
.data:000000000060C24B                 db    0
.data:000000000060C24C                 db    0
.data:000000000060C24D                 db    0
.data:000000000060C24E                 db    0
.data:000000000060C24F                 db    0
.data:000000000060C250                 db    0
.data:000000000060C251                 db    0
.data:000000000060C252                 db    0
.data:000000000060C253                 db    0
.data:000000000060C254                 db    0
.data:000000000060C255                 db    0
.data:000000000060C256                 db    0
.data:000000000060C257                 db    0
.data:000000000060C258                 db    0
.data:000000000060C259                 db    0
.data:000000000060C25A                 db    0
.data:000000000060C25B                 db    0
.data:000000000060C25C                 db    0
.data:000000000060C25D                 db    0
.data:000000000060C25E                 db    0
.data:000000000060C25F                 db    0
.data:000000000060C260                 db    0
.data:000000000060C261                 db    0
.data:000000000060C262                 db    0
.data:000000000060C263                 db    0
.data:000000000060C264                 db    0
.data:000000000060C265                 db    0
.data:000000000060C266                 db    0
.data:000000000060C267                 db    0
.data:000000000060C268                 db    0
.data:000000000060C269                 db    0
.data:000000000060C26A                 db    0
.data:000000000060C26B                 db    0
.data:000000000060C26C dword_60C26C    dd 3Ch                  ; DATA XREF: sub_401B84:loc_401BD1↑r
.data:000000000060C26C                                         ; sub_401B84:loc_401BFD↑r ...
.data:000000000060C26C _data           ends
.data:000000000060C26C
LOAD:000000000060C270 ; ===========================================================================
LOAD:000000000060C270
LOAD:000000000060C270 ; Segment type: Pure data
LOAD:000000000060C270 ; Segment permissions: Read/Write
LOAD:000000000060C270 LOAD            segment byte public 'DATA' use64
LOAD:000000000060C270                 assume cs:LOAD
LOAD:000000000060C270                 ;org 60C270h
LOAD:000000000060C270                 public _edata
LOAD:000000000060C270 _edata          db    ? ;               ; DATA XREF: deregister_tm_clones+1↑o
LOAD:000000000060C270                                         ; deregister_tm_clones+6↑o ...
LOAD:000000000060C270                                         ; Alternative name is '__bss_start'
LOAD:000000000060C270                                         ; __TMC_END__
LOAD:000000000060C270                                         ; __bss_start
LOAD:000000000060C271                 db    ? ;
LOAD:000000000060C272                 db    ? ;
LOAD:000000000060C273                 db    ? ;
LOAD:000000000060C274                 db    ? ;
LOAD:000000000060C275                 db    ? ;
LOAD:000000000060C276                 db    ? ;
LOAD:000000000060C277                 db    ? ;
LOAD:000000000060C278                 db    ? ;
LOAD:000000000060C279                 db    ? ;
LOAD:000000000060C27A                 db    ? ;
LOAD:000000000060C27B                 db    ? ;
LOAD:000000000060C27C                 db    ? ;
LOAD:000000000060C27D                 db    ? ;
LOAD:000000000060C27E                 db    ? ;
LOAD:000000000060C27F                 db    ? ;
LOAD:000000000060C27F LOAD            ends
LOAD:000000000060C27F
.bss:000000000060C280 ; ===========================================================================
.bss:000000000060C280
.bss:000000000060C280 ; Segment type: Uninitialized
.bss:000000000060C280 ; Segment permissions: Read/Write
.bss:000000000060C280 ; Segment alignment '32byte' can not be represented in assembly
.bss:000000000060C280 _bss            segment para public 'BSS' use64
.bss:000000000060C280                 assume cs:_bss
.bss:000000000060C280                 ;org 60C280h
.bss:000000000060C280                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:000000000060C280                 public _ZSt4cout@@GLIBCXX_3_4
.bss:000000000060C280 _ZSt4cout@@GLIBCXX_3_4 db    ? ;        ; DATA XREF: LOAD:0000000000400500↑o
.bss:000000000060C280                                         ; main+1D↑o ...
.bss:000000000060C280                                         ; Alternative name is 'std::cout'
.bss:000000000060C280                                         ; Copy of shared data
.bss:000000000060C281                 db    ? ;
.bss:000000000060C282                 db    ? ;
.bss:000000000060C283                 db    ? ;
.bss:000000000060C284                 db    ? ;
.bss:000000000060C285                 db    ? ;
.bss:000000000060C286                 db    ? ;
.bss:000000000060C287                 db    ? ;
.bss:000000000060C288                 db    ? ;
.bss:000000000060C289                 db    ? ;
.bss:000000000060C28A                 db    ? ;
.bss:000000000060C28B                 db    ? ;
.bss:000000000060C28C                 db    ? ;
.bss:000000000060C28D                 db    ? ;
.bss:000000000060C28E                 db    ? ;
.bss:000000000060C28F                 db    ? ;
.bss:000000000060C290                 db    ? ;
.bss:000000000060C291                 db    ? ;
.bss:000000000060C292                 db    ? ;
.bss:000000000060C293                 db    ? ;
.bss:000000000060C294                 db    ? ;
.bss:000000000060C295                 db    ? ;
.bss:000000000060C296                 db    ? ;
.bss:000000000060C297                 db    ? ;
.bss:000000000060C298                 db    ? ;
.bss:000000000060C299                 db    ? ;
.bss:000000000060C29A                 db    ? ;
.bss:000000000060C29B                 db    ? ;
.bss:000000000060C29C                 db    ? ;
.bss:000000000060C29D                 db    ? ;
.bss:000000000060C29E                 db    ? ;
.bss:000000000060C29F                 db    ? ;
.bss:000000000060C2A0                 db    ? ;
.bss:000000000060C2A1                 db    ? ;
.bss:000000000060C2A2                 db    ? ;
.bss:000000000060C2A3                 db    ? ;
.bss:000000000060C2A4                 db    ? ;
.bss:000000000060C2A5                 db    ? ;
.bss:000000000060C2A6                 db    ? ;
.bss:000000000060C2A7                 db    ? ;
.bss:000000000060C2A8                 db    ? ;
.bss:000000000060C2A9                 db    ? ;
.bss:000000000060C2AA                 db    ? ;
.bss:000000000060C2AB                 db    ? ;
.bss:000000000060C2AC                 db    ? ;
.bss:000000000060C2AD                 db    ? ;
.bss:000000000060C2AE                 db    ? ;
.bss:000000000060C2AF                 db    ? ;
.bss:000000000060C2B0                 db    ? ;
.bss:000000000060C2B1                 db    ? ;
.bss:000000000060C2B2                 db    ? ;
.bss:000000000060C2B3                 db    ? ;
.bss:000000000060C2B4                 db    ? ;
.bss:000000000060C2B5                 db    ? ;
.bss:000000000060C2B6                 db    ? ;
.bss:000000000060C2B7                 db    ? ;
.bss:000000000060C2B8                 db    ? ;
.bss:000000000060C2B9                 db    ? ;
.bss:000000000060C2BA                 db    ? ;
.bss:000000000060C2BB                 db    ? ;
.bss:000000000060C2BC                 db    ? ;
.bss:000000000060C2BD                 db    ? ;
.bss:000000000060C2BE                 db    ? ;
.bss:000000000060C2BF                 db    ? ;
.bss:000000000060C2C0                 db    ? ;
.bss:000000000060C2C1                 db    ? ;
.bss:000000000060C2C2                 db    ? ;
.bss:000000000060C2C3                 db    ? ;
.bss:000000000060C2C4                 db    ? ;
.bss:000000000060C2C5                 db    ? ;
.bss:000000000060C2C6                 db    ? ;
.bss:000000000060C2C7                 db    ? ;
.bss:000000000060C2C8                 db    ? ;
.bss:000000000060C2C9                 db    ? ;
.bss:000000000060C2CA                 db    ? ;
.bss:000000000060C2CB                 db    ? ;
.bss:000000000060C2CC                 db    ? ;
.bss:000000000060C2CD                 db    ? ;
.bss:000000000060C2CE                 db    ? ;
.bss:000000000060C2CF                 db    ? ;
.bss:000000000060C2D0                 db    ? ;
.bss:000000000060C2D1                 db    ? ;
.bss:000000000060C2D2                 db    ? ;
.bss:000000000060C2D3                 db    ? ;
.bss:000000000060C2D4                 db    ? ;
.bss:000000000060C2D5                 db    ? ;
.bss:000000000060C2D6                 db    ? ;
.bss:000000000060C2D7                 db    ? ;
.bss:000000000060C2D8                 db    ? ;
.bss:000000000060C2D9                 db    ? ;
.bss:000000000060C2DA                 db    ? ;
.bss:000000000060C2DB                 db    ? ;
.bss:000000000060C2DC                 db    ? ;
.bss:000000000060C2DD                 db    ? ;
.bss:000000000060C2DE                 db    ? ;
.bss:000000000060C2DF                 db    ? ;
.bss:000000000060C2E0                 db    ? ;
.bss:000000000060C2E1                 db    ? ;
.bss:000000000060C2E2                 db    ? ;
.bss:000000000060C2E3                 db    ? ;
.bss:000000000060C2E4                 db    ? ;
.bss:000000000060C2E5                 db    ? ;
.bss:000000000060C2E6                 db    ? ;
.bss:000000000060C2E7                 db    ? ;
.bss:000000000060C2E8                 db    ? ;
.bss:000000000060C2E9                 db    ? ;
.bss:000000000060C2EA                 db    ? ;
.bss:000000000060C2EB                 db    ? ;
.bss:000000000060C2EC                 db    ? ;
.bss:000000000060C2ED                 db    ? ;
.bss:000000000060C2EE                 db    ? ;
.bss:000000000060C2EF                 db    ? ;
.bss:000000000060C2F0                 db    ? ;
.bss:000000000060C2F1                 db    ? ;
.bss:000000000060C2F2                 db    ? ;
.bss:000000000060C2F3                 db    ? ;
.bss:000000000060C2F4                 db    ? ;
.bss:000000000060C2F5                 db    ? ;
.bss:000000000060C2F6                 db    ? ;
.bss:000000000060C2F7                 db    ? ;
.bss:000000000060C2F8                 db    ? ;
.bss:000000000060C2F9                 db    ? ;
.bss:000000000060C2FA                 db    ? ;
.bss:000000000060C2FB                 db    ? ;
.bss:000000000060C2FC                 db    ? ;
.bss:000000000060C2FD                 db    ? ;
.bss:000000000060C2FE                 db    ? ;
.bss:000000000060C2FF                 db    ? ;
.bss:000000000060C300                 db    ? ;
.bss:000000000060C301                 db    ? ;
.bss:000000000060C302                 db    ? ;
.bss:000000000060C303                 db    ? ;
.bss:000000000060C304                 db    ? ;
.bss:000000000060C305                 db    ? ;
.bss:000000000060C306                 db    ? ;
.bss:000000000060C307                 db    ? ;
.bss:000000000060C308                 db    ? ;
.bss:000000000060C309                 db    ? ;
.bss:000000000060C30A                 db    ? ;
.bss:000000000060C30B                 db    ? ;
.bss:000000000060C30C                 db    ? ;
.bss:000000000060C30D                 db    ? ;
.bss:000000000060C30E                 db    ? ;
.bss:000000000060C30F                 db    ? ;
.bss:000000000060C310                 db    ? ;
.bss:000000000060C311                 db    ? ;
.bss:000000000060C312                 db    ? ;
.bss:000000000060C313                 db    ? ;
.bss:000000000060C314                 db    ? ;
.bss:000000000060C315                 db    ? ;
.bss:000000000060C316                 db    ? ;
.bss:000000000060C317                 db    ? ;
.bss:000000000060C318                 db    ? ;
.bss:000000000060C319                 db    ? ;
.bss:000000000060C31A                 db    ? ;
.bss:000000000060C31B                 db    ? ;
.bss:000000000060C31C                 db    ? ;
.bss:000000000060C31D                 db    ? ;
.bss:000000000060C31E                 db    ? ;
.bss:000000000060C31F                 db    ? ;
.bss:000000000060C320                 db    ? ;
.bss:000000000060C321                 db    ? ;
.bss:000000000060C322                 db    ? ;
.bss:000000000060C323                 db    ? ;
.bss:000000000060C324                 db    ? ;
.bss:000000000060C325                 db    ? ;
.bss:000000000060C326                 db    ? ;
.bss:000000000060C327                 db    ? ;
.bss:000000000060C328                 db    ? ;
.bss:000000000060C329                 db    ? ;
.bss:000000000060C32A                 db    ? ;
.bss:000000000060C32B                 db    ? ;
.bss:000000000060C32C                 db    ? ;
.bss:000000000060C32D                 db    ? ;
.bss:000000000060C32E                 db    ? ;
.bss:000000000060C32F                 db    ? ;
.bss:000000000060C330                 db    ? ;
.bss:000000000060C331                 db    ? ;
.bss:000000000060C332                 db    ? ;
.bss:000000000060C333                 db    ? ;
.bss:000000000060C334                 db    ? ;
.bss:000000000060C335                 db    ? ;
.bss:000000000060C336                 db    ? ;
.bss:000000000060C337                 db    ? ;
.bss:000000000060C338                 db    ? ;
.bss:000000000060C339                 db    ? ;
.bss:000000000060C33A                 db    ? ;
.bss:000000000060C33B                 db    ? ;
.bss:000000000060C33C                 db    ? ;
.bss:000000000060C33D                 db    ? ;
.bss:000000000060C33E                 db    ? ;
.bss:000000000060C33F                 db    ? ;
.bss:000000000060C340                 db    ? ;
.bss:000000000060C341                 db    ? ;
.bss:000000000060C342                 db    ? ;
.bss:000000000060C343                 db    ? ;
.bss:000000000060C344                 db    ? ;
.bss:000000000060C345                 db    ? ;
.bss:000000000060C346                 db    ? ;
.bss:000000000060C347                 db    ? ;
.bss:000000000060C348                 db    ? ;
.bss:000000000060C349                 db    ? ;
.bss:000000000060C34A                 db    ? ;
.bss:000000000060C34B                 db    ? ;
.bss:000000000060C34C                 db    ? ;
.bss:000000000060C34D                 db    ? ;
.bss:000000000060C34E                 db    ? ;
.bss:000000000060C34F                 db    ? ;
.bss:000000000060C350                 db    ? ;
.bss:000000000060C351                 db    ? ;
.bss:000000000060C352                 db    ? ;
.bss:000000000060C353                 db    ? ;
.bss:000000000060C354                 db    ? ;
.bss:000000000060C355                 db    ? ;
.bss:000000000060C356                 db    ? ;
.bss:000000000060C357                 db    ? ;
.bss:000000000060C358                 db    ? ;
.bss:000000000060C359                 db    ? ;
.bss:000000000060C35A                 db    ? ;
.bss:000000000060C35B                 db    ? ;
.bss:000000000060C35C                 db    ? ;
.bss:000000000060C35D                 db    ? ;
.bss:000000000060C35E                 db    ? ;
.bss:000000000060C35F                 db    ? ;
.bss:000000000060C360                 db    ? ;
.bss:000000000060C361                 db    ? ;
.bss:000000000060C362                 db    ? ;
.bss:000000000060C363                 db    ? ;
.bss:000000000060C364                 db    ? ;
.bss:000000000060C365                 db    ? ;
.bss:000000000060C366                 db    ? ;
.bss:000000000060C367                 db    ? ;
.bss:000000000060C368                 db    ? ;
.bss:000000000060C369                 db    ? ;
.bss:000000000060C36A                 db    ? ;
.bss:000000000060C36B                 db    ? ;
.bss:000000000060C36C                 db    ? ;
.bss:000000000060C36D                 db    ? ;
.bss:000000000060C36E                 db    ? ;
.bss:000000000060C36F                 db    ? ;
.bss:000000000060C370                 db    ? ;
.bss:000000000060C371                 db    ? ;
.bss:000000000060C372                 db    ? ;
.bss:000000000060C373                 db    ? ;
.bss:000000000060C374                 db    ? ;
.bss:000000000060C375                 db    ? ;
.bss:000000000060C376                 db    ? ;
.bss:000000000060C377                 db    ? ;
.bss:000000000060C378                 db    ? ;
.bss:000000000060C379                 db    ? ;
.bss:000000000060C37A                 db    ? ;
.bss:000000000060C37B                 db    ? ;
.bss:000000000060C37C                 db    ? ;
.bss:000000000060C37D                 db    ? ;
.bss:000000000060C37E                 db    ? ;
.bss:000000000060C37F                 db    ? ;
.bss:000000000060C380                 db    ? ;
.bss:000000000060C381                 db    ? ;
.bss:000000000060C382                 db    ? ;
.bss:000000000060C383                 db    ? ;
.bss:000000000060C384                 db    ? ;
.bss:000000000060C385                 db    ? ;
.bss:000000000060C386                 db    ? ;
.bss:000000000060C387                 db    ? ;
.bss:000000000060C388                 db    ? ;
.bss:000000000060C389                 db    ? ;
.bss:000000000060C38A                 db    ? ;
.bss:000000000060C38B                 db    ? ;
.bss:000000000060C38C                 db    ? ;
.bss:000000000060C38D                 db    ? ;
.bss:000000000060C38E                 db    ? ;
.bss:000000000060C38F                 db    ? ;
.bss:000000000060C390 byte_60C390     db ?                    ; DATA XREF: __do_global_dtors_aux↑r
.bss:000000000060C390                                         ; __do_global_dtors_aux+12↑w
.bss:000000000060C391                 align 8
.bss:000000000060C398 dword_60C398    dd ?                    ; DATA XREF: sub_404398+4C↑w
.bss:000000000060C398                                         ; sub_404398+52↑r ...
.bss:000000000060C39C                 align 20h
.bss:000000000060C3A0 qword_60C3A0    dq ?                    ; DATA XREF: sub_400B97+14C↑w
.bss:000000000060C3A0                                         ; sub_401B84+83↑r
.bss:000000000060C3A8 qword_60C3A8    dq ?                    ; DATA XREF: sub_401B84:loc_401BB0↑r
.bss:000000000060C3A8                                         ; sub_401B84+3F↑w ...
.bss:000000000060C3B0 qword_60C3B0    dq ?                    ; DATA XREF: sub_4015E0+37E↑o
.bss:000000000060C3B0                                         ; sub_4015E0+39C↑r ...
.bss:000000000060C3B8 byte_60C3B8     db ?                    ; DATA XREF: sub_4019A0+1E↑r
.bss:000000000060C3B8                                         ; sub_4019A0:loc_4019DB↑w
.bss:000000000060C3B9                 align 20h
.bss:000000000060C3C0 qword_60C3C0    dq ?                    ; DATA XREF: randData+138↑r
.bss:000000000060C3C0                                         ; randData+142↑w ...
.bss:000000000060C3C8 byte_60C3C8     db ?                    ; DATA XREF: randData+8↑r
.bss:000000000060C3C8                                         ; randData+3A7↑w
.bss:000000000060C3C9 ; std::ios_base::Init std::__ioinit
.bss:000000000060C3C9 _ZStL8__ioinit  db    ? ;               ; DATA XREF: __static_initialization_and_destruction_0(int,int)+1D↑o
.bss:000000000060C3C9                                         ; __static_initialization_and_destruction_0(int,int)+30↑o
.bss:000000000060C3CA                 db    ? ;
.bss:000000000060C3CB                 db    ? ;
.bss:000000000060C3CC                 db    ? ;
.bss:000000000060C3CD                 db    ? ;
.bss:000000000060C3CE                 db    ? ;
.bss:000000000060C3CF                 db    ? ;
.bss:000000000060C3D0 qword_60C3D0    dq ?                    ; DATA XREF: sub_409E68+9↑r
.bss:000000000060C3D0                                         ; sub_409E68+1C0↑w ...
.bss:000000000060C3D8 qword_60C3D8    dq ?                    ; DATA XREF: sub_40A433+14↑r
.bss:000000000060C3D8                                         ; sub_40A433:loc_40A585↑r ...
.bss:000000000060C3E0                 public current_time
.bss:000000000060C3E0 ; time_t current_time
.bss:000000000060C3E0 current_time    dq ?                    ; DATA XREF: main:loc_409518↑r
.bss:000000000060C3E0                                         ; main+144↑o ...
.bss:000000000060C3E8                 public ntp_time
.bss:000000000060C3E8 ; time_t ntp_time
.bss:000000000060C3E8 ntp_time        dq ?                    ; DATA XREF: sub_400B97:loc_400CDC↑r
.bss:000000000060C3E8                                         ; sub_401B84+19↑r ...
.bss:000000000060C3E8 _bss            ends
.bss:000000000060C3E8
.prgend:000000000060C3F0 ; ===========================================================================
.prgend:000000000060C3F0
.prgend:000000000060C3F0 ; Segment type: Zero-length
.prgend:000000000060C3F0 _prgend         segment byte public '' use64
.prgend:000000000060C3F0 _end            label byte
.prgend:000000000060C3F0 _prgend         ends
.prgend:000000000060C3F0
extern:000000000060C3F8 ; ===========================================================================
extern:000000000060C3F8
extern:000000000060C3F8 ; Segment type: Externs
extern:000000000060C3F8 ; extern
extern:000000000060C3F8 ; std::ostream::operator<<(long)
extern:000000000060C3F8                 extrn _ZNSolsEl:near    ; DATA XREF: .got.plt:off_60C018↑o
extern:000000000060C400 ; int close(int fd)
extern:000000000060C400                 extrn close:near        ; DATA XREF: .got.plt:off_60C020↑o
extern:000000000060C408 ; char *asctime(const struct tm *tp)
extern:000000000060C408                 extrn asctime:near      ; DATA XREF: .got.plt:off_60C028↑o
extern:000000000060C410 ; int isatty(int fd)
extern:000000000060C410                 extrn isatty:near       ; DATA XREF: .got.plt:off_60C030↑o
extern:000000000060C418 ; struct hostent *gethostbyname(const char *name)
extern:000000000060C418                 extrn gethostbyname:near
extern:000000000060C418                                         ; DATA XREF: .got.plt:off_60C038↑o
extern:000000000060C420 ; uint16_t htons(uint16_t hostshort)
extern:000000000060C420                 extrn htons:near        ; DATA XREF: .got.plt:off_60C040↑o
extern:000000000060C428 ; _QWORD std::ios_base::Init::Init(std::ios_base::Init *__hidden this)
extern:000000000060C428                 extrn _ZNSt8ios_base4InitC1Ev:near
extern:000000000060C428                                         ; DATA XREF: .got.plt:off_60C048↑o
extern:000000000060C430 ; int __cdecl _libc_start_main(int (__cdecl *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)
extern:000000000060C430                 extrn __libc_start_main:near
extern:000000000060C430                                         ; CODE XREF: _start+24↑p
extern:000000000060C430                                         ; DATA XREF: .got:__libc_start_main_ptr↑o
extern:000000000060C438 ; ssize_t recv(int fd, void *buf, size_t n, int flags)
extern:000000000060C438                 extrn recv:near         ; DATA XREF: .got.plt:off_60C050↑o
extern:000000000060C440                 extrn __cxa_atexit:near ; DATA XREF: .got.plt:off_60C058↑o
extern:000000000060C448 ; _QWORD __cdecl std::ios_base::Init::~Init(std::ios_base::Init *__hidden this)
extern:000000000060C448                 extrn _ZNSt8ios_base4InitD1Ev:near
extern:000000000060C448                                         ; DATA XREF: .got:_ZNSt8ios_base4InitD1Ev_ptr↑o
extern:000000000060C450 ; std::basic_ostream<char, std::char_traits<char>> & std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, char const*)
extern:000000000060C450                 extrn _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc:near
extern:000000000060C450                                         ; DATA XREF: .got.plt:off_60C060↑o
extern:000000000060C458 ; uint32_t ntohl(uint32_t netlong)
extern:000000000060C458                 extrn ntohl:near        ; DATA XREF: .got.plt:off_60C068↑o
extern:000000000060C460 ; unsigned int sleep(unsigned int seconds)
extern:000000000060C460                 extrn sleep:near
extern:000000000060C468 ; int connect(int fd, const struct sockaddr *addr, socklen_t len)
extern:000000000060C468                 extrn connect:near      ; DATA XREF: .got.plt:off_60C078↑o
extern:000000000060C470 ; int stime(const time_t *when)
extern:000000000060C470                 extrn stime:near        ; DATA XREF: .got.plt:off_60C080↑o
extern:000000000060C478 ; int socket(int domain, int type, int protocol)
extern:000000000060C478                 extrn socket:near       ; DATA XREF: .got.plt:off_60C088↑o
extern:000000000060C480 ; ssize_t send(int fd, const void *buf, size_t n, int flags)
extern:000000000060C480                 extrn send:near         ; DATA XREF: .got.plt:off_60C090↑o
extern:000000000060C488 ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
extern:000000000060C488                 extrn _ZNSolsEPFRSoS_E:near
extern:000000000060C488                                         ; DATA XREF: .got.plt:off_60C098↑o
extern:000000000060C490 ; std::basic_ostream<char, std::char_traits<char>> & std::endl<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &)
extern:000000000060C490                 extrn _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_:near
extern:000000000060C490                                         ; DATA XREF: .got:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6__ptr↑o
extern:000000000060C498 ; struct tm *localtime(const time_t *timer)
extern:000000000060C498                 extrn localtime:near    ; DATA XREF: .got.plt:off_60C0A0↑o
extern:000000000060C4A0 ; time_t time(time_t *timer)
extern:000000000060C4A0                 extrn time:near         ; DATA XREF: .got.plt:off_60C0A8↑o
extern:000000000060C4A8                 extrn __gmon_start__:near ; weak
extern:000000000060C4A8                                         ; CODE XREF: _init_proc+10↑p
extern:000000000060C4A8                                         ; DATA XREF: .got:__gmon_start___ptr↑o
extern:000000000060C4A8
extern:000000000060C4A8
extern:000000000060C4A8                 end _start